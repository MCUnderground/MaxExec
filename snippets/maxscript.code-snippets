{
  "If Statement": {
    "prefix": "if",
    "body": [
      "if (${1:condition}) then",
      "(",
      "  ${2:-- code}",
      ")"
    ],
    "description": "Insert an if statement"
  },
  "If-Else Statement": {
    "prefix": "ifelse",
    "body": [
      "if (${1:condition}) then",
      "(",
      "  ${2:-- code}",
      ")",
      "else",
      "(",
      "  ${3:-- else code}",
      ")"
    ],
    "description": "Insert an if-else statement"
  },
  "If-Do Statement": {
    "prefix": "ifdo",
    "body": [
      "if (${1:condition}) do",
      "(",
      "  ${2:-- code}",
      ")"
    ],
    "description": "Insert an if-do statement"
  },
  "Case Statement": {
    "prefix": "case",
    "body": [
      "case (${1:expression}) of (",
      "  ${2:value1}: ${3:-- code}",
      "  ${4:value2}: ${5:-- code}",
      "  default: ${6:-- default code}",
      ")"
    ],
    "description": "Insert a switch statement"
  },
  "While Loop": {
    "prefix": "while",
    "body": [
      "while (${1:condition}) do",
      "(",
      "  ${2:-- code}",
      ")"
    ],
    "description": "Insert a while loop"
  },
  "For Loop (numeric)": {
    "prefix": "for",
    "body": [
      "for ${1:i} = ${2:1} to ${3:10} do",
      "(",
      "  ${4:-- code}",
      ")"
    ],
    "description": "Insert a numeric for loop"
  },
  "For Loop (each)": {
    "prefix": "foreach",
    "body": [
      "for ${1:item} in ${2:collection} do",
      "(",
      "  ${3:-- code}",
      ")"
    ],
    "description": "Insert a foreach loop"
  },
  "Function Declaration": {
    "prefix": "fn",
    "body": [
      "fn ${1:FunctionName} (${2:args}) =",
      "(",
      "  ${3:-- code}",
      ")"
    ],
    "description": "Define a MaxScript function"
  },
  "Struct Declaration": {
    "prefix": "struct",
    "body": [
      "struct ${1:StructName}",
      "(",
      "  ${2:-- properties or methods}",
      ")"
    ],
    "description": "Define a MaxScript struct"
  },
  "Rollout Declaration": {
    "prefix": "rollout",
    "body": [
      "rollout ${1:RolloutName} \"${2:Title}\"",
      "(",
      "  ${3:-- UI elements here}",
      ")"
    ],
    "description": "Define a MaxScript rollout"
  },
  "AssertReporter.clear": {
    "prefix": "AssertReporter.clear",
    "body": "AssertReporter.clear",
    "description": "clear from AssertReporter"
  },
  "AssertReporter.GetAssertFailures": {
    "prefix": "AssertReporter.GetAssertFailures",
    "body": "AssertReporter.GetAssertFailures",
    "description": "GetAssertFailures from AssertReporter"
  },
  "AssertReporter.GetAssertFailuresCount": {
    "prefix": "AssertReporter.GetAssertFailuresCount",
    "body": "AssertReporter.GetAssertFailuresCount",
    "description": "GetAssertFailuresCount from AssertReporter"
  },
  "AssertReporter.GetExceptionFailuresCount": {
    "prefix": "AssertReporter.GetExceptionFailuresCount",
    "body": "AssertReporter.GetExceptionFailuresCount",
    "description": "GetExceptionFailuresCount from AssertReporter"
  },
  "AssertReporter.GetMessages": {
    "prefix": "AssertReporter.GetMessages",
    "body": "AssertReporter.GetMessages",
    "description": "GetMessages from AssertReporter"
  },
  "AssertReporter.GetUserData": {
    "prefix": "AssertReporter.GetUserData",
    "body": "AssertReporter.GetUserData",
    "description": "GetUserData from AssertReporter"
  },
  "AssertReporter.LogAssertFailure": {
    "prefix": "AssertReporter.LogAssertFailure",
    "body": "AssertReporter.LogAssertFailure",
    "description": "LogAssertFailure from AssertReporter"
  },
  "AssertReporter.LogException": {
    "prefix": "AssertReporter.LogException",
    "body": "AssertReporter.LogException",
    "description": "LogException from AssertReporter"
  },
  "AssertReporter.LogMessage": {
    "prefix": "AssertReporter.LogMessage",
    "body": "AssertReporter.LogMessage",
    "description": "LogMessage from AssertReporter"
  },
  "AssertReporter.SetUserData": {
    "prefix": "AssertReporter.SetUserData",
    "body": "AssertReporter.SetUserData",
    "description": "SetUserData from AssertReporter"
  },
  "assetBrowser.gotoURL": {
    "prefix": "assetBrowser.gotoURL",
    "body": "assetBrowser.gotoURL",
    "description": "gotoURL from assetBrowser"
  },
  "AssetMetadata_StructDef.assetId": {
    "prefix": "AssetMetadata_StructDef.assetId",
    "body": "AssetMetadata_StructDef.assetId",
    "description": "assetId from AssetMetadata_StructDef"
  },
  "AssetMetadata_StructDef.filename": {
    "prefix": "AssetMetadata_StructDef.filename",
    "body": "AssetMetadata_StructDef.filename",
    "description": "filename from AssetMetadata_StructDef"
  },
  "AttachCtrl.getKey": {
    "prefix": "AttachCtrl.getKey",
    "body": "AttachCtrl.getKey",
    "description": "getKey from AttachCtrl"
  },
  "AttachCtrl.update": {
    "prefix": "AttachCtrl.update",
    "body": "AttachCtrl.update",
    "description": "update from AttachCtrl"
  },
  "autoBackup.enabled": {
    "prefix": "autoBackup.enabled",
    "body": "autoBackup.enabled",
    "description": "enabled from autoBackup"
  },
  "BezierDefaultParams.inTangentType": {
    "prefix": "BezierDefaultParams.inTangentType",
    "body": "BezierDefaultParams.inTangentType",
    "description": "inTangentType from BezierDefaultParams"
  },
  "biped.addFootprint": {
    "prefix": "biped.addFootprint",
    "body": "biped.addFootprint",
    "description": "addFootprint from biped"
  },
  "biped.addMultipleFootprints": {
    "prefix": "biped.addMultipleFootprints",
    "body": "biped.addMultipleFootprints",
    "description": "addMultipleFootprints from biped"
  },
  "biped.addNewKey": {
    "prefix": "biped.addNewKey",
    "body": "biped.addNewKey",
    "description": "addNewKey from biped"
  },
  "biped.addPrefClip": {
    "prefix": "biped.addPrefClip",
    "body": "biped.addPrefClip",
    "description": "addPrefClip from biped"
  },
  "biped.adjustTalentPose": {
    "prefix": "biped.adjustTalentPose",
    "body": "biped.adjustTalentPose",
    "description": "adjustTalentPose from biped"
  },
  "biped.attachXtra": {
    "prefix": "biped.attachXtra",
    "body": "biped.attachXtra",
    "description": "attachXtra from biped"
  },
  "biped.bendFootprints": {
    "prefix": "biped.bendFootprints",
    "body": "biped.bendFootprints",
    "description": "bendFootprints from biped"
  },
  "biped.clearAllAnimation": {
    "prefix": "biped.clearAllAnimation",
    "body": "biped.clearAllAnimation",
    "description": "clearAllAnimation from biped"
  },
  "biped.clearPrefClips": {
    "prefix": "biped.clearPrefClips",
    "body": "biped.clearPrefClips",
    "description": "clearPrefClips from biped"
  },
  "biped.clearSelectedAnimation": {
    "prefix": "biped.clearSelectedAnimation",
    "body": "biped.clearSelectedAnimation",
    "description": "clearSelectedAnimation from biped"
  },
  "biped.collapseAllPosSubAnims": {
    "prefix": "biped.collapseAllPosSubAnims",
    "body": "biped.collapseAllPosSubAnims",
    "description": "collapseAllPosSubAnims from biped"
  },
  "biped.collapseAllRotSubAnims": {
    "prefix": "biped.collapseAllRotSubAnims",
    "body": "biped.collapseAllRotSubAnims",
    "description": "collapseAllRotSubAnims from biped"
  },
  "biped.collapseAtLayer": {
    "prefix": "biped.collapseAtLayer",
    "body": "biped.collapseAtLayer",
    "description": "collapseAtLayer from biped"
  },
  "biped.collapseMoveAllMode": {
    "prefix": "biped.collapseMoveAllMode",
    "body": "biped.collapseMoveAllMode",
    "description": "collapseMoveAllMode from biped"
  },
  "biped.collapsePosSubAnims": {
    "prefix": "biped.collapsePosSubAnims",
    "body": "biped.collapsePosSubAnims",
    "description": "collapsePosSubAnims from biped"
  },
  "biped.collapseRotSubAnims": {
    "prefix": "biped.collapseRotSubAnims",
    "body": "biped.collapseRotSubAnims",
    "description": "collapseRotSubAnims from biped"
  },
  "biped.convertFromBuffer": {
    "prefix": "biped.convertFromBuffer",
    "body": "biped.convertFromBuffer",
    "description": "convertFromBuffer from biped"
  },
  "biped.convertToFootSteps": {
    "prefix": "biped.convertToFootSteps",
    "body": "biped.convertToFootSteps",
    "description": "convertToFootSteps from biped"
  },
  "biped.convertToFreeForm": {
    "prefix": "biped.convertToFreeForm",
    "body": "biped.convertToFreeForm",
    "description": "convertToFreeForm from biped"
  },
  "biped.copyBipPose": {
    "prefix": "biped.copyBipPose",
    "body": "biped.copyBipPose",
    "description": "copyBipPose from biped"
  },
  "biped.copyBipPosture": {
    "prefix": "biped.copyBipPosture",
    "body": "biped.copyBipPosture",
    "description": "copyBipPosture from biped"
  },
  "biped.copyBipTrack": {
    "prefix": "biped.copyBipTrack",
    "body": "biped.copyBipTrack",
    "description": "copyBipTrack from biped"
  },
  "biped.copyPosture": {
    "prefix": "biped.copyPosture",
    "body": "biped.copyPosture",
    "description": "copyPosture from biped"
  },
  "biped.createCopyCollection": {
    "prefix": "biped.createCopyCollection",
    "body": "biped.createCopyCollection",
    "description": "createCopyCollection from biped"
  },
  "biped.createLayer": {
    "prefix": "biped.createLayer",
    "body": "biped.createLayer",
    "description": "createLayer from biped"
  },
  "biped.createNew": {
    "prefix": "biped.createNew",
    "body": "biped.createNew",
    "description": "createNew from biped"
  },
  "biped.createPosSubAnims": {
    "prefix": "biped.createPosSubAnims",
    "body": "biped.createPosSubAnims",
    "description": "createPosSubAnims from biped"
  },
  "biped.createRotSubAnims": {
    "prefix": "biped.createRotSubAnims",
    "body": "biped.createRotSubAnims",
    "description": "createRotSubAnims from biped"
  },
  "biped.createScaleSubAnims": {
    "prefix": "biped.createScaleSubAnims",
    "body": "biped.createScaleSubAnims",
    "description": "createScaleSubAnims from biped"
  },
  "biped.createTwistPose": {
    "prefix": "biped.createTwistPose",
    "body": "biped.createTwistPose",
    "description": "createTwistPose from biped"
  },
  "biped.createXtra": {
    "prefix": "biped.createXtra",
    "body": "biped.createXtra",
    "description": "createXtra from biped"
  },
  "biped.createXtraOpposite": {
    "prefix": "biped.createXtraOpposite",
    "body": "biped.createXtraOpposite",
    "description": "createXtraOpposite from biped"
  },
  "biped.deleteAllCopies": {
    "prefix": "biped.deleteAllCopies",
    "body": "biped.deleteAllCopies",
    "description": "deleteAllCopies from biped"
  },
  "biped.deleteAllCopyCollections": {
    "prefix": "biped.deleteAllCopyCollections",
    "body": "biped.deleteAllCopyCollections",
    "description": "deleteAllCopyCollections from biped"
  },
  "biped.deleteCopy": {
    "prefix": "biped.deleteCopy",
    "body": "biped.deleteCopy",
    "description": "deleteCopy from biped"
  },
  "biped.deleteCopyCollection": {
    "prefix": "biped.deleteCopyCollection",
    "body": "biped.deleteCopyCollection",
    "description": "deleteCopyCollection from biped"
  },
  "biped.deleteLayer": {
    "prefix": "biped.deleteLayer",
    "body": "biped.deleteLayer",
    "description": "deleteLayer from biped"
  },
  "biped.deletePrefClip": {
    "prefix": "biped.deletePrefClip",
    "body": "biped.deletePrefClip",
    "description": "deletePrefClip from biped"
  },
  "biped.deleteTwistPose": {
    "prefix": "biped.deleteTwistPose",
    "body": "biped.deleteTwistPose",
    "description": "deleteTwistPose from biped"
  },
  "biped.deleteXtra": {
    "prefix": "biped.deleteXtra",
    "body": "biped.deleteXtra",
    "description": "deleteXtra from biped"
  },
  "biped.deselectKeys": {
    "prefix": "biped.deselectKeys",
    "body": "biped.deselectKeys",
    "description": "deselectKeys from biped"
  },
  "biped.displayPrefsDlg": {
    "prefix": "biped.displayPrefsDlg",
    "body": "biped.displayPrefsDlg",
    "description": "displayPrefsDlg from biped"
  },
  "biped.doSetMultipleKeysDlg": {
    "prefix": "biped.doSetMultipleKeysDlg",
    "body": "biped.doSetMultipleKeysDlg",
    "description": "doSetMultipleKeysDlg from biped"
  },
  "biped.fsAddSide": {
    "prefix": "biped.fsAddSide",
    "body": "biped.fsAddSide",
    "description": "fsAddSide from biped"
  },
  "biped.getClavicleVals": {
    "prefix": "biped.getClavicleVals",
    "body": "biped.getClavicleVals",
    "description": "getClavicleVals from biped"
  },
  "biped.getClipAtTime": {
    "prefix": "biped.getClipAtTime",
    "body": "biped.getClipAtTime",
    "description": "getClipAtTime from biped"
  },
  "biped.getCopyCollection": {
    "prefix": "biped.getCopyCollection",
    "body": "biped.getCopyCollection",
    "description": "getCopyCollection from biped"
  },
  "biped.getCopyName": {
    "prefix": "biped.getCopyName",
    "body": "biped.getCopyName",
    "description": "getCopyName from biped"
  },
  "biped.getCurrentClip": {
    "prefix": "biped.getCurrentClip",
    "body": "biped.getCurrentClip",
    "description": "getCurrentClip from biped"
  },
  "biped.getCurrentLayer": {
    "prefix": "biped.getCurrentLayer",
    "body": "biped.getCurrentLayer",
    "description": "getCurrentLayer from biped"
  },
  "biped.getCurrentRange": {
    "prefix": "biped.getCurrentRange",
    "body": "biped.getCurrentRange",
    "description": "getCurrentRange from biped"
  },
  "biped.getEulerActive": {
    "prefix": "biped.getEulerActive",
    "body": "biped.getEulerActive",
    "description": "getEulerActive from biped"
  },
  "biped.getEulerOrder": {
    "prefix": "biped.getEulerOrder",
    "body": "biped.getEulerOrder",
    "description": "getEulerOrder from biped"
  },
  "biped.getFingerVal": {
    "prefix": "biped.getFingerVal",
    "body": "biped.getFingerVal",
    "description": "getFingerVal from biped"
  },
  "biped.getHingeVal": {
    "prefix": "biped.getHingeVal",
    "body": "biped.getHingeVal",
    "description": "getHingeVal from biped"
  },
  "biped.getHorizontalControl": {
    "prefix": "biped.getHorizontalControl",
    "body": "biped.getHorizontalControl",
    "description": "getHorizontalControl from biped"
  },
  "biped.getHorseAnkleVal": {
    "prefix": "biped.getHorseAnkleVal",
    "body": "biped.getHorseAnkleVal",
    "description": "getHorseAnkleVal from biped"
  },
  "biped.getIdLink": {
    "prefix": "biped.getIdLink",
    "body": "biped.getIdLink",
    "description": "getIdLink from biped"
  },
  "biped.getIKActive": {
    "prefix": "biped.getIKActive",
    "body": "biped.getIKActive",
    "description": "getIKActive from biped"
  },
  "biped.getKey": {
    "prefix": "biped.getKey",
    "body": "biped.getKey",
    "description": "getKey from biped"
  },
  "biped.getLayerActive": {
    "prefix": "biped.getLayerActive",
    "body": "biped.getLayerActive",
    "description": "getLayerActive from biped"
  },
  "biped.getLayerName": {
    "prefix": "biped.getLayerName",
    "body": "biped.getLayerName",
    "description": "getLayerName from biped"
  },
  "biped.getLimbRetargetState": {
    "prefix": "biped.getLimbRetargetState",
    "body": "biped.getLimbRetargetState",
    "description": "getLimbRetargetState from biped"
  },
  "biped.getMultipleFSParams": {
    "prefix": "biped.getMultipleFSParams",
    "body": "biped.getMultipleFSParams",
    "description": "getMultipleFSParams from biped"
  },
  "biped.getNode": {
    "prefix": "biped.getNode",
    "body": "biped.getNode",
    "description": "getNode from biped"
  },
  "biped.getParentNodePos": {
    "prefix": "biped.getParentNodePos",
    "body": "biped.getParentNodePos",
    "description": "getParentNodePos from biped"
  },
  "biped.getParentNodeRot": {
    "prefix": "biped.getParentNodeRot",
    "body": "biped.getParentNodeRot",
    "description": "getParentNodeRot from biped"
  },
  "biped.getPelvisVal": {
    "prefix": "biped.getPelvisVal",
    "body": "biped.getPelvisVal",
    "description": "getPelvisVal from biped"
  },
  "biped.getPosParentNode": {
    "prefix": "biped.getPosParentNode",
    "body": "biped.getPosParentNode",
    "description": "getPosParentNode from biped"
  },
  "biped.getPrefClip": {
    "prefix": "biped.getPrefClip",
    "body": "biped.getPrefClip",
    "description": "getPrefClip from biped"
  },
  "biped.getPrefClipProb": {
    "prefix": "biped.getPrefClipProb",
    "body": "biped.getPrefClipProb",
    "description": "getPrefClipProb from biped"
  },
  "biped.getRetargetRefBip": {
    "prefix": "biped.getRetargetRefBip",
    "body": "biped.getRetargetRefBip",
    "description": "getRetargetRefBip from biped"
  },
  "biped.getRotParentNode": {
    "prefix": "biped.getRotParentNode",
    "body": "biped.getRotParentNode",
    "description": "getRotParentNode from biped"
  },
  "biped.getTransform": {
    "prefix": "biped.getTransform",
    "body": "biped.getTransform",
    "description": "getTransform from biped"
  },
  "biped.getTurnControl": {
    "prefix": "biped.getTurnControl",
    "body": "biped.getTurnControl",
    "description": "getTurnControl from biped"
  },
  "biped.getTwistPoseBias": {
    "prefix": "biped.getTwistPoseBias",
    "body": "biped.getTwistPoseBias",
    "description": "getTwistPoseBias from biped"
  },
  "biped.getTwistPoseName": {
    "prefix": "biped.getTwistPoseName",
    "body": "biped.getTwistPoseName",
    "description": "getTwistPoseName from biped"
  },
  "biped.getTwistPoseTwist": {
    "prefix": "biped.getTwistPoseTwist",
    "body": "biped.getTwistPoseTwist",
    "description": "getTwistPoseTwist from biped"
  },
  "biped.getTwistStartId": {
    "prefix": "biped.getTwistStartId",
    "body": "biped.getTwistStartId",
    "description": "getTwistStartId from biped"
  },
  "biped.getVerticalControl": {
    "prefix": "biped.getVerticalControl",
    "body": "biped.getVerticalControl",
    "description": "getVerticalControl from biped"
  },
  "biped.getXtraName": {
    "prefix": "biped.getXtraName",
    "body": "biped.getXtraName",
    "description": "getXtraName from biped"
  },
  "biped.getXtraOpposite": {
    "prefix": "biped.getXtraOpposite",
    "body": "biped.getXtraOpposite",
    "description": "getXtraOpposite from biped"
  },
  "biped.isPrefClip": {
    "prefix": "biped.isPrefClip",
    "body": "biped.isPrefClip",
    "description": "isPrefClip from biped"
  },
  "biped.loadBipedAnimationLayer": {
    "prefix": "biped.loadBipedAnimationLayer",
    "body": "biped.loadBipedAnimationLayer",
    "description": "loadBipedAnimationLayer from biped"
  },
  "biped.loadBipedBaseAnimationLayer": {
    "prefix": "biped.loadBipedBaseAnimationLayer",
    "body": "biped.loadBipedBaseAnimationLayer",
    "description": "loadBipedBaseAnimationLayer from biped"
  },
  "biped.loadBipFile": {
    "prefix": "biped.loadBipFile",
    "body": "biped.loadBipFile",
    "description": "loadBipFile from biped"
  },
  "biped.loadBipFileDlg": {
    "prefix": "biped.loadBipFileDlg",
    "body": "biped.loadBipFileDlg",
    "description": "loadBipFileDlg from biped"
  },
  "biped.loadCopyPasteFile": {
    "prefix": "biped.loadCopyPasteFile",
    "body": "biped.loadCopyPasteFile",
    "description": "loadCopyPasteFile from biped"
  },
  "biped.loadFigFile": {
    "prefix": "biped.loadFigFile",
    "body": "biped.loadFigFile",
    "description": "loadFigFile from biped"
  },
  "biped.loadFigJustTwists": {
    "prefix": "biped.loadFigJustTwists",
    "body": "biped.loadFigJustTwists",
    "description": "loadFigJustTwists from biped"
  },
  "biped.loadFigNoTwists": {
    "prefix": "biped.loadFigNoTwists",
    "body": "biped.loadFigNoTwists",
    "description": "loadFigNoTwists from biped"
  },
  "biped.loadMocapFile": {
    "prefix": "biped.loadMocapFile",
    "body": "biped.loadMocapFile",
    "description": "loadMocapFile from biped"
  },
  "biped.loadStpFile": {
    "prefix": "biped.loadStpFile",
    "body": "biped.loadStpFile",
    "description": "loadStpFile from biped"
  },
  "biped.maxNumLinks": {
    "prefix": "biped.maxNumLinks",
    "body": "biped.maxNumLinks",
    "description": "maxNumLinks from biped"
  },
  "biped.maxNumNodes": {
    "prefix": "biped.maxNumNodes",
    "body": "biped.maxNumNodes",
    "description": "maxNumNodes from biped"
  },
  "biped.maxTwistLinks": {
    "prefix": "biped.maxTwistLinks",
    "body": "biped.maxTwistLinks",
    "description": "maxTwistLinks from biped"
  },
  "biped.maxTwistNodes": {
    "prefix": "biped.maxTwistNodes",
    "body": "biped.maxTwistNodes",
    "description": "maxTwistNodes from biped"
  },
  "biped.mirror": {
    "prefix": "biped.mirror",
    "body": "biped.mirror",
    "description": "mirror from biped"
  },
  "biped.mirrorInPlace": {
    "prefix": "biped.mirrorInPlace",
    "body": "biped.mirrorInPlace",
    "description": "mirrorInPlace from biped"
  },
  "biped.moveKeys": {
    "prefix": "biped.moveKeys",
    "body": "biped.moveKeys",
    "description": "moveKeys from biped"
  },
  "biped.multipleFSDlg": {
    "prefix": "biped.multipleFSDlg",
    "body": "biped.multipleFSDlg",
    "description": "multipleFSDlg from biped"
  },
  "biped.newFootprintKeys": {
    "prefix": "biped.newFootprintKeys",
    "body": "biped.newFootprintKeys",
    "description": "newFootprintKeys from biped"
  },
  "biped.numCopies": {
    "prefix": "biped.numCopies",
    "body": "biped.numCopies",
    "description": "numCopies from biped"
  },
  "biped.numCopyCollections": {
    "prefix": "biped.numCopyCollections",
    "body": "biped.numCopyCollections",
    "description": "numCopyCollections from biped"
  },
  "biped.numLayers": {
    "prefix": "biped.numLayers",
    "body": "biped.numLayers",
    "description": "numLayers from biped"
  },
  "biped.numPrefClips": {
    "prefix": "biped.numPrefClips",
    "body": "biped.numPrefClips",
    "description": "numPrefClips from biped"
  },
  "biped.numTwistPoses": {
    "prefix": "biped.numTwistPoses",
    "body": "biped.numTwistPoses",
    "description": "numTwistPoses from biped"
  },
  "biped.pasteBipPose": {
    "prefix": "biped.pasteBipPose",
    "body": "biped.pasteBipPose",
    "description": "pasteBipPose from biped"
  },
  "biped.pasteBipPosture": {
    "prefix": "biped.pasteBipPosture",
    "body": "biped.pasteBipPosture",
    "description": "pasteBipPosture from biped"
  },
  "biped.pasteBipTrack": {
    "prefix": "biped.pasteBipTrack",
    "body": "biped.pasteBipTrack",
    "description": "pasteBipTrack from biped"
  },
  "biped.pasteFromBuffer": {
    "prefix": "biped.pasteFromBuffer",
    "body": "biped.pasteFromBuffer",
    "description": "pasteFromBuffer from biped"
  },
  "biped.pastePosture": {
    "prefix": "biped.pastePosture",
    "body": "biped.pastePosture",
    "description": "pastePosture from biped"
  },
  "biped.pastePostureToXtras": {
    "prefix": "biped.pastePostureToXtras",
    "body": "biped.pastePostureToXtras",
    "description": "pastePostureToXtras from biped"
  },
  "biped.pasteTrackToXtras": {
    "prefix": "biped.pasteTrackToXtras",
    "body": "biped.pasteTrackToXtras",
    "description": "pasteTrackToXtras from biped"
  },
  "biped.resetAllLimbKeys": {
    "prefix": "biped.resetAllLimbKeys",
    "body": "biped.resetAllLimbKeys",
    "description": "resetAllLimbKeys from biped"
  },
  "biped.RetargetToBaseLayer": {
    "prefix": "biped.RetargetToBaseLayer",
    "body": "biped.RetargetToBaseLayer",
    "description": "RetargetToBaseLayer from biped"
  },
  "biped.RetargetToReferenceBiped": {
    "prefix": "biped.RetargetToReferenceBiped",
    "body": "biped.RetargetToReferenceBiped",
    "description": "RetargetToReferenceBiped from biped"
  },
  "biped.saveBipedAnimationLayer": {
    "prefix": "biped.saveBipedAnimationLayer",
    "body": "biped.saveBipedAnimationLayer",
    "description": "saveBipedAnimationLayer from biped"
  },
  "biped.saveBipedBaseAnimationLayer": {
    "prefix": "biped.saveBipedBaseAnimationLayer",
    "body": "biped.saveBipedBaseAnimationLayer",
    "description": "saveBipedBaseAnimationLayer from biped"
  },
  "biped.saveBipFile": {
    "prefix": "biped.saveBipFile",
    "body": "biped.saveBipFile",
    "description": "saveBipFile from biped"
  },
  "biped.saveBipFileDlg": {
    "prefix": "biped.saveBipFileDlg",
    "body": "biped.saveBipFileDlg",
    "description": "saveBipFileDlg from biped"
  },
  "biped.saveBipFileSegment": {
    "prefix": "biped.saveBipFileSegment",
    "body": "biped.saveBipFileSegment",
    "description": "saveBipFileSegment from biped"
  },
  "biped.saveCopyPasteFile": {
    "prefix": "biped.saveCopyPasteFile",
    "body": "biped.saveCopyPasteFile",
    "description": "saveCopyPasteFile from biped"
  },
  "biped.saveFigFile": {
    "prefix": "biped.saveFigFile",
    "body": "biped.saveFigFile",
    "description": "saveFigFile from biped"
  },
  "biped.saveStpFile": {
    "prefix": "biped.saveStpFile",
    "body": "biped.saveStpFile",
    "description": "saveStpFile from biped"
  },
  "biped.saveTalentFigFile": {
    "prefix": "biped.saveTalentFigFile",
    "body": "biped.saveTalentFigFile",
    "description": "saveTalentFigFile from biped"
  },
  "biped.saveTalentPoseFile": {
    "prefix": "biped.saveTalentPoseFile",
    "body": "biped.saveTalentPoseFile",
    "description": "saveTalentPoseFile from biped"
  },
  "biped.scaleFootprints": {
    "prefix": "biped.scaleFootprints",
    "body": "biped.scaleFootprints",
    "description": "scaleFootprints from biped"
  },
  "biped.selectKeys": {
    "prefix": "biped.selectKeys",
    "body": "biped.selectKeys",
    "description": "selectKeys from biped"
  },
  "biped.setCopyName": {
    "prefix": "biped.setCopyName",
    "body": "biped.setCopyName",
    "description": "setCopyName from biped"
  },
  "biped.setCurrentCopyCollection": {
    "prefix": "biped.setCurrentCopyCollection",
    "body": "biped.setCurrentCopyCollection",
    "description": "setCurrentCopyCollection from biped"
  },
  "biped.setCurrentLayer": {
    "prefix": "biped.setCurrentLayer",
    "body": "biped.setCurrentLayer",
    "description": "setCurrentLayer from biped"
  },
  "biped.setDefaultTwistPoses": {
    "prefix": "biped.setDefaultTwistPoses",
    "body": "biped.setDefaultTwistPoses",
    "description": "setDefaultTwistPoses from biped"
  },
  "biped.setEulerActive": {
    "prefix": "biped.setEulerActive",
    "body": "biped.setEulerActive",
    "description": "setEulerActive from biped"
  },
  "biped.setEulerOrder": {
    "prefix": "biped.setEulerOrder",
    "body": "biped.setEulerOrder",
    "description": "setEulerOrder from biped"
  },
  "biped.setFreeKey": {
    "prefix": "biped.setFreeKey",
    "body": "biped.setFreeKey",
    "description": "setFreeKey from biped"
  },
  "biped.setKey": {
    "prefix": "biped.setKey",
    "body": "biped.setKey",
    "description": "setKey from biped"
  },
  "biped.setLayerActive": {
    "prefix": "biped.setLayerActive",
    "body": "biped.setLayerActive",
    "description": "setLayerActive from biped"
  },
  "biped.setLayerName": {
    "prefix": "biped.setLayerName",
    "body": "biped.setLayerName",
    "description": "setLayerName from biped"
  },
  "biped.setLimbRetargetState": {
    "prefix": "biped.setLimbRetargetState",
    "body": "biped.setLimbRetargetState",
    "description": "setLimbRetargetState from biped"
  },
  "biped.setMultipleKeys": {
    "prefix": "biped.setMultipleKeys",
    "body": "biped.setMultipleKeys",
    "description": "setMultipleKeys from biped"
  },
  "biped.setPlantedKey": {
    "prefix": "biped.setPlantedKey",
    "body": "biped.setPlantedKey",
    "description": "setPlantedKey from biped"
  },
  "biped.setPosSubAnim": {
    "prefix": "biped.setPosSubAnim",
    "body": "biped.setPosSubAnim",
    "description": "setPosSubAnim from biped"
  },
  "biped.setQuaternionActive": {
    "prefix": "biped.setQuaternionActive",
    "body": "biped.setQuaternionActive",
    "description": "setQuaternionActive from biped"
  },
  "biped.setRetargetRefBip": {
    "prefix": "biped.setRetargetRefBip",
    "body": "biped.setRetargetRefBip",
    "description": "setRetargetRefBip from biped"
  },
  "biped.setRotSubAnim": {
    "prefix": "biped.setRotSubAnim",
    "body": "biped.setRotSubAnim",
    "description": "setRotSubAnim from biped"
  },
  "biped.setScaleSubAnim": {
    "prefix": "biped.setScaleSubAnim",
    "body": "biped.setScaleSubAnim",
    "description": "setScaleSubAnim from biped"
  },
  "biped.setSelectedKey": {
    "prefix": "biped.setSelectedKey",
    "body": "biped.setSelectedKey",
    "description": "setSelectedKey from biped"
  },
  "biped.setSlidingKey": {
    "prefix": "biped.setSlidingKey",
    "body": "biped.setSlidingKey",
    "description": "setSlidingKey from biped"
  },
  "biped.setSnapKey": {
    "prefix": "biped.setSnapKey",
    "body": "biped.setSnapKey",
    "description": "setSnapKey from biped"
  },
  "biped.setTransform": {
    "prefix": "biped.setTransform",
    "body": "biped.setTransform",
    "description": "setTransform from biped"
  },
  "biped.setTwistPose": {
    "prefix": "biped.setTwistPose",
    "body": "biped.setTwistPose",
    "description": "setTwistPose from biped"
  },
  "biped.setTwistPoseBias": {
    "prefix": "biped.setTwistPoseBias",
    "body": "biped.setTwistPoseBias",
    "description": "setTwistPoseBias from biped"
  },
  "biped.setTwistPoseName": {
    "prefix": "biped.setTwistPoseName",
    "body": "biped.setTwistPoseName",
    "description": "setTwistPoseName from biped"
  },
  "biped.setTwistPoseTwist": {
    "prefix": "biped.setTwistPoseTwist",
    "body": "biped.setTwistPoseTwist",
    "description": "setTwistPoseTwist from biped"
  },
  "biped.setXtraName": {
    "prefix": "biped.setXtraName",
    "body": "biped.setXtraName",
    "description": "setXtraName from biped"
  },
  "biped.smoothTwist": {
    "prefix": "biped.smoothTwist",
    "body": "biped.smoothTwist",
    "description": "smoothTwist from biped"
  },
  "biped.unifyMotion": {
    "prefix": "biped.unifyMotion",
    "body": "biped.unifyMotion",
    "description": "unifyMotion from biped"
  },
  "biped.zeroAll": {
    "prefix": "biped.zeroAll",
    "body": "biped.zeroAll",
    "description": "zeroAll from biped"
  },
  "biped.zeroTwist": {
    "prefix": "biped.zeroTwist",
    "body": "biped.zeroTwist",
    "description": "zeroTwist from biped"
  },
  "bit.and": {
    "prefix": "bit.and",
    "body": "bit.and",
    "description": "and from bit"
  },
  "bit.doubleAsInt64": {
    "prefix": "bit.doubleAsInt64",
    "body": "bit.doubleAsInt64",
    "description": "doubleAsInt64 from bit"
  },
  "bit.flip": {
    "prefix": "bit.flip",
    "body": "bit.flip",
    "description": "flip from bit"
  },
  "bit.floatAsInt": {
    "prefix": "bit.floatAsInt",
    "body": "bit.floatAsInt",
    "description": "floatAsInt from bit"
  },
  "bit.get": {
    "prefix": "bit.get",
    "body": "bit.get",
    "description": "get from bit"
  },
  "bit.hexAsInt": {
    "prefix": "bit.hexAsInt",
    "body": "bit.hexAsInt",
    "description": "hexAsInt from bit"
  },
  "bit.int64AsDouble": {
    "prefix": "bit.int64AsDouble",
    "body": "bit.int64AsDouble",
    "description": "int64AsDouble from bit"
  },
  "bit.intAsChar": {
    "prefix": "bit.intAsChar",
    "body": "bit.intAsChar",
    "description": "intAsChar from bit"
  },
  "bit.intAsFloat": {
    "prefix": "bit.intAsFloat",
    "body": "bit.intAsFloat",
    "description": "intAsFloat from bit"
  },
  "bit.intAsHex": {
    "prefix": "bit.intAsHex",
    "body": "bit.intAsHex",
    "description": "intAsHex from bit"
  },
  "bit.isFinite": {
    "prefix": "bit.isFinite",
    "body": "bit.isFinite",
    "description": "isFinite from bit"
  },
  "bit.isNAN": {
    "prefix": "bit.isNAN",
    "body": "bit.isNAN",
    "description": "isNAN from bit"
  },
  "bit.not": {
    "prefix": "bit.not",
    "body": "bit.not",
    "description": "not from bit"
  },
  "bit.or": {
    "prefix": "bit.or",
    "body": "bit.or",
    "description": "or from bit"
  },
  "bit.set": {
    "prefix": "bit.set",
    "body": "bit.set",
    "description": "set from bit"
  },
  "bit.shift": {
    "prefix": "bit.shift",
    "body": "bit.shift",
    "description": "shift from bit"
  },
  "bit.swapBytes": {
    "prefix": "bit.swapBytes",
    "body": "bit.swapBytes",
    "description": "swapBytes from bit"
  },
  "bit.xor": {
    "prefix": "bit.xor",
    "body": "bit.xor",
    "description": "xor from bit"
  },
  "boolObj.GetBoolCutType": {
    "prefix": "boolObj.GetBoolCutType",
    "body": "boolObj.GetBoolCutType",
    "description": "GetBoolCutType from boolObj"
  },
  "boolObj.GetBoolOp": {
    "prefix": "boolObj.GetBoolOp",
    "body": "boolObj.GetBoolOp",
    "description": "GetBoolOp from boolObj"
  },
  "boolObj.GetDisplayResult": {
    "prefix": "boolObj.GetDisplayResult",
    "body": "boolObj.GetDisplayResult",
    "description": "GetDisplayResult from boolObj"
  },
  "boolObj.GetOperandSel": {
    "prefix": "boolObj.GetOperandSel",
    "body": "boolObj.GetOperandSel",
    "description": "GetOperandSel from boolObj"
  },
  "boolObj.GetOptimize": {
    "prefix": "boolObj.GetOptimize",
    "body": "boolObj.GetOptimize",
    "description": "GetOptimize from boolObj"
  },
  "boolObj.GetShowHiddenOps": {
    "prefix": "boolObj.GetShowHiddenOps",
    "body": "boolObj.GetShowHiddenOps",
    "description": "GetShowHiddenOps from boolObj"
  },
  "boolObj.GetUpdateMode": {
    "prefix": "boolObj.GetUpdateMode",
    "body": "boolObj.GetUpdateMode",
    "description": "GetUpdateMode from boolObj"
  },
  "boolObj.SetBoolCutType": {
    "prefix": "boolObj.SetBoolCutType",
    "body": "boolObj.SetBoolCutType",
    "description": "SetBoolCutType from boolObj"
  },
  "boolObj.SetBoolOp": {
    "prefix": "boolObj.SetBoolOp",
    "body": "boolObj.SetBoolOp",
    "description": "SetBoolOp from boolObj"
  },
  "boolObj.SetDisplayResult": {
    "prefix": "boolObj.SetDisplayResult",
    "body": "boolObj.SetDisplayResult",
    "description": "SetDisplayResult from boolObj"
  },
  "boolObj.setOperandB": {
    "prefix": "boolObj.setOperandB",
    "body": "boolObj.setOperandB",
    "description": "setOperandB from boolObj"
  },
  "boolObj.SetOperandSel": {
    "prefix": "boolObj.SetOperandSel",
    "body": "boolObj.SetOperandSel",
    "description": "SetOperandSel from boolObj"
  },
  "boolObj.SetOptimize": {
    "prefix": "boolObj.SetOptimize",
    "body": "boolObj.SetOptimize",
    "description": "SetOptimize from boolObj"
  },
  "boolObj.SetShowHiddenOps": {
    "prefix": "boolObj.SetShowHiddenOps",
    "body": "boolObj.SetShowHiddenOps",
    "description": "SetShowHiddenOps from boolObj"
  },
  "boolObj.SetUpdateMode": {
    "prefix": "boolObj.SetUpdateMode",
    "body": "boolObj.SetUpdateMode",
    "description": "SetUpdateMode from boolObj"
  },
  "BRDFInfo.brdfName": {
    "prefix": "BRDFInfo.brdfName",
    "body": "BRDFInfo.brdfName",
    "description": "brdfName from BRDFInfo"
  },
  "BRDFInfo.is2Sided": {
    "prefix": "BRDFInfo.is2Sided",
    "body": "BRDFInfo.is2Sided",
    "description": "is2Sided from BRDFInfo"
  },
  "BRDFInfo.volumeName": {
    "prefix": "BRDFInfo.volumeName",
    "body": "BRDFInfo.volumeName",
    "description": "volumeName from BRDFInfo"
  },
  "cacheOps.ClearChannel": {
    "prefix": "cacheOps.ClearChannel",
    "body": "cacheOps.ClearChannel",
    "description": "ClearChannel from cacheOps"
  },
  "cacheOps.DisableBelow": {
    "prefix": "cacheOps.DisableBelow",
    "body": "cacheOps.DisableBelow",
    "description": "DisableBelow from cacheOps"
  },
  "cacheOps.EnableBelow": {
    "prefix": "cacheOps.EnableBelow",
    "body": "cacheOps.EnableBelow",
    "description": "EnableBelow from cacheOps"
  },
  "cacheOps.RecordCache": {
    "prefix": "cacheOps.RecordCache",
    "body": "cacheOps.RecordCache",
    "description": "RecordCache from cacheOps"
  },
  "cacheOps.reload": {
    "prefix": "cacheOps.reload",
    "body": "cacheOps.reload",
    "description": "reload from cacheOps"
  },
  "cacheOps.SetChannel": {
    "prefix": "cacheOps.SetChannel",
    "body": "cacheOps.SetChannel",
    "description": "SetChannel from cacheOps"
  },
  "callbacks.addScript": {
    "prefix": "callbacks.addScript",
    "body": "callbacks.addScript",
    "description": "addScript from callbacks"
  },
  "callbacks.broadcastCallback": {
    "prefix": "callbacks.broadcastCallback",
    "body": "callbacks.broadcastCallback",
    "description": "broadcastCallback from callbacks"
  },
  "callbacks.removeScripts": {
    "prefix": "callbacks.removeScripts",
    "body": "callbacks.removeScripts",
    "description": "removeScripts from callbacks"
  },
  "callbacks.show": {
    "prefix": "callbacks.show",
    "body": "callbacks.show",
    "description": "show from callbacks"
  },
  "cameraFOV.CurFOVtoFOV": {
    "prefix": "cameraFOV.CurFOVtoFOV",
    "body": "cameraFOV.CurFOVtoFOV",
    "description": "CurFOVtoFOV from cameraFOV"
  },
  "cameraFOV.FOVtoCurFOV": {
    "prefix": "cameraFOV.FOVtoCurFOV",
    "body": "cameraFOV.FOVtoCurFOV",
    "description": "FOVtoCurFOV from cameraFOV"
  },
  "cameraFOV.FOVtoMM": {
    "prefix": "cameraFOV.FOVtoMM",
    "body": "cameraFOV.FOVtoMM",
    "description": "FOVtoMM from cameraFOV"
  },
  "CAT_ParamBlock.default": {
    "prefix": "CAT_ParamBlock.default",
    "body": "CAT_ParamBlock.default",
    "description": "default from CAT_ParamBlock"
  },
  "CAT_ParamBlock.name": {
    "prefix": "CAT_ParamBlock.name",
    "body": "CAT_ParamBlock.name",
    "description": "name from CAT_ParamBlock"
  },
  "CAT_ParamBlock.OrigName": {
    "prefix": "CAT_ParamBlock.OrigName",
    "body": "CAT_ParamBlock.OrigName",
    "description": "OrigName from CAT_ParamBlock"
  },
  "CAT_ParamBlock.ui": {
    "prefix": "CAT_ParamBlock.ui",
    "body": "CAT_ParamBlock.ui",
    "description": "ui from CAT_ParamBlock"
  },
  "CAT_UIItem.align": {
    "prefix": "CAT_UIItem.align",
    "body": "CAT_UIItem.align",
    "description": "align from CAT_UIItem"
  },
  "CAT_UIItem.alpha": {
    "prefix": "CAT_UIItem.alpha",
    "body": "CAT_UIItem.alpha",
    "description": "alpha from CAT_UIItem"
  },
  "CAT_UIItem.Array": {
    "prefix": "CAT_UIItem.Array",
    "body": "CAT_UIItem.Array",
    "description": "Array from CAT_UIItem"
  },
  "CAT_UIItem.checked": {
    "prefix": "CAT_UIItem.checked",
    "body": "CAT_UIItem.checked",
    "description": "checked from CAT_UIItem"
  },
  "CAT_UIItem.color": {
    "prefix": "CAT_UIItem.color",
    "body": "CAT_UIItem.color",
    "description": "color from CAT_UIItem"
  },
  "CAT_UIItem.default": {
    "prefix": "CAT_UIItem.default",
    "body": "CAT_UIItem.default",
    "description": "default from CAT_UIItem"
  },
  "CAT_UIItem.enabled": {
    "prefix": "CAT_UIItem.enabled",
    "body": "CAT_UIItem.enabled",
    "description": "enabled from CAT_UIItem"
  },
  "CAT_UIItem.height": {
    "prefix": "CAT_UIItem.height",
    "body": "CAT_UIItem.height",
    "description": "height from CAT_UIItem"
  },
  "CAT_UIItem.highlightColor": {
    "prefix": "CAT_UIItem.highlightColor",
    "body": "CAT_UIItem.highlightColor",
    "description": "highlightColor from CAT_UIItem"
  },
  "CAT_UIItem.labelOnTop": {
    "prefix": "CAT_UIItem.labelOnTop",
    "body": "CAT_UIItem.labelOnTop",
    "description": "labelOnTop from CAT_UIItem"
  },
  "CAT_UIItem.name": {
    "prefix": "CAT_UIItem.name",
    "body": "CAT_UIItem.name",
    "description": "name from CAT_UIItem"
  },
  "CAT_UIItem.offset": {
    "prefix": "CAT_UIItem.offset",
    "body": "CAT_UIItem.offset",
    "description": "offset from CAT_UIItem"
  },
  "CAT_UIItem.orient": {
    "prefix": "CAT_UIItem.orient",
    "body": "CAT_UIItem.orient",
    "description": "orient from CAT_UIItem"
  },
  "CAT_UIItem.range": {
    "prefix": "CAT_UIItem.range",
    "body": "CAT_UIItem.range",
    "description": "range from CAT_UIItem"
  },
  "CAT_UIItem.String": {
    "prefix": "CAT_UIItem.String",
    "body": "CAT_UIItem.String",
    "description": "String from CAT_UIItem"
  },
  "CAT_UIItem.ticks": {
    "prefix": "CAT_UIItem.ticks",
    "body": "CAT_UIItem.ticks",
    "description": "ticks from CAT_UIItem"
  },
  "CAT_UIItem.type": {
    "prefix": "CAT_UIItem.type",
    "body": "CAT_UIItem.type",
    "description": "type from CAT_UIItem"
  },
  "CAT_UIItem.ui": {
    "prefix": "CAT_UIItem.ui",
    "body": "CAT_UIItem.ui",
    "description": "ui from CAT_UIItem"
  },
  "CAT_UIItem.width": {
    "prefix": "CAT_UIItem.width",
    "body": "CAT_UIItem.width",
    "description": "width from CAT_UIItem"
  },
  "catparentsettings.catmode": {
    "prefix": "catparentsettings.catmode",
    "body": "catparentsettings.catmode",
    "description": "catmode from catparentsettings"
  },
  "CINCfg.BlackPoint": {
    "prefix": "CINCfg.BlackPoint",
    "body": "CINCfg.BlackPoint",
    "description": "BlackPoint from CINCfg"
  },
  "CombustionWorkSpace.Operators": {
    "prefix": "CombustionWorkSpace.Operators",
    "body": "CombustionWorkSpace.Operators",
    "description": "Operators from CombustionWorkSpace"
  },
  "ControlValLookup_struct.ParamToControlFn": {
    "prefix": "ControlValLookup_struct.ParamToControlFn",
    "body": "ControlValLookup_struct.ParamToControlFn",
    "description": "ParamToControlFn from ControlValLookup_struct"
  },
  "crowds.alignObjects": {
    "prefix": "crowds.alignObjects",
    "body": "crowds.alignObjects",
    "description": "alignObjects from crowds"
  },
  "crowds.assignControllers": {
    "prefix": "crowds.assignControllers",
    "body": "crowds.assignControllers",
    "description": "assignControllers from crowds"
  },
  "crowds.assignGridProximityPriorities": {
    "prefix": "crowds.assignGridProximityPriorities",
    "body": "crowds.assignGridProximityPriorities",
    "description": "assignGridProximityPriorities from crowds"
  },
  "crowds.assignObjectProximityPriorities": {
    "prefix": "crowds.assignObjectProximityPriorities",
    "body": "crowds.assignObjectProximityPriorities",
    "description": "assignObjectProximityPriorities from crowds"
  },
  "crowds.assignRandomPriorities": {
    "prefix": "crowds.assignRandomPriorities",
    "body": "crowds.assignRandomPriorities",
    "description": "assignRandomPriorities from crowds"
  },
  "crowds.assignUniquePriorities": {
    "prefix": "crowds.assignUniquePriorities",
    "body": "crowds.assignUniquePriorities",
    "description": "assignUniquePriorities from crowds"
  },
  "crowds.genclones": {
    "prefix": "crowds.genclones",
    "body": "crowds.genclones",
    "description": "genclones from crowds"
  },
  "crowds.genlocations": {
    "prefix": "crowds.genlocations",
    "body": "crowds.genlocations",
    "description": "genlocations from crowds"
  },
  "crowds.genrotations": {
    "prefix": "crowds.genrotations",
    "body": "crowds.genrotations",
    "description": "genrotations from crowds"
  },
  "crowds.incrementPriorities": {
    "prefix": "crowds.incrementPriorities",
    "body": "crowds.incrementPriorities",
    "description": "incrementPriorities from crowds"
  },
  "crowds.linkObjects": {
    "prefix": "crowds.linkObjects",
    "body": "crowds.linkObjects",
    "description": "linkObjects from crowds"
  },
  "crowds.scatterall": {
    "prefix": "crowds.scatterall",
    "body": "crowds.scatterall",
    "description": "scatterall from crowds"
  },
  "crowds.smooth": {
    "prefix": "crowds.smooth",
    "body": "crowds.smooth",
    "description": "smooth from crowds"
  },
  "crowds.solve": {
    "prefix": "crowds.solve",
    "body": "crowds.solve",
    "description": "solve from crowds"
  },
  "cui.commandPanelOpen": {
    "prefix": "cui.commandPanelOpen",
    "body": "cui.commandPanelOpen",
    "description": "commandPanelOpen from cui"
  },
  "cui.dockDialogBar": {
    "prefix": "cui.dockDialogBar",
    "body": "cui.dockDialogBar",
    "description": "dockDialogBar from cui"
  },
  "cui.expertModeOn": {
    "prefix": "cui.expertModeOn",
    "body": "cui.expertModeOn",
    "description": "expertModeOn from cui"
  },
  "cui.floatDialogBar": {
    "prefix": "cui.floatDialogBar",
    "body": "cui.floatDialogBar",
    "description": "floatDialogBar from cui"
  },
  "cui.getConfigFile": {
    "prefix": "cui.getConfigFile",
    "body": "cui.getConfigFile",
    "description": "getConfigFile from cui"
  },
  "cui.GetDir": {
    "prefix": "cui.GetDir",
    "body": "cui.GetDir",
    "description": "GetDir from cui"
  },
  "cui.getDockState": {
    "prefix": "cui.getDockState",
    "body": "cui.getDockState",
    "description": "getDockState from cui"
  },
  "cui.getExpertMode": {
    "prefix": "cui.getExpertMode",
    "body": "cui.getExpertMode",
    "description": "getExpertMode from cui"
  },
  "cui.loadConfig": {
    "prefix": "cui.loadConfig",
    "body": "cui.loadConfig",
    "description": "loadConfig from cui"
  },
  "cui.registerDialogBar": {
    "prefix": "cui.registerDialogBar",
    "body": "cui.registerDialogBar",
    "description": "registerDialogBar from cui"
  },
  "cui.saveConfig": {
    "prefix": "cui.saveConfig",
    "body": "cui.saveConfig",
    "description": "saveConfig from cui"
  },
  "cui.saveConfigAs": {
    "prefix": "cui.saveConfigAs",
    "body": "cui.saveConfigAs",
    "description": "saveConfigAs from cui"
  },
  "cui.setAppTitle": {
    "prefix": "cui.setAppTitle",
    "body": "cui.setAppTitle",
    "description": "setAppTitle from cui"
  },
  "cui.setConfigFile": {
    "prefix": "cui.setConfigFile",
    "body": "cui.setConfigFile",
    "description": "setConfigFile from cui"
  },
  "cui.unRegisterDialogBar": {
    "prefix": "cui.unRegisterDialogBar",
    "body": "cui.unRegisterDialogBar",
    "description": "unRegisterDialogBar from cui"
  },
  "custAttributes.add": {
    "prefix": "custAttributes.add",
    "body": "custAttributes.add",
    "description": "add from custAttributes"
  },
  "custAttributes.count": {
    "prefix": "custAttributes.count",
    "body": "custAttributes.count",
    "description": "count from custAttributes"
  },
  "custAttributes.delete": {
    "prefix": "custAttributes.delete",
    "body": "custAttributes.delete",
    "description": "delete from custAttributes"
  },
  "custAttributes.deleteDef": {
    "prefix": "custAttributes.deleteDef",
    "body": "custAttributes.deleteDef",
    "description": "deleteDef from custAttributes"
  },
  "custAttributes.get": {
    "prefix": "custAttributes.get",
    "body": "custAttributes.get",
    "description": "get from custAttributes"
  },
  "custAttributes.getDef": {
    "prefix": "custAttributes.getDef",
    "body": "custAttributes.getDef",
    "description": "getDef from custAttributes"
  },
  "custAttributes.getDefClass": {
    "prefix": "custAttributes.getDefClass",
    "body": "custAttributes.getDefClass",
    "description": "getDefClass from custAttributes"
  },
  "custAttributes.getDefData": {
    "prefix": "custAttributes.getDefData",
    "body": "custAttributes.getDefData",
    "description": "getDefData from custAttributes"
  },
  "custAttributes.getDefInstances": {
    "prefix": "custAttributes.getDefInstances",
    "body": "custAttributes.getDefInstances",
    "description": "getDefInstances from custAttributes"
  },
  "custAttributes.getDefSource": {
    "prefix": "custAttributes.getDefSource",
    "body": "custAttributes.getDefSource",
    "description": "getDefSource from custAttributes"
  },
  "custAttributes.getOwner": {
    "prefix": "custAttributes.getOwner",
    "body": "custAttributes.getOwner",
    "description": "getOwner from custAttributes"
  },
  "custAttributes.getPBlockDefs": {
    "prefix": "custAttributes.getPBlockDefs",
    "body": "custAttributes.getPBlockDefs",
    "description": "getPBlockDefs from custAttributes"
  },
  "custAttributes.getSceneDefs": {
    "prefix": "custAttributes.getSceneDefs",
    "body": "custAttributes.getSceneDefs",
    "description": "getSceneDefs from custAttributes"
  },
  "custAttributes.makeUnique": {
    "prefix": "custAttributes.makeUnique",
    "body": "custAttributes.makeUnique",
    "description": "makeUnique from custAttributes"
  },
  "custAttributes.redefine": {
    "prefix": "custAttributes.redefine",
    "body": "custAttributes.redefine",
    "description": "redefine from custAttributes"
  },
  "custAttributes.setDefData": {
    "prefix": "custAttributes.setDefData",
    "body": "custAttributes.setDefData",
    "description": "setDefData from custAttributes"
  },
  "cwschannel.index": {
    "prefix": "cwschannel.index",
    "body": "cwschannel.index",
    "description": "index from cwschannel"
  },
  "cwschannel.value": {
    "prefix": "cwschannel.value",
    "body": "cwschannel.value",
    "description": "value from cwschannel"
  },
  "cwscomposite.name": {
    "prefix": "cwscomposite.name",
    "body": "cwscomposite.name",
    "description": "name from cwscomposite"
  },
  "cwskey.frame": {
    "prefix": "cwskey.frame",
    "body": "cwskey.frame",
    "description": "frame from cwskey"
  },
  "cwsobject.channels": {
    "prefix": "cwsobject.channels",
    "body": "cwsobject.channels",
    "description": "channels from cwsobject"
  },
  "cwsobject.hinge": {
    "prefix": "cwsobject.hinge",
    "body": "cwsobject.hinge",
    "description": "hinge from cwsobject"
  },
  "cwsobject.isVisible": {
    "prefix": "cwsobject.isVisible",
    "body": "cwsobject.isVisible",
    "description": "isVisible from cwsobject"
  },
  "cwsobject.kind": {
    "prefix": "cwsobject.kind",
    "body": "cwsobject.kind",
    "description": "kind from cwsobject"
  },
  "cwsobject.name": {
    "prefix": "cwsobject.name",
    "body": "cwsobject.name",
    "description": "name from cwsobject"
  },
  "cwsobject.order": {
    "prefix": "cwsobject.order",
    "body": "cwsobject.order",
    "description": "order from cwsobject"
  },
  "cwsobject.parent": {
    "prefix": "cwsobject.parent",
    "body": "cwsobject.parent",
    "description": "parent from cwsobject"
  },
  "cwsobject.stencil": {
    "prefix": "cwsobject.stencil",
    "body": "cwsobject.stencil",
    "description": "stencil from cwsobject"
  },
  "cwsobject.target": {
    "prefix": "cwsobject.target",
    "body": "cwsobject.target",
    "description": "target from cwsobject"
  },
  "cwsoperator.class": {
    "prefix": "cwsoperator.class",
    "body": "cwsoperator.class",
    "description": "class from cwsoperator"
  },
  "cwsoperator.name": {
    "prefix": "cwsoperator.name",
    "body": "cwsoperator.name",
    "description": "name from cwsoperator"
  },
  "DebugVisualizerGroup_struct.groupParamMembers": {
    "prefix": "DebugVisualizerGroup_struct.groupParamMembers",
    "body": "DebugVisualizerGroup_struct.groupParamMembers",
    "description": "groupParamMembers from DebugVisualizerGroup_struct"
  },
  "DebugVisualizerGroup_struct.groupUIName": {
    "prefix": "DebugVisualizerGroup_struct.groupUIName",
    "body": "DebugVisualizerGroup_struct.groupUIName",
    "description": "groupUIName from DebugVisualizerGroup_struct"
  },
  "DebugVisualizerParam_struct.controlGroup": {
    "prefix": "DebugVisualizerParam_struct.controlGroup",
    "body": "DebugVisualizerParam_struct.controlGroup",
    "description": "controlGroup from DebugVisualizerParam_struct"
  },
  "DebugVisualizerParam_struct.controlName": {
    "prefix": "DebugVisualizerParam_struct.controlName",
    "body": "DebugVisualizerParam_struct.controlName",
    "description": "controlName from DebugVisualizerParam_struct"
  },
  "DebugVisualizerParam_struct.controlTooltip": {
    "prefix": "DebugVisualizerParam_struct.controlTooltip",
    "body": "DebugVisualizerParam_struct.controlTooltip",
    "description": "controlTooltip from DebugVisualizerParam_struct"
  },
  "DebugVisualizerParam_struct.paramRoot": {
    "prefix": "DebugVisualizerParam_struct.paramRoot",
    "body": "DebugVisualizerParam_struct.paramRoot",
    "description": "paramRoot from DebugVisualizerParam_struct"
  },
  "DebugVisualizerParam_struct.paramSDK_name": {
    "prefix": "DebugVisualizerParam_struct.paramSDK_name",
    "body": "DebugVisualizerParam_struct.paramSDK_name",
    "description": "paramSDK_name from DebugVisualizerParam_struct"
  },
  "delegates.bboxDisplay": {
    "prefix": "delegates.bboxDisplay",
    "body": "delegates.bboxDisplay",
    "description": "bboxDisplay from delegates"
  },
  "delegates.ComputingBiped": {
    "prefix": "delegates.ComputingBiped",
    "body": "delegates.ComputingBiped",
    "description": "ComputingBiped from delegates"
  },
  "delegates.isAssignmentActive": {
    "prefix": "delegates.isAssignmentActive",
    "body": "delegates.isAssignmentActive",
    "description": "isAssignmentActive from delegates"
  },
  "delegates.isComputing": {
    "prefix": "delegates.isComputing",
    "body": "delegates.isComputing",
    "description": "isComputing from delegates"
  },
  "delegates.lineDisplay": {
    "prefix": "delegates.lineDisplay",
    "body": "delegates.lineDisplay",
    "description": "lineDisplay from delegates"
  },
  "delegates.prevVelocity": {
    "prefix": "delegates.prevVelocity",
    "body": "delegates.prevVelocity",
    "description": "prevVelocity from delegates"
  },
  "delegates.reactToMe": {
    "prefix": "delegates.reactToMe",
    "body": "delegates.reactToMe",
    "description": "reactToMe from delegates"
  },
  "delegates.simTransform": {
    "prefix": "delegates.simTransform",
    "body": "delegates.simTransform",
    "description": "simTransform from delegates"
  },
  "delegates.sphereDisplay": {
    "prefix": "delegates.sphereDisplay",
    "body": "delegates.sphereDisplay",
    "description": "sphereDisplay from delegates"
  },
  "delegates.startVelocity": {
    "prefix": "delegates.startVelocity",
    "body": "delegates.startVelocity",
    "description": "startVelocity from delegates"
  },
  "delegates.textDisplay": {
    "prefix": "delegates.textDisplay",
    "body": "delegates.textDisplay",
    "description": "textDisplay from delegates"
  },
  "delegates.velocity": {
    "prefix": "delegates.velocity",
    "body": "delegates.velocity",
    "description": "velocity from delegates"
  },
  "Disp_Angle_Spinner.controller": {
    "prefix": "Disp_Angle_Spinner.controller",
    "body": "Disp_Angle_Spinner.controller",
    "description": "controller from Disp_Angle_Spinner"
  },
  "Disp_Angle_Spinner.isEnabled": {
    "prefix": "Disp_Angle_Spinner.isEnabled",
    "body": "Disp_Angle_Spinner.isEnabled",
    "description": "isEnabled from Disp_Angle_Spinner"
  },
  "Disp_Angle_Spinner.OnChanged": {
    "prefix": "Disp_Angle_Spinner.OnChanged",
    "body": "Disp_Angle_Spinner.OnChanged",
    "description": "OnChanged from Disp_Angle_Spinner"
  },
  "Disp_Distance_Spinner.controller": {
    "prefix": "Disp_Distance_Spinner.controller",
    "body": "Disp_Distance_Spinner.controller",
    "description": "controller from Disp_Distance_Spinner"
  },
  "Disp_Distance_Spinner.isEnabled": {
    "prefix": "Disp_Distance_Spinner.isEnabled",
    "body": "Disp_Distance_Spinner.isEnabled",
    "description": "isEnabled from Disp_Distance_Spinner"
  },
  "Disp_Distance_Spinner.OnChanged": {
    "prefix": "Disp_Distance_Spinner.OnChanged",
    "body": "Disp_Distance_Spinner.OnChanged",
    "description": "OnChanged from Disp_Distance_Spinner"
  },
  "Disp_Edge_Spinner.controller": {
    "prefix": "Disp_Edge_Spinner.controller",
    "body": "Disp_Edge_Spinner.controller",
    "description": "controller from Disp_Edge_Spinner"
  },
  "Disp_Edge_Spinner.isEnabled": {
    "prefix": "Disp_Edge_Spinner.isEnabled",
    "body": "Disp_Edge_Spinner.isEnabled",
    "description": "isEnabled from Disp_Edge_Spinner"
  },
  "Disp_Edge_Spinner.OnChanged": {
    "prefix": "Disp_Edge_Spinner.OnChanged",
    "body": "Disp_Edge_Spinner.OnChanged",
    "description": "OnChanged from Disp_Edge_Spinner"
  },
  "Disp_Steps_Spinner.controller": {
    "prefix": "Disp_Steps_Spinner.controller",
    "body": "Disp_Steps_Spinner.controller",
    "description": "controller from Disp_Steps_Spinner"
  },
  "Disp_Steps_Spinner.isEnabled": {
    "prefix": "Disp_Steps_Spinner.isEnabled",
    "body": "Disp_Steps_Spinner.isEnabled",
    "description": "isEnabled from Disp_Steps_Spinner"
  },
  "Disp_Steps_Spinner.OnChanged": {
    "prefix": "Disp_Steps_Spinner.OnChanged",
    "body": "Disp_Steps_Spinner.OnChanged",
    "description": "OnChanged from Disp_Steps_Spinner"
  },
  "DisplacementInfo.amount": {
    "prefix": "DisplacementInfo.amount",
    "body": "DisplacementInfo.amount",
    "description": "amount from DisplacementInfo"
  },
  "DisplacementInfo.bboxRelative": {
    "prefix": "DisplacementInfo.bboxRelative",
    "body": "DisplacementInfo.bboxRelative",
    "description": "bboxRelative from DisplacementInfo"
  },
  "DisplacementInfo.exported": {
    "prefix": "DisplacementInfo.exported",
    "body": "DisplacementInfo.exported",
    "description": "exported from DisplacementInfo"
  },
  "DisplacementInfo.smoothUVs": {
    "prefix": "DisplacementInfo.smoothUVs",
    "body": "DisplacementInfo.smoothUVs",
    "description": "smoothUVs from DisplacementInfo"
  },
  "DisplacementInfo.texmap_name": {
    "prefix": "DisplacementInfo.texmap_name",
    "body": "DisplacementInfo.texmap_name",
    "description": "texmap_name from DisplacementInfo"
  },
  "displayColor.wireFrame": {
    "prefix": "displayColor.wireFrame",
    "body": "displayColor.wireFrame",
    "description": "wireFrame from displayColor"
  },
  "DistanceSelectSpinnerCallback.onButtonDown": {
    "prefix": "DistanceSelectSpinnerCallback.onButtonDown",
    "body": "DistanceSelectSpinnerCallback.onButtonDown",
    "description": "onButtonDown from DistanceSelectSpinnerCallback"
  },
  "DistanceSelectSpinnerCallback.onButtonUp": {
    "prefix": "DistanceSelectSpinnerCallback.onButtonUp",
    "body": "DistanceSelectSpinnerCallback.onButtonUp",
    "description": "onButtonUp from DistanceSelectSpinnerCallback"
  },
  "DistanceSelectSpinnerCallback.OnChanged": {
    "prefix": "DistanceSelectSpinnerCallback.OnChanged",
    "body": "DistanceSelectSpinnerCallback.OnChanged",
    "description": "OnChanged from DistanceSelectSpinnerCallback"
  },
  "DOF.addCam": {
    "prefix": "DOF.addCam",
    "body": "DOF.addCam",
    "description": "addCam from DOF"
  },
  "DOF.deleteCam": {
    "prefix": "DOF.deleteCam",
    "body": "DOF.deleteCam",
    "description": "deleteCam from DOF"
  },
  "DOF.deleteCamByName": {
    "prefix": "DOF.deleteCamByName",
    "body": "DOF.deleteCamByName",
    "description": "deleteCamByName from DOF"
  },
  "DOF.deleteFocalNode": {
    "prefix": "DOF.deleteFocalNode",
    "body": "DOF.deleteFocalNode",
    "description": "deleteFocalNode from DOF"
  },
  "DOF.deleteFocalNodeByName": {
    "prefix": "DOF.deleteFocalNodeByName",
    "body": "DOF.deleteFocalNodeByName",
    "description": "deleteFocalNodeByName from DOF"
  },
  "DontShowAgainDialog.default": {
    "prefix": "DontShowAgainDialog.default",
    "body": "DontShowAgainDialog.default",
    "description": "default from DontShowAgainDialog"
  },
  "DontShowAgainDialog.DoDialog": {
    "prefix": "DontShowAgainDialog.DoDialog",
    "body": "DontShowAgainDialog.DoDialog",
    "description": "DoDialog from DontShowAgainDialog"
  },
  "DontShowAgainDialog.messageStr": {
    "prefix": "DontShowAgainDialog.messageStr",
    "body": "DontShowAgainDialog.messageStr",
    "description": "messageStr from DontShowAgainDialog"
  },
  "DontShowAgainDialog.notAgain": {
    "prefix": "DontShowAgainDialog.notAgain",
    "body": "DontShowAgainDialog.notAgain",
    "description": "notAgain from DontShowAgainDialog"
  },
  "DontShowAgainDialog.retval": {
    "prefix": "DontShowAgainDialog.retval",
    "body": "DontShowAgainDialog.retval",
    "description": "retval from DontShowAgainDialog"
  },
  "DotLoopSpinnerCallback.OnChanged": {
    "prefix": "DotLoopSpinnerCallback.OnChanged",
    "body": "DotLoopSpinnerCallback.OnChanged",
    "description": "OnChanged from DotLoopSpinnerCallback"
  },
  "dotNet.addEventHandler": {
    "prefix": "dotNet.addEventHandler",
    "body": "dotNet.addEventHandler",
    "description": "addEventHandler from dotNet"
  },
  "dotNet.combineEnums": {
    "prefix": "dotNet.combineEnums",
    "body": "dotNet.combineEnums",
    "description": "combineEnums from dotNet"
  },
  "dotNet.compareEnums": {
    "prefix": "dotNet.compareEnums",
    "body": "dotNet.compareEnums",
    "description": "compareEnums from dotNet"
  },
  "dotNet.getType": {
    "prefix": "dotNet.getType",
    "body": "dotNet.getType",
    "description": "getType from dotNet"
  },
  "dotNet.loadAssembly": {
    "prefix": "dotNet.loadAssembly",
    "body": "dotNet.loadAssembly",
    "description": "loadAssembly from dotNet"
  },
  "dotNet.removeAllEventHandlers": {
    "prefix": "dotNet.removeAllEventHandlers",
    "body": "dotNet.removeAllEventHandlers",
    "description": "removeAllEventHandlers from dotNet"
  },
  "dotNet.removeEventHandlers": {
    "prefix": "dotNet.removeEventHandlers",
    "body": "dotNet.removeEventHandlers",
    "description": "removeEventHandlers from dotNet"
  },
  "dotNet.setLifetimeControl": {
    "prefix": "dotNet.setLifetimeControl",
    "body": "dotNet.setLifetimeControl",
    "description": "setLifetimeControl from dotNet"
  },
  "dotNet.showConstructors": {
    "prefix": "dotNet.showConstructors",
    "body": "dotNet.showConstructors",
    "description": "showConstructors from dotNet"
  },
  "dotNet.ValueToDotNetObject": {
    "prefix": "dotNet.ValueToDotNetObject",
    "body": "dotNet.ValueToDotNetObject",
    "description": "ValueToDotNetObject from dotNet"
  },
  "Edge_Crease_Spinner.isEnabled": {
    "prefix": "Edge_Crease_Spinner.isEnabled",
    "body": "Edge_Crease_Spinner.isEnabled",
    "description": "isEnabled from Edge_Crease_Spinner"
  },
  "Edge_Crease_Spinner.OnChanged": {
    "prefix": "Edge_Crease_Spinner.OnChanged",
    "body": "Edge_Crease_Spinner.OnChanged",
    "description": "OnChanged from Edge_Crease_Spinner"
  },
  "Edge_Weight_Spinner.isEnabled": {
    "prefix": "Edge_Weight_Spinner.isEnabled",
    "body": "Edge_Weight_Spinner.isEnabled",
    "description": "isEnabled from Edge_Weight_Spinner"
  },
  "Edge_Weight_Spinner.OnChanged": {
    "prefix": "Edge_Weight_Spinner.OnChanged",
    "body": "Edge_Weight_Spinner.OnChanged",
    "description": "OnChanged from Edge_Weight_Spinner"
  },
  "envEffectsDialog.close": {
    "prefix": "envEffectsDialog.close",
    "body": "envEffectsDialog.close",
    "description": "close from envEffectsDialog"
  },
  "envEffectsDialog.open": {
    "prefix": "envEffectsDialog.open",
    "body": "envEffectsDialog.open",
    "description": "open from envEffectsDialog"
  },
  "fileProperties.addProperty": {
    "prefix": "fileProperties.addProperty",
    "body": "fileProperties.addProperty",
    "description": "addProperty from fileProperties"
  },
  "fileProperties.deleteProperty": {
    "prefix": "fileProperties.deleteProperty",
    "body": "fileProperties.deleteProperty",
    "description": "deleteProperty from fileProperties"
  },
  "fileProperties.findProperty": {
    "prefix": "fileProperties.findProperty",
    "body": "fileProperties.findProperty",
    "description": "findProperty from fileProperties"
  },
  "fileProperties.getItems": {
    "prefix": "fileProperties.getItems",
    "body": "fileProperties.getItems",
    "description": "getItems from fileProperties"
  },
  "fileProperties.getNumProperties": {
    "prefix": "fileProperties.getNumProperties",
    "body": "fileProperties.getNumProperties",
    "description": "getNumProperties from fileProperties"
  },
  "fileProperties.getPropertyValue": {
    "prefix": "fileProperties.getPropertyValue",
    "body": "fileProperties.getPropertyValue",
    "description": "getPropertyValue from fileProperties"
  },
  "Filters.Are_Modifiers_Applied": {
    "prefix": "Filters.Are_Modifiers_Applied",
    "body": "Filters.Are_Modifiers_Applied",
    "description": "Are_Modifiers_Applied from Filters"
  },
  "Filters.CanSwitchTo_Border": {
    "prefix": "Filters.CanSwitchTo_Border",
    "body": "Filters.CanSwitchTo_Border",
    "description": "CanSwitchTo_Border from Filters"
  },
  "Filters.CanSwitchTo_Edge": {
    "prefix": "Filters.CanSwitchTo_Edge",
    "body": "Filters.CanSwitchTo_Edge",
    "description": "CanSwitchTo_Edge from Filters"
  },
  "Filters.CanSwitchTo_Element": {
    "prefix": "Filters.CanSwitchTo_Element",
    "body": "Filters.CanSwitchTo_Element",
    "description": "CanSwitchTo_Element from Filters"
  },
  "Filters.CanSwitchTo_Face": {
    "prefix": "Filters.CanSwitchTo_Face",
    "body": "Filters.CanSwitchTo_Face",
    "description": "CanSwitchTo_Face from Filters"
  },
  "Filters.CanSwitchTo_Patch": {
    "prefix": "Filters.CanSwitchTo_Patch",
    "body": "Filters.CanSwitchTo_Patch",
    "description": "CanSwitchTo_Patch from Filters"
  },
  "Filters.CanSwitchTo_Polygon": {
    "prefix": "Filters.CanSwitchTo_Polygon",
    "body": "Filters.CanSwitchTo_Polygon",
    "description": "CanSwitchTo_Polygon from Filters"
  },
  "Filters.CanSwitchTo_Segment": {
    "prefix": "Filters.CanSwitchTo_Segment",
    "body": "Filters.CanSwitchTo_Segment",
    "description": "CanSwitchTo_Segment from Filters"
  },
  "Filters.CanSwitchTo_Spline": {
    "prefix": "Filters.CanSwitchTo_Spline",
    "body": "Filters.CanSwitchTo_Spline",
    "description": "CanSwitchTo_Spline from Filters"
  },
  "Filters.CanSwitchTo_Vertex": {
    "prefix": "Filters.CanSwitchTo_Vertex",
    "body": "Filters.CanSwitchTo_Vertex",
    "description": "CanSwitchTo_Vertex from Filters"
  },
  "Filters.GetBaseObjectProperty": {
    "prefix": "Filters.GetBaseObjectProperty",
    "body": "Filters.GetBaseObjectProperty",
    "description": "GetBaseObjectProperty from Filters"
  },
  "Filters.GetModOrObj": {
    "prefix": "Filters.GetModOrObj",
    "body": "Filters.GetModOrObj",
    "description": "GetModOrObj from Filters"
  },
  "Filters.HasBaseObjectProperty": {
    "prefix": "Filters.HasBaseObjectProperty",
    "body": "Filters.HasBaseObjectProperty",
    "description": "HasBaseObjectProperty from Filters"
  },
  "Filters.Is_Bone": {
    "prefix": "Filters.Is_Bone",
    "body": "Filters.Is_Bone",
    "description": "Is_Bone from Filters"
  },
  "Filters.is_Child": {
    "prefix": "Filters.is_Child",
    "body": "Filters.is_Child",
    "description": "is_Child from Filters"
  },
  "Filters.Is_EditMesh": {
    "prefix": "Filters.Is_EditMesh",
    "body": "Filters.Is_EditMesh",
    "description": "Is_EditMesh from Filters"
  },
  "Filters.Is_EditMeshSpecifyLevel": {
    "prefix": "Filters.Is_EditMeshSpecifyLevel",
    "body": "Filters.Is_EditMeshSpecifyLevel",
    "description": "Is_EditMeshSpecifyLevel from Filters"
  },
  "Filters.Is_EditPatch": {
    "prefix": "Filters.Is_EditPatch",
    "body": "Filters.Is_EditPatch",
    "description": "Is_EditPatch from Filters"
  },
  "Filters.Is_EditPatchSpecifyLevel": {
    "prefix": "Filters.Is_EditPatchSpecifyLevel",
    "body": "Filters.Is_EditPatchSpecifyLevel",
    "description": "Is_EditPatchSpecifyLevel from Filters"
  },
  "Filters.Is_EditPoly": {
    "prefix": "Filters.Is_EditPoly",
    "body": "Filters.Is_EditPoly",
    "description": "Is_EditPoly from Filters"
  },
  "Filters.Is_EditPolyMod": {
    "prefix": "Filters.Is_EditPolyMod",
    "body": "Filters.Is_EditPolyMod",
    "description": "Is_EditPolyMod from Filters"
  },
  "Filters.Is_EditPolyModSpecifyLevel": {
    "prefix": "Filters.Is_EditPolyModSpecifyLevel",
    "body": "Filters.Is_EditPolyModSpecifyLevel",
    "description": "Is_EditPolyModSpecifyLevel from Filters"
  },
  "Filters.Is_EditPolySpecifyLevel": {
    "prefix": "Filters.Is_EditPolySpecifyLevel",
    "body": "Filters.Is_EditPolySpecifyLevel",
    "description": "Is_EditPolySpecifyLevel from Filters"
  },
  "Filters.Is_EditSpline": {
    "prefix": "Filters.Is_EditSpline",
    "body": "Filters.Is_EditSpline",
    "description": "Is_EditSpline from Filters"
  },
  "Filters.Is_EditSplineSpecifyLevel": {
    "prefix": "Filters.Is_EditSplineSpecifyLevel",
    "body": "Filters.Is_EditSplineSpecifyLevel",
    "description": "Is_EditSplineSpecifyLevel from Filters"
  },
  "Filters.Is_EPoly": {
    "prefix": "Filters.Is_EPoly",
    "body": "Filters.Is_EPoly",
    "description": "Is_EPoly from Filters"
  },
  "Filters.Is_EPoly_SliceMode": {
    "prefix": "Filters.Is_EPoly_SliceMode",
    "body": "Filters.Is_EPoly_SliceMode",
    "description": "Is_EPoly_SliceMode from Filters"
  },
  "Filters.Is_EPolySpecifyLevel": {
    "prefix": "Filters.Is_EPolySpecifyLevel",
    "body": "Filters.Is_EPolySpecifyLevel",
    "description": "Is_EPolySpecifyLevel from Filters"
  },
  "Filters.Is_Grid": {
    "prefix": "Filters.Is_Grid",
    "body": "Filters.Is_Grid",
    "description": "Is_Grid from Filters"
  },
  "Filters.Is_IKChain": {
    "prefix": "Filters.Is_IKChain",
    "body": "Filters.Is_IKChain",
    "description": "Is_IKChain from Filters"
  },
  "Filters.Is_Light": {
    "prefix": "Filters.Is_Light",
    "body": "Filters.Is_Light",
    "description": "Is_Light from Filters"
  },
  "Filters.Is_MeshSelect": {
    "prefix": "Filters.Is_MeshSelect",
    "body": "Filters.Is_MeshSelect",
    "description": "Is_MeshSelect from Filters"
  },
  "Filters.Is_NURBS": {
    "prefix": "Filters.Is_NURBS",
    "body": "Filters.Is_NURBS",
    "description": "Is_NURBS from Filters"
  },
  "Filters.is_Parent": {
    "prefix": "Filters.is_Parent",
    "body": "Filters.is_Parent",
    "description": "is_Parent from Filters"
  },
  "Filters.Is_PatchSelect": {
    "prefix": "Filters.Is_PatchSelect",
    "body": "Filters.Is_PatchSelect",
    "description": "Is_PatchSelect from Filters"
  },
  "Filters.Is_Point": {
    "prefix": "Filters.Is_Point",
    "body": "Filters.Is_Point",
    "description": "Is_Point from Filters"
  },
  "Filters.Is_PolySelect": {
    "prefix": "Filters.Is_PolySelect",
    "body": "Filters.Is_PolySelect",
    "description": "Is_PolySelect from Filters"
  },
  "Filters.Is_PosXYZ": {
    "prefix": "Filters.Is_PosXYZ",
    "body": "Filters.Is_PosXYZ",
    "description": "Is_PosXYZ from Filters"
  },
  "Filters.Is_RotationXYZ": {
    "prefix": "Filters.Is_RotationXYZ",
    "body": "Filters.Is_RotationXYZ",
    "description": "Is_RotationXYZ from Filters"
  },
  "Filters.Is_ScaleXYZ": {
    "prefix": "Filters.Is_ScaleXYZ",
    "body": "Filters.Is_ScaleXYZ",
    "description": "Is_ScaleXYZ from Filters"
  },
  "Filters.Is_SplineSelect": {
    "prefix": "Filters.Is_SplineSelect",
    "body": "Filters.Is_SplineSelect",
    "description": "Is_SplineSelect from Filters"
  },
  "Filters.Is_Target": {
    "prefix": "Filters.Is_Target",
    "body": "Filters.Is_Target",
    "description": "Is_Target from Filters"
  },
  "Filters.Is_This_EditPolyMod": {
    "prefix": "Filters.Is_This_EditPolyMod",
    "body": "Filters.Is_This_EditPolyMod",
    "description": "Is_This_EditPolyMod from Filters"
  },
  "Filters.Is_This_EditPolyObj": {
    "prefix": "Filters.Is_This_EditPolyObj",
    "body": "Filters.Is_This_EditPolyObj",
    "description": "Is_This_EditPolyObj from Filters"
  },
  "Filters.Is_This_EPoly": {
    "prefix": "Filters.Is_This_EPoly",
    "body": "Filters.Is_This_EPoly",
    "description": "Is_This_EPoly from Filters"
  },
  "Filters.SetBaseObjectProperty": {
    "prefix": "Filters.SetBaseObjectProperty",
    "body": "Filters.SetBaseObjectProperty",
    "description": "SetBaseObjectProperty from Filters"
  },
  "Filters.ToggleBaseObjectProperty": {
    "prefix": "Filters.ToggleBaseObjectProperty",
    "body": "Filters.ToggleBaseObjectProperty",
    "description": "ToggleBaseObjectProperty from Filters"
  },
  "flexOps.ClearEdgeVertices": {
    "prefix": "flexOps.ClearEdgeVertices",
    "body": "flexOps.ClearEdgeVertices",
    "description": "ClearEdgeVertices from flexOps"
  },
  "flexOps.GetNumberVertices": {
    "prefix": "flexOps.GetNumberVertices",
    "body": "flexOps.GetNumberVertices",
    "description": "GetNumberVertices from flexOps"
  },
  "flexOps.GetVertexWeight": {
    "prefix": "flexOps.GetVertexWeight",
    "body": "flexOps.GetVertexWeight",
    "description": "GetVertexWeight from flexOps"
  },
  "flexOps.SelectVertices": {
    "prefix": "flexOps.SelectVertices",
    "body": "flexOps.SelectVertices",
    "description": "SelectVertices from flexOps"
  },
  "flexOps.SetEdgeVertices": {
    "prefix": "flexOps.SetEdgeVertices",
    "body": "flexOps.SetEdgeVertices",
    "description": "SetEdgeVertices from flexOps"
  },
  "flexOps.SetVertexWeights": {
    "prefix": "flexOps.SetVertexWeights",
    "body": "flexOps.SetVertexWeights",
    "description": "SetVertexWeights from flexOps"
  },
  "globalMotionClipOps.loadfile": {
    "prefix": "globalMotionClipOps.loadfile",
    "body": "globalMotionClipOps.loadfile",
    "description": "loadfile from globalMotionClipOps"
  },
  "globalMotionClipOps.synthesize": {
    "prefix": "globalMotionClipOps.synthesize",
    "body": "globalMotionClipOps.synthesize",
    "description": "synthesize from globalMotionClipOps"
  },
  "globalVars.get": {
    "prefix": "globalVars.get",
    "body": "globalVars.get",
    "description": "get from globalVars"
  },
  "globalVars.getTypeTag": {
    "prefix": "globalVars.getTypeTag",
    "body": "globalVars.getTypeTag",
    "description": "getTypeTag from globalVars"
  },
  "globalVars.getValueTag": {
    "prefix": "globalVars.getValueTag",
    "body": "globalVars.getValueTag",
    "description": "getValueTag from globalVars"
  },
  "globalVars.isGlobal": {
    "prefix": "globalVars.isGlobal",
    "body": "globalVars.isGlobal",
    "description": "isGlobal from globalVars"
  },
  "globalVars.remove": {
    "prefix": "globalVars.remove",
    "body": "globalVars.remove",
    "description": "remove from globalVars"
  },
  "globalVars.set": {
    "prefix": "globalVars.set",
    "body": "globalVars.set",
    "description": "set from globalVars"
  },
  "GoZMaxObject.clear": {
    "prefix": "GoZMaxObject.clear",
    "body": "GoZMaxObject.clear",
    "description": "clear from GoZMaxObject"
  },
  "GoZMaxObject.IsAMesh": {
    "prefix": "GoZMaxObject.IsAMesh",
    "body": "GoZMaxObject.IsAMesh",
    "description": "IsAMesh from GoZMaxObject"
  },
  "GoZMaxObject.isValid": {
    "prefix": "GoZMaxObject.isValid",
    "body": "GoZMaxObject.isValid",
    "description": "isValid from GoZMaxObject"
  },
  "GoZMaxObject.m_node": {
    "prefix": "GoZMaxObject.m_node",
    "body": "GoZMaxObject.m_node",
    "description": "m_node from GoZMaxObject"
  },
  "GoZMaxObject.UpdateValidity": {
    "prefix": "GoZMaxObject.UpdateValidity",
    "body": "GoZMaxObject.UpdateValidity",
    "description": "UpdateValidity from GoZMaxObject"
  },
  "GoZObject.clear": {
    "prefix": "GoZObject.clear",
    "body": "GoZObject.clear",
    "description": "clear from GoZObject"
  },
  "GoZObject.IsMaxObject": {
    "prefix": "GoZObject.IsMaxObject",
    "body": "GoZObject.IsMaxObject",
    "description": "IsMaxObject from GoZObject"
  },
  "GoZObject.isValid": {
    "prefix": "GoZObject.isValid",
    "body": "GoZObject.isValid",
    "description": "isValid from GoZObject"
  },
  "GoZObject.m_materialCreated": {
    "prefix": "GoZObject.m_materialCreated",
    "body": "GoZObject.m_materialCreated",
    "description": "m_materialCreated from GoZObject"
  },
  "GoZObject.m_maxObject": {
    "prefix": "GoZObject.m_maxObject",
    "body": "GoZObject.m_maxObject",
    "description": "m_maxObject from GoZObject"
  },
  "GoZObject.m_zbrushObject": {
    "prefix": "GoZObject.m_zbrushObject",
    "body": "GoZObject.m_zbrushObject",
    "description": "m_zbrushObject from GoZObject"
  },
  "GoZObject.UpdateValidity": {
    "prefix": "GoZObject.UpdateValidity",
    "body": "GoZObject.UpdateValidity",
    "description": "UpdateValidity from GoZObject"
  },
  "GoZServer.clear": {
    "prefix": "GoZServer.clear",
    "body": "GoZServer.clear",
    "description": "clear from GoZServer"
  },
  "GoZServer.CreateGoZObject_fromMaxObject": {
    "prefix": "GoZServer.CreateGoZObject_fromMaxObject",
    "body": "GoZServer.CreateGoZObject_fromMaxObject",
    "description": "CreateGoZObject_fromMaxObject from GoZServer"
  },
  "GoZServer.FindGoZObject_fromMaxObject": {
    "prefix": "GoZServer.FindGoZObject_fromMaxObject",
    "body": "GoZServer.FindGoZObject_fromMaxObject",
    "description": "FindGoZObject_fromMaxObject from GoZServer"
  },
  "GoZServer.FindGoZObject_fromZBrushObject": {
    "prefix": "GoZServer.FindGoZObject_fromZBrushObject",
    "body": "GoZServer.FindGoZObject_fromZBrushObject",
    "description": "FindGoZObject_fromZBrushObject from GoZServer"
  },
  "GoZServer.GoToZBrush": {
    "prefix": "GoZServer.GoToZBrush",
    "body": "GoZServer.GoToZBrush",
    "description": "GoToZBrush from GoZServer"
  },
  "GoZServer.GoToZBrushMulti": {
    "prefix": "GoZServer.GoToZBrushMulti",
    "body": "GoZServer.GoToZBrushMulti",
    "description": "GoToZBrushMulti from GoZServer"
  },
  "GoZServer.GoToZBrushSingle": {
    "prefix": "GoZServer.GoToZBrushSingle",
    "body": "GoZServer.GoToZBrushSingle",
    "description": "GoToZBrushSingle from GoZServer"
  },
  "GoZServer.GoZBrush_Old": {
    "prefix": "GoZServer.GoZBrush_Old",
    "body": "GoZServer.GoZBrush_Old",
    "description": "GoZBrush_Old from GoZServer"
  },
  "GoZServer.processAction": {
    "prefix": "GoZServer.processAction",
    "body": "GoZServer.processAction",
    "description": "processAction from GoZServer"
  },
  "GoZServer.UpdateGoZObjectModifier_fromMaxObject": {
    "prefix": "GoZServer.UpdateGoZObjectModifier_fromMaxObject",
    "body": "GoZServer.UpdateGoZObjectModifier_fromMaxObject",
    "description": "UpdateGoZObjectModifier_fromMaxObject from GoZServer"
  },
  "gw.clearScreen": {
    "prefix": "gw.clearScreen",
    "body": "gw.clearScreen",
    "description": "clearScreen from gw"
  },
  "gw.endTriangles": {
    "prefix": "gw.endTriangles",
    "body": "gw.endTriangles",
    "description": "endTriangles from gw"
  },
  "gw.enlargeUpdateRect": {
    "prefix": "gw.enlargeUpdateRect",
    "body": "gw.enlargeUpdateRect",
    "description": "enlargeUpdateRect from gw"
  },
  "gw.GetCPDisp": {
    "prefix": "gw.GetCPDisp",
    "body": "gw.GetCPDisp",
    "description": "GetCPDisp from gw"
  },
  "gw.getDriverString": {
    "prefix": "gw.getDriverString",
    "body": "gw.getDriverString",
    "description": "getDriverString from gw"
  },
  "gw.getFlipped": {
    "prefix": "gw.getFlipped",
    "body": "gw.getFlipped",
    "description": "getFlipped from gw"
  },
  "gw.GetFocalDist": {
    "prefix": "gw.GetFocalDist",
    "body": "gw.GetFocalDist",
    "description": "GetFocalDist from gw"
  },
  "gw.getHitherCoord": {
    "prefix": "gw.getHitherCoord",
    "body": "gw.getHitherCoord",
    "description": "getHitherCoord from gw"
  },
  "gw.getMaxLights": {
    "prefix": "gw.getMaxLights",
    "body": "gw.getMaxLights",
    "description": "getMaxLights from gw"
  },
  "gw.GetPointOnCP": {
    "prefix": "gw.GetPointOnCP",
    "body": "gw.GetPointOnCP",
    "description": "GetPointOnCP from gw"
  },
  "gw.getRndLimits": {
    "prefix": "gw.getRndLimits",
    "body": "gw.getRndLimits",
    "description": "getRndLimits from gw"
  },
  "gw.getRndMode": {
    "prefix": "gw.getRndMode",
    "body": "gw.getRndMode",
    "description": "getRndMode from gw"
  },
  "gw.getSkipCount": {
    "prefix": "gw.getSkipCount",
    "body": "gw.getSkipCount",
    "description": "getSkipCount from gw"
  },
  "gw.getTextExtent": {
    "prefix": "gw.getTextExtent",
    "body": "gw.getTextExtent",
    "description": "getTextExtent from gw"
  },
  "gw.getUpdateRect": {
    "prefix": "gw.getUpdateRect",
    "body": "gw.getUpdateRect",
    "description": "getUpdateRect from gw"
  },
  "gw.getViewportDib": {
    "prefix": "gw.getViewportDib",
    "body": "gw.getViewportDib",
    "description": "getViewportDib from gw"
  },
  "gw.GetVPWorldWidth": {
    "prefix": "gw.GetVPWorldWidth",
    "body": "gw.GetVPWorldWidth",
    "description": "GetVPWorldWidth from gw"
  },
  "gw.getWinDepth": {
    "prefix": "gw.getWinDepth",
    "body": "gw.getWinDepth",
    "description": "getWinDepth from gw"
  },
  "gw.getWinSizeX": {
    "prefix": "gw.getWinSizeX",
    "body": "gw.getWinSizeX",
    "description": "getWinSizeX from gw"
  },
  "gw.getWinSizeY": {
    "prefix": "gw.getWinSizeY",
    "body": "gw.getWinSizeY",
    "description": "getWinSizeY from gw"
  },
  "gw.getYonCoord": {
    "prefix": "gw.getYonCoord",
    "body": "gw.getYonCoord",
    "description": "getYonCoord from gw"
  },
  "gw.hMarker": {
    "prefix": "gw.hMarker",
    "body": "gw.hMarker",
    "description": "hMarker from gw"
  },
  "gw.hPolygon": {
    "prefix": "gw.hPolygon",
    "body": "gw.hPolygon",
    "description": "hPolygon from gw"
  },
  "gw.hPolyline": {
    "prefix": "gw.hPolyline",
    "body": "gw.hPolyline",
    "description": "hPolyline from gw"
  },
  "gw.hRect": {
    "prefix": "gw.hRect",
    "body": "gw.hRect",
    "description": "hRect from gw"
  },
  "gw.hText": {
    "prefix": "gw.hText",
    "body": "gw.hText",
    "description": "hText from gw"
  },
  "gw.hTransPoint": {
    "prefix": "gw.hTransPoint",
    "body": "gw.hTransPoint",
    "description": "hTransPoint from gw"
  },
  "gw.hTriStrip": {
    "prefix": "gw.hTriStrip",
    "body": "gw.hTriStrip",
    "description": "hTriStrip from gw"
  },
  "gw.isPerspectiveView": {
    "prefix": "gw.isPerspectiveView",
    "body": "gw.isPerspectiveView",
    "description": "isPerspectiveView from gw"
  },
  "gw.IsPerspView": {
    "prefix": "gw.IsPerspView",
    "body": "gw.IsPerspView",
    "description": "IsPerspView from gw"
  },
  "gw.MapCPToWorld": {
    "prefix": "gw.MapCPToWorld",
    "body": "gw.MapCPToWorld",
    "description": "MapCPToWorld from gw"
  },
  "gw.marker": {
    "prefix": "gw.marker",
    "body": "gw.marker",
    "description": "marker from gw"
  },
  "gw.NonScalingObjectSize": {
    "prefix": "gw.NonScalingObjectSize",
    "body": "gw.NonScalingObjectSize",
    "description": "NonScalingObjectSize from gw"
  },
  "gw.polygon": {
    "prefix": "gw.polygon",
    "body": "gw.polygon",
    "description": "polygon from gw"
  },
  "gw.polyline": {
    "prefix": "gw.polyline",
    "body": "gw.polyline",
    "description": "polyline from gw"
  },
  "gw.querySupport": {
    "prefix": "gw.querySupport",
    "body": "gw.querySupport",
    "description": "querySupport from gw"
  },
  "gw.resetUpdateRect": {
    "prefix": "gw.resetUpdateRect",
    "body": "gw.resetUpdateRect",
    "description": "resetUpdateRect from gw"
  },
  "gw.setColor": {
    "prefix": "gw.setColor",
    "body": "gw.setColor",
    "description": "setColor from gw"
  },
  "gw.setDirectXDisplayAllTriangle": {
    "prefix": "gw.setDirectXDisplayAllTriangle",
    "body": "gw.setDirectXDisplayAllTriangle",
    "description": "setDirectXDisplayAllTriangle from gw"
  },
  "gw.setPos": {
    "prefix": "gw.setPos",
    "body": "gw.setPos",
    "description": "setPos from gw"
  },
  "gw.setRndLimits": {
    "prefix": "gw.setRndLimits",
    "body": "gw.setRndLimits",
    "description": "setRndLimits from gw"
  },
  "gw.setSkipCount": {
    "prefix": "gw.setSkipCount",
    "body": "gw.setSkipCount",
    "description": "setSkipCount from gw"
  },
  "gw.setTransform": {
    "prefix": "gw.setTransform",
    "body": "gw.setTransform",
    "description": "setTransform from gw"
  },
  "gw.SnapLength": {
    "prefix": "gw.SnapLength",
    "body": "gw.SnapLength",
    "description": "SnapLength from gw"
  },
  "gw.SnapPoint": {
    "prefix": "gw.SnapPoint",
    "body": "gw.SnapPoint",
    "description": "SnapPoint from gw"
  },
  "gw.startTriangles": {
    "prefix": "gw.startTriangles",
    "body": "gw.startTriangles",
    "description": "startTriangles from gw"
  },
  "gw.text": {
    "prefix": "gw.text",
    "body": "gw.text",
    "description": "text from gw"
  },
  "gw.transPoint": {
    "prefix": "gw.transPoint",
    "body": "gw.transPoint",
    "description": "transPoint from gw"
  },
  "gw.triangle": {
    "prefix": "gw.triangle",
    "body": "gw.triangle",
    "description": "triangle from gw"
  },
  "gw.triStrip": {
    "prefix": "gw.triStrip",
    "body": "gw.triStrip",
    "description": "triStrip from gw"
  },
  "gw.updateScreen": {
    "prefix": "gw.updateScreen",
    "body": "gw.updateScreen",
    "description": "updateScreen from gw"
  },
  "gw.wMarker": {
    "prefix": "gw.wMarker",
    "body": "gw.wMarker",
    "description": "wMarker from gw"
  },
  "gw.wPolygon": {
    "prefix": "gw.wPolygon",
    "body": "gw.wPolygon",
    "description": "wPolygon from gw"
  },
  "gw.wPolyline": {
    "prefix": "gw.wPolyline",
    "body": "gw.wPolyline",
    "description": "wPolyline from gw"
  },
  "gw.wRect": {
    "prefix": "gw.wRect",
    "body": "gw.wRect",
    "description": "wRect from gw"
  },
  "gw.wText": {
    "prefix": "gw.wText",
    "body": "gw.wText",
    "description": "wText from gw"
  },
  "gw.wTransPoint": {
    "prefix": "gw.wTransPoint",
    "body": "gw.wTransPoint",
    "description": "wTransPoint from gw"
  },
  "gw.wTriStrip": {
    "prefix": "gw.wTriStrip",
    "body": "gw.wTriStrip",
    "description": "wTriStrip from gw"
  },
  "hideByCategory.all": {
    "prefix": "hideByCategory.all",
    "body": "hideByCategory.all",
    "description": "all from hideByCategory"
  },
  "hideByCategory.cameras": {
    "prefix": "hideByCategory.cameras",
    "body": "hideByCategory.cameras",
    "description": "cameras from hideByCategory"
  },
  "hideByCategory.geometry": {
    "prefix": "hideByCategory.geometry",
    "body": "hideByCategory.geometry",
    "description": "geometry from hideByCategory"
  },
  "hideByCategory.helpers": {
    "prefix": "hideByCategory.helpers",
    "body": "hideByCategory.helpers",
    "description": "helpers from hideByCategory"
  },
  "hideByCategory.lights": {
    "prefix": "hideByCategory.lights",
    "body": "hideByCategory.lights",
    "description": "lights from hideByCategory"
  },
  "hideByCategory.none": {
    "prefix": "hideByCategory.none",
    "body": "hideByCategory.none",
    "description": "none from hideByCategory"
  },
  "hideByCategory.particles": {
    "prefix": "hideByCategory.particles",
    "body": "hideByCategory.particles",
    "description": "particles from hideByCategory"
  },
  "hideByCategory.shapes": {
    "prefix": "hideByCategory.shapes",
    "body": "hideByCategory.shapes",
    "description": "shapes from hideByCategory"
  },
  "hideByCategory.spacewarps": {
    "prefix": "hideByCategory.spacewarps",
    "body": "hideByCategory.spacewarps",
    "description": "spacewarps from hideByCategory"
  },
  "hkStructTemplate.modifierType": {
    "prefix": "hkStructTemplate.modifierType",
    "body": "hkStructTemplate.modifierType",
    "description": "modifierType from hkStructTemplate"
  },
  "ik.getAxisActive": {
    "prefix": "ik.getAxisActive",
    "body": "ik.getAxisActive",
    "description": "getAxisActive from ik"
  },
  "ik.getAxisDamping": {
    "prefix": "ik.getAxisDamping",
    "body": "ik.getAxisDamping",
    "description": "getAxisDamping from ik"
  },
  "ik.getAxisEase": {
    "prefix": "ik.getAxisEase",
    "body": "ik.getAxisEase",
    "description": "getAxisEase from ik"
  },
  "ik.getAxisLimit": {
    "prefix": "ik.getAxisLimit",
    "body": "ik.getAxisLimit",
    "description": "getAxisLimit from ik"
  },
  "ik.getAxisMax": {
    "prefix": "ik.getAxisMax",
    "body": "ik.getAxisMax",
    "description": "getAxisMax from ik"
  },
  "ik.getAxisMin": {
    "prefix": "ik.getAxisMin",
    "body": "ik.getAxisMin",
    "description": "getAxisMin from ik"
  },
  "ik.getAxisPreferredAngle": {
    "prefix": "ik.getAxisPreferredAngle",
    "body": "ik.getAxisPreferredAngle",
    "description": "getAxisPreferredAngle from ik"
  },
  "ik.getAxisSpring": {
    "prefix": "ik.getAxisSpring",
    "body": "ik.getAxisSpring",
    "description": "getAxisSpring from ik"
  },
  "ik.getAxisSpringOn": {
    "prefix": "ik.getAxisSpringOn",
    "body": "ik.getAxisSpringOn",
    "description": "getAxisSpringOn from ik"
  },
  "ik.getAxisSpringTension": {
    "prefix": "ik.getAxisSpringTension",
    "body": "ik.getAxisSpringTension",
    "description": "getAxisSpringTension from ik"
  },
  "ik.getBindOrient": {
    "prefix": "ik.getBindOrient",
    "body": "ik.getBindOrient",
    "description": "getBindOrient from ik"
  },
  "ik.getBindPos": {
    "prefix": "ik.getBindPos",
    "body": "ik.getBindPos",
    "description": "getBindPos from ik"
  },
  "ik.getEndTime": {
    "prefix": "ik.getEndTime",
    "body": "ik.getEndTime",
    "description": "getEndTime from ik"
  },
  "ik.getIsTerminator": {
    "prefix": "ik.getIsTerminator",
    "body": "ik.getIsTerminator",
    "description": "getIsTerminator from ik"
  },
  "ik.getIterations": {
    "prefix": "ik.getIterations",
    "body": "ik.getIterations",
    "description": "getIterations from ik"
  },
  "ik.getPinNode": {
    "prefix": "ik.getPinNode",
    "body": "ik.getPinNode",
    "description": "getPinNode from ik"
  },
  "ik.getPosThreshold": {
    "prefix": "ik.getPosThreshold",
    "body": "ik.getPosThreshold",
    "description": "getPosThreshold from ik"
  },
  "ik.getRotThreshold": {
    "prefix": "ik.getRotThreshold",
    "body": "ik.getRotThreshold",
    "description": "getRotThreshold from ik"
  },
  "ik.getStartTime": {
    "prefix": "ik.getStartTime",
    "body": "ik.getStartTime",
    "description": "getStartTime from ik"
  },
  "ik.setAxisActive": {
    "prefix": "ik.setAxisActive",
    "body": "ik.setAxisActive",
    "description": "setAxisActive from ik"
  },
  "ik.setAxisDamping": {
    "prefix": "ik.setAxisDamping",
    "body": "ik.setAxisDamping",
    "description": "setAxisDamping from ik"
  },
  "ik.setAxisEase": {
    "prefix": "ik.setAxisEase",
    "body": "ik.setAxisEase",
    "description": "setAxisEase from ik"
  },
  "ik.setAxisLimit": {
    "prefix": "ik.setAxisLimit",
    "body": "ik.setAxisLimit",
    "description": "setAxisLimit from ik"
  },
  "ik.setAxisMax": {
    "prefix": "ik.setAxisMax",
    "body": "ik.setAxisMax",
    "description": "setAxisMax from ik"
  },
  "ik.setAxisMin": {
    "prefix": "ik.setAxisMin",
    "body": "ik.setAxisMin",
    "description": "setAxisMin from ik"
  },
  "ik.setAxisPreferredAngle": {
    "prefix": "ik.setAxisPreferredAngle",
    "body": "ik.setAxisPreferredAngle",
    "description": "setAxisPreferredAngle from ik"
  },
  "ik.setAxisSpring": {
    "prefix": "ik.setAxisSpring",
    "body": "ik.setAxisSpring",
    "description": "setAxisSpring from ik"
  },
  "ik.setAxisSpringOn": {
    "prefix": "ik.setAxisSpringOn",
    "body": "ik.setAxisSpringOn",
    "description": "setAxisSpringOn from ik"
  },
  "ik.setAxisSpringTension": {
    "prefix": "ik.setAxisSpringTension",
    "body": "ik.setAxisSpringTension",
    "description": "setAxisSpringTension from ik"
  },
  "ik.setBindOrient": {
    "prefix": "ik.setBindOrient",
    "body": "ik.setBindOrient",
    "description": "setBindOrient from ik"
  },
  "ik.setBindPos": {
    "prefix": "ik.setBindPos",
    "body": "ik.setBindPos",
    "description": "setBindPos from ik"
  },
  "ik.setEndTime": {
    "prefix": "ik.setEndTime",
    "body": "ik.setEndTime",
    "description": "setEndTime from ik"
  },
  "ik.setIsTerminator": {
    "prefix": "ik.setIsTerminator",
    "body": "ik.setIsTerminator",
    "description": "setIsTerminator from ik"
  },
  "ik.setIterations": {
    "prefix": "ik.setIterations",
    "body": "ik.setIterations",
    "description": "setIterations from ik"
  },
  "ik.setPinNode": {
    "prefix": "ik.setPinNode",
    "body": "ik.setPinNode",
    "description": "setPinNode from ik"
  },
  "ik.setPosThreshold": {
    "prefix": "ik.setPosThreshold",
    "body": "ik.setPosThreshold",
    "description": "setPosThreshold from ik"
  },
  "ik.setPrecedence": {
    "prefix": "ik.setPrecedence",
    "body": "ik.setPrecedence",
    "description": "setPrecedence from ik"
  },
  "ik.setRotThreshold": {
    "prefix": "ik.setRotThreshold",
    "body": "ik.setRotThreshold",
    "description": "setRotThreshold from ik"
  },
  "ik.setStartTime": {
    "prefix": "ik.setStartTime",
    "body": "ik.setStartTime",
    "description": "setStartTime from ik"
  },
  "IMouseDragger._aryContrail": {
    "prefix": "IMouseDragger._aryContrail",
    "body": "IMouseDragger._aryContrail",
    "description": "_aryContrail from IMouseDragger"
  },
  "IMouseDragger._bCurLButton": {
    "prefix": "IMouseDragger._bCurLButton",
    "body": "IMouseDragger._bCurLButton",
    "description": "_bCurLButton from IMouseDragger"
  },
  "IMouseDragger._bIndirectMode": {
    "prefix": "IMouseDragger._bIndirectMode",
    "body": "IMouseDragger._bIndirectMode",
    "description": "_bIndirectMode from IMouseDragger"
  },
  "IMouseDragger._bInDragging": {
    "prefix": "IMouseDragger._bInDragging",
    "body": "IMouseDragger._bInDragging",
    "description": "_bInDragging from IMouseDragger"
  },
  "IMouseDragger._bPrevLButton": {
    "prefix": "IMouseDragger._bPrevLButton",
    "body": "IMouseDragger._bPrevLButton",
    "description": "_bPrevLButton from IMouseDragger"
  },
  "IMouseDragger._maxVel": {
    "prefix": "IMouseDragger._maxVel",
    "body": "IMouseDragger._maxVel",
    "description": "_maxVel from IMouseDragger"
  },
  "IMouseDragger._nConSize": {
    "prefix": "IMouseDragger._nConSize",
    "body": "IMouseDragger._nConSize",
    "description": "_nConSize from IMouseDragger"
  },
  "IMouseDragger._objDragged": {
    "prefix": "IMouseDragger._objDragged",
    "body": "IMouseDragger._objDragged",
    "description": "_objDragged from IMouseDragger"
  },
  "IMouseDragger._pivotOffset": {
    "prefix": "IMouseDragger._pivotOffset",
    "body": "IMouseDragger._pivotOffset",
    "description": "_pivotOffset from IMouseDragger"
  },
  "IMouseDragger.CalcVelocity": {
    "prefix": "IMouseDragger.CalcVelocity",
    "body": "IMouseDragger.CalcVelocity",
    "description": "CalcVelocity from IMouseDragger"
  },
  "IMouseDragger.onDragging": {
    "prefix": "IMouseDragger.onDragging",
    "body": "IMouseDragger.onDragging",
    "description": "onDragging from IMouseDragger"
  },
  "IMouseDragger.onEndDrag": {
    "prefix": "IMouseDragger.onEndDrag",
    "body": "IMouseDragger.onEndDrag",
    "description": "onEndDrag from IMouseDragger"
  },
  "IMouseDragger.onProceccing": {
    "prefix": "IMouseDragger.onProceccing",
    "body": "IMouseDragger.onProceccing",
    "description": "onProceccing from IMouseDragger"
  },
  "IMouseDragger.onStartDrag": {
    "prefix": "IMouseDragger.onStartDrag",
    "body": "IMouseDragger.onStartDrag",
    "description": "onStartDrag from IMouseDragger"
  },
  "IMouseDragger.TestIndirectMode": {
    "prefix": "IMouseDragger.TestIndirectMode",
    "body": "IMouseDragger.TestIndirectMode",
    "description": "TestIndirectMode from IMouseDragger"
  },
  "InsertVSpinnerCallback.OnChanged": {
    "prefix": "InsertVSpinnerCallback.OnChanged",
    "body": "InsertVSpinnerCallback.OnChanged",
    "description": "OnChanged from InsertVSpinnerCallback"
  },
  "keyboard.altPressed": {
    "prefix": "keyboard.altPressed",
    "body": "keyboard.altPressed",
    "description": "altPressed from keyboard"
  },
  "keyboard.controlPressed": {
    "prefix": "keyboard.controlPressed",
    "body": "keyboard.controlPressed",
    "description": "controlPressed from keyboard"
  },
  "keyboard.escPressed": {
    "prefix": "keyboard.escPressed",
    "body": "keyboard.escPressed",
    "description": "escPressed from keyboard"
  },
  "KeyVal_struct.keyVal": {
    "prefix": "KeyVal_struct.keyVal",
    "body": "KeyVal_struct.keyVal",
    "description": "keyVal from KeyVal_struct"
  },
  "LE.addASec": {
    "prefix": "LE.addASec",
    "body": "LE.addASec",
    "description": "addASec from LE"
  },
  "LE.addGlow": {
    "prefix": "LE.addGlow",
    "body": "LE.addGlow",
    "description": "addGlow from LE"
  },
  "LE.addLight": {
    "prefix": "LE.addLight",
    "body": "LE.addLight",
    "description": "addLight from LE"
  },
  "LE.addLightNode": {
    "prefix": "LE.addLightNode",
    "body": "LE.addLightNode",
    "description": "addLightNode from LE"
  },
  "LE.addMSec": {
    "prefix": "LE.addMSec",
    "body": "LE.addMSec",
    "description": "addMSec from LE"
  },
  "LE.addRay": {
    "prefix": "LE.addRay",
    "body": "LE.addRay",
    "description": "addRay from LE"
  },
  "LE.addRing": {
    "prefix": "LE.addRing",
    "body": "LE.addRing",
    "description": "addRing from LE"
  },
  "LE.addStar": {
    "prefix": "LE.addStar",
    "body": "LE.addStar",
    "description": "addStar from LE"
  },
  "LE.addStreak": {
    "prefix": "LE.addStreak",
    "body": "LE.addStreak",
    "description": "addStreak from LE"
  },
  "LE.deleteElement": {
    "prefix": "LE.deleteElement",
    "body": "LE.deleteElement",
    "description": "deleteElement from LE"
  },
  "LE.deleteElementByName": {
    "prefix": "LE.deleteElementByName",
    "body": "LE.deleteElementByName",
    "description": "deleteElementByName from LE"
  },
  "LE.deleteLight": {
    "prefix": "LE.deleteLight",
    "body": "LE.deleteLight",
    "description": "deleteLight from LE"
  },
  "LE.deleteLightByName": {
    "prefix": "LE.deleteLightByName",
    "body": "LE.deleteLightByName",
    "description": "deleteLightByName from LE"
  },
  "LE.lightIndex": {
    "prefix": "LE.lightIndex",
    "body": "LE.lightIndex",
    "description": "lightIndex from LE"
  },
  "LE.load": {
    "prefix": "LE.load",
    "body": "LE.load",
    "description": "load from LE"
  },
  "LE.numLights": {
    "prefix": "LE.numLights",
    "body": "LE.numLights",
    "description": "numLights from LE"
  },
  "LE.save": {
    "prefix": "LE.save",
    "body": "LE.save",
    "description": "save from LE"
  },
  "lightCreationToolStr.isCreatingLight": {
    "prefix": "lightCreationToolStr.isCreatingLight",
    "body": "lightCreationToolStr.isCreatingLight",
    "description": "isCreatingLight from lightCreationToolStr"
  },
  "lightCreationToolStr.isTargeted": {
    "prefix": "lightCreationToolStr.isTargeted",
    "body": "lightCreationToolStr.isTargeted",
    "description": "isTargeted from lightCreationToolStr"
  },
  "lightCreationToolStr.lightClass": {
    "prefix": "lightCreationToolStr.lightClass",
    "body": "lightCreationToolStr.lightClass",
    "description": "lightClass from lightCreationToolStr"
  },
  "lightCreationToolStr.lightHeight": {
    "prefix": "lightCreationToolStr.lightHeight",
    "body": "lightCreationToolStr.lightHeight",
    "description": "lightHeight from lightCreationToolStr"
  },
  "lightCreationToolStr.lightPropfn": {
    "prefix": "lightCreationToolStr.lightPropfn",
    "body": "lightCreationToolStr.lightPropfn",
    "description": "lightPropfn from lightCreationToolStr"
  },
  "LightInfo.lightValidity": {
    "prefix": "LightInfo.lightValidity",
    "body": "LightInfo.lightValidity",
    "description": "lightValidity from LightInfo"
  },
  "LinkCtrl.addLink": {
    "prefix": "LinkCtrl.addLink",
    "body": "LinkCtrl.addLink",
    "description": "addLink from LinkCtrl"
  },
  "LinkCtrl.deleteLink": {
    "prefix": "LinkCtrl.deleteLink",
    "body": "LinkCtrl.deleteLink",
    "description": "deleteLink from LinkCtrl"
  },
  "LinkCtrl.getLinkCount": {
    "prefix": "LinkCtrl.getLinkCount",
    "body": "LinkCtrl.getLinkCount",
    "description": "getLinkCount from LinkCtrl"
  },
  "LinkCtrl.getLinkTime": {
    "prefix": "LinkCtrl.getLinkTime",
    "body": "LinkCtrl.getLinkTime",
    "description": "getLinkTime from LinkCtrl"
  },
  "LinkCtrl.setLinkNode": {
    "prefix": "LinkCtrl.setLinkNode",
    "body": "LinkCtrl.setLinkNode",
    "description": "setLinkNode from LinkCtrl"
  },
  "LinkCtrl.setLinkTime": {
    "prefix": "LinkCtrl.setLinkTime",
    "body": "LinkCtrl.setLinkTime",
    "description": "setLinkTime from LinkCtrl"
  },
  "ListCtrl.getActive": {
    "prefix": "ListCtrl.getActive",
    "body": "ListCtrl.getActive",
    "description": "getActive from ListCtrl"
  },
  "ListCtrl.getName": {
    "prefix": "ListCtrl.getName",
    "body": "ListCtrl.getName",
    "description": "getName from ListCtrl"
  },
  "ListCtrl.setActive": {
    "prefix": "ListCtrl.setActive",
    "body": "ListCtrl.setActive",
    "description": "setActive from ListCtrl"
  },
  "listview.getIndent": {
    "prefix": "listview.getIndent",
    "body": "listview.getIndent",
    "description": "getIndent from listview"
  },
  "listview.hitTest": {
    "prefix": "listview.hitTest",
    "body": "listview.hitTest",
    "description": "hitTest from listview"
  },
  "ListViewOps.AddLvColumnHeader": {
    "prefix": "ListViewOps.AddLvColumnHeader",
    "body": "ListViewOps.AddLvColumnHeader",
    "description": "AddLvColumnHeader from ListViewOps"
  },
  "ListViewOps.AddLvItem": {
    "prefix": "ListViewOps.AddLvItem",
    "body": "ListViewOps.AddLvItem",
    "description": "AddLvItem from ListViewOps"
  },
  "ListViewOps.ClearColumns": {
    "prefix": "ListViewOps.ClearColumns",
    "body": "ListViewOps.ClearColumns",
    "description": "ClearColumns from ListViewOps"
  },
  "ListViewOps.ClearLvItems": {
    "prefix": "ListViewOps.ClearLvItems",
    "body": "ListViewOps.ClearLvItems",
    "description": "ClearLvItems from ListViewOps"
  },
  "ListViewOps.DeleteLvItem": {
    "prefix": "ListViewOps.DeleteLvItem",
    "body": "ListViewOps.DeleteLvItem",
    "description": "DeleteLvItem from ListViewOps"
  },
  "ListViewOps.dotNetColor_to_MXSColor": {
    "prefix": "ListViewOps.dotNetColor_to_MXSColor",
    "body": "ListViewOps.dotNetColor_to_MXSColor",
    "description": "dotNetColor_to_MXSColor from ListViewOps"
  },
  "ListViewOps.GetLvItemByname": {
    "prefix": "ListViewOps.GetLvItemByname",
    "body": "ListViewOps.GetLvItemByname",
    "description": "GetLvItemByname from ListViewOps"
  },
  "ListViewOps.GetLvItemCheck": {
    "prefix": "ListViewOps.GetLvItemCheck",
    "body": "ListViewOps.GetLvItemCheck",
    "description": "GetLvItemCheck from ListViewOps"
  },
  "ListViewOps.GetLvItemCount": {
    "prefix": "ListViewOps.GetLvItemCount",
    "body": "ListViewOps.GetLvItemCount",
    "description": "GetLvItemCount from ListViewOps"
  },
  "ListViewOps.GetLvItemName": {
    "prefix": "ListViewOps.GetLvItemName",
    "body": "ListViewOps.GetLvItemName",
    "description": "GetLvItemName from ListViewOps"
  },
  "ListViewOps.GetLvItems": {
    "prefix": "ListViewOps.GetLvItems",
    "body": "ListViewOps.GetLvItems",
    "description": "GetLvItems from ListViewOps"
  },
  "ListViewOps.GetLvSelection": {
    "prefix": "ListViewOps.GetLvSelection",
    "body": "ListViewOps.GetLvSelection",
    "description": "GetLvSelection from ListViewOps"
  },
  "ListViewOps.GetLvSingleSelected": {
    "prefix": "ListViewOps.GetLvSingleSelected",
    "body": "ListViewOps.GetLvSingleSelected",
    "description": "GetLvSingleSelected from ListViewOps"
  },
  "ListViewOps.GetSelectedIndex": {
    "prefix": "ListViewOps.GetSelectedIndex",
    "body": "ListViewOps.GetSelectedIndex",
    "description": "GetSelectedIndex from ListViewOps"
  },
  "ListViewOps.HighLightLvItem": {
    "prefix": "ListViewOps.HighLightLvItem",
    "body": "ListViewOps.HighLightLvItem",
    "description": "HighLightLvItem from ListViewOps"
  },
  "ListViewOps.InitImageList": {
    "prefix": "ListViewOps.InitImageList",
    "body": "ListViewOps.InitImageList",
    "description": "InitImageList from ListViewOps"
  },
  "ListViewOps.initListView": {
    "prefix": "ListViewOps.initListView",
    "body": "ListViewOps.initListView",
    "description": "initListView from ListViewOps"
  },
  "ListViewOps.m_dnColor": {
    "prefix": "ListViewOps.m_dnColor",
    "body": "ListViewOps.m_dnColor",
    "description": "m_dnColor from ListViewOps"
  },
  "ListViewOps.MXSColor_to_dotNetColor": {
    "prefix": "ListViewOps.MXSColor_to_dotNetColor",
    "body": "ListViewOps.MXSColor_to_dotNetColor",
    "description": "MXSColor_to_dotNetColor from ListViewOps"
  },
  "ListViewOps.refreshListView": {
    "prefix": "ListViewOps.refreshListView",
    "body": "ListViewOps.refreshListView",
    "description": "refreshListView from ListViewOps"
  },
  "ListViewOps.SelectLvItem": {
    "prefix": "ListViewOps.SelectLvItem",
    "body": "ListViewOps.SelectLvItem",
    "description": "SelectLvItem from ListViewOps"
  },
  "ListViewOps.SetFontStyle": {
    "prefix": "ListViewOps.SetFontStyle",
    "body": "ListViewOps.SetFontStyle",
    "description": "SetFontStyle from ListViewOps"
  },
  "ListViewOps.SetForeColor": {
    "prefix": "ListViewOps.SetForeColor",
    "body": "ListViewOps.SetForeColor",
    "description": "SetForeColor from ListViewOps"
  },
  "ListViewOps.SetLvItemCheck": {
    "prefix": "ListViewOps.SetLvItemCheck",
    "body": "ListViewOps.SetLvItemCheck",
    "description": "SetLvItemCheck from ListViewOps"
  },
  "ListViewOps.SetLvItemRowColor": {
    "prefix": "ListViewOps.SetLvItemRowColor",
    "body": "ListViewOps.SetLvItemRowColor",
    "description": "SetLvItemRowColor from ListViewOps"
  },
  "logsystem.logEntry": {
    "prefix": "logsystem.logEntry",
    "body": "logsystem.logEntry",
    "description": "logEntry from logsystem"
  },
  "logsystem.quietMode": {
    "prefix": "logsystem.quietMode",
    "body": "logsystem.quietMode",
    "description": "quietMode from logsystem"
  },
  "macros.edit": {
    "prefix": "macros.edit",
    "body": "macros.edit",
    "description": "edit from macros"
  },
  "macros.list": {
    "prefix": "macros.list",
    "body": "macros.list",
    "description": "list from macros"
  },
  "macros.new": {
    "prefix": "macros.new",
    "body": "macros.new",
    "description": "new from macros"
  },
  "macros.run": {
    "prefix": "macros.run",
    "body": "macros.run",
    "description": "run from macros"
  },
  "Main_Ribbon.AllAreClass": {
    "prefix": "Main_Ribbon.AllAreClass",
    "body": "Main_Ribbon.AllAreClass",
    "description": "AllAreClass from Main_Ribbon"
  },
  "Main_Ribbon.AllAreEditPatch": {
    "prefix": "Main_Ribbon.AllAreEditPatch",
    "body": "Main_Ribbon.AllAreEditPatch",
    "description": "AllAreEditPatch from Main_Ribbon"
  },
  "Main_Ribbon.AllArePrimitives": {
    "prefix": "Main_Ribbon.AllArePrimitives",
    "body": "Main_Ribbon.AllArePrimitives",
    "description": "AllArePrimitives from Main_Ribbon"
  },
  "Main_Ribbon.AllAreSuperclass": {
    "prefix": "Main_Ribbon.AllAreSuperclass",
    "body": "Main_Ribbon.AllAreSuperclass",
    "description": "AllAreSuperclass from Main_Ribbon"
  },
  "Main_Ribbon.AllChildrenSelectedRecursive": {
    "prefix": "Main_Ribbon.AllChildrenSelectedRecursive",
    "body": "Main_Ribbon.AllChildrenSelectedRecursive",
    "description": "AllChildrenSelectedRecursive from Main_Ribbon"
  },
  "Main_Ribbon.EscapeSOMode": {
    "prefix": "Main_Ribbon.EscapeSOMode",
    "body": "Main_Ribbon.EscapeSOMode",
    "description": "EscapeSOMode from Main_Ribbon"
  },
  "Main_Ribbon.FlipAllLights": {
    "prefix": "Main_Ribbon.FlipAllLights",
    "body": "Main_Ribbon.FlipAllLights",
    "description": "FlipAllLights from Main_Ribbon"
  },
  "Main_Ribbon.IsValidGroupSelection": {
    "prefix": "Main_Ribbon.IsValidGroupSelection",
    "body": "Main_Ribbon.IsValidGroupSelection",
    "description": "IsValidGroupSelection from Main_Ribbon"
  },
  "mapPaths.add": {
    "prefix": "mapPaths.add",
    "body": "mapPaths.add",
    "description": "add from mapPaths"
  },
  "mapPaths.count": {
    "prefix": "mapPaths.count",
    "body": "mapPaths.count",
    "description": "count from mapPaths"
  },
  "mapPaths.get": {
    "prefix": "mapPaths.get",
    "body": "mapPaths.get",
    "description": "get from mapPaths"
  },
  "mapPaths.getFullFilePath": {
    "prefix": "mapPaths.getFullFilePath",
    "body": "mapPaths.getFullFilePath",
    "description": "getFullFilePath from mapPaths"
  },
  "MatEditor.close": {
    "prefix": "MatEditor.close",
    "body": "MatEditor.close",
    "description": "close from MatEditor"
  },
  "MatEditor.mode": {
    "prefix": "MatEditor.mode",
    "body": "MatEditor.mode",
    "description": "mode from MatEditor"
  },
  "MatEditor.open": {
    "prefix": "MatEditor.open",
    "body": "MatEditor.open",
    "description": "open from MatEditor"
  },
  "mcrUtils.ValidMod": {
    "prefix": "mcrUtils.ValidMod",
    "body": "mcrUtils.ValidMod",
    "description": "ValidMod from mcrUtils"
  },
  "meditUtilities.getDefaultMaterial": {
    "prefix": "meditUtilities.getDefaultMaterial",
    "body": "meditUtilities.getDefaultMaterial",
    "description": "getDefaultMaterial from meditUtilities"
  },
  "meditUtilities.getDefaultsFile": {
    "prefix": "meditUtilities.getDefaultsFile",
    "body": "meditUtilities.getDefaultsFile",
    "description": "getDefaultsFile from meditUtilities"
  },
  "meditUtilities.isMaterialInUse": {
    "prefix": "meditUtilities.isMaterialInUse",
    "body": "meditUtilities.isMaterialInUse",
    "description": "isMaterialInUse from meditUtilities"
  },
  "meditUtilities.Set_mrArchTemplate_ActiveMaterial_FromMaterialInMatlib": {
    "prefix": "meditUtilities.Set_mrArchTemplate_ActiveMaterial_FromMaterialInMatlib",
    "body": "meditUtilities.Set_mrArchTemplate_ActiveMaterial_FromMaterialInMatlib",
    "description": "Set_mrArchTemplate_ActiveMaterial_FromMaterialInMatlib from meditUtilities"
  },
  "meshop.applyUVWMap": {
    "prefix": "meshop.applyUVWMap",
    "body": "meshop.applyUVWMap",
    "description": "applyUVWMap from meshop"
  },
  "meshop.attach": {
    "prefix": "meshop.attach",
    "body": "meshop.attach",
    "description": "attach from meshop"
  },
  "meshop.autoEdge": {
    "prefix": "meshop.autoEdge",
    "body": "meshop.autoEdge",
    "description": "autoEdge from meshop"
  },
  "meshop.autosmooth": {
    "prefix": "meshop.autosmooth",
    "body": "meshop.autosmooth",
    "description": "autosmooth from meshop"
  },
  "meshop.bevelFaces": {
    "prefix": "meshop.bevelFaces",
    "body": "meshop.bevelFaces",
    "description": "bevelFaces from meshop"
  },
  "meshop.breakVerts": {
    "prefix": "meshop.breakVerts",
    "body": "meshop.breakVerts",
    "description": "breakVerts from meshop"
  },
  "meshop.buildMapFaces": {
    "prefix": "meshop.buildMapFaces",
    "body": "meshop.buildMapFaces",
    "description": "buildMapFaces from meshop"
  },
  "meshop.chamferEdges": {
    "prefix": "meshop.chamferEdges",
    "body": "meshop.chamferEdges",
    "description": "chamferEdges from meshop"
  },
  "meshop.chamferVerts": {
    "prefix": "meshop.chamferVerts",
    "body": "meshop.chamferVerts",
    "description": "chamferVerts from meshop"
  },
  "meshop.cloneEdges": {
    "prefix": "meshop.cloneEdges",
    "body": "meshop.cloneEdges",
    "description": "cloneEdges from meshop"
  },
  "meshop.cloneFaces": {
    "prefix": "meshop.cloneFaces",
    "body": "meshop.cloneFaces",
    "description": "cloneFaces from meshop"
  },
  "meshop.cloneVerts": {
    "prefix": "meshop.cloneVerts",
    "body": "meshop.cloneVerts",
    "description": "cloneVerts from meshop"
  },
  "meshop.collapseEdges": {
    "prefix": "meshop.collapseEdges",
    "body": "meshop.collapseEdges",
    "description": "collapseEdges from meshop"
  },
  "meshop.collapseFaces": {
    "prefix": "meshop.collapseFaces",
    "body": "meshop.collapseFaces",
    "description": "collapseFaces from meshop"
  },
  "meshop.createPolygon": {
    "prefix": "meshop.createPolygon",
    "body": "meshop.createPolygon",
    "description": "createPolygon from meshop"
  },
  "meshop.cut": {
    "prefix": "meshop.cut",
    "body": "meshop.cut",
    "description": "cut from meshop"
  },
  "meshop.defaultMapFaces": {
    "prefix": "meshop.defaultMapFaces",
    "body": "meshop.defaultMapFaces",
    "description": "defaultMapFaces from meshop"
  },
  "meshop.deleteEdges": {
    "prefix": "meshop.deleteEdges",
    "body": "meshop.deleteEdges",
    "description": "deleteEdges from meshop"
  },
  "meshop.deleteFaces": {
    "prefix": "meshop.deleteFaces",
    "body": "meshop.deleteFaces",
    "description": "deleteFaces from meshop"
  },
  "meshop.deleteIsoMapVerts": {
    "prefix": "meshop.deleteIsoMapVerts",
    "body": "meshop.deleteIsoMapVerts",
    "description": "deleteIsoMapVerts from meshop"
  },
  "meshop.deleteIsoMapVertsAll": {
    "prefix": "meshop.deleteIsoMapVertsAll",
    "body": "meshop.deleteIsoMapVertsAll",
    "description": "deleteIsoMapVertsAll from meshop"
  },
  "meshop.deleteIsoVerts": {
    "prefix": "meshop.deleteIsoVerts",
    "body": "meshop.deleteIsoVerts",
    "description": "deleteIsoVerts from meshop"
  },
  "meshop.deleteMapVertSet": {
    "prefix": "meshop.deleteMapVertSet",
    "body": "meshop.deleteMapVertSet",
    "description": "deleteMapVertSet from meshop"
  },
  "meshop.deleteVerts": {
    "prefix": "meshop.deleteVerts",
    "body": "meshop.deleteVerts",
    "description": "deleteVerts from meshop"
  },
  "meshop.detachFaces": {
    "prefix": "meshop.detachFaces",
    "body": "meshop.detachFaces",
    "description": "detachFaces from meshop"
  },
  "meshop.detachVerts": {
    "prefix": "meshop.detachVerts",
    "body": "meshop.detachVerts",
    "description": "detachVerts from meshop"
  },
  "meshop.divideEdge": {
    "prefix": "meshop.divideEdge",
    "body": "meshop.divideEdge",
    "description": "divideEdge from meshop"
  },
  "meshop.divideEdges": {
    "prefix": "meshop.divideEdges",
    "body": "meshop.divideEdges",
    "description": "divideEdges from meshop"
  },
  "meshop.divideFace": {
    "prefix": "meshop.divideFace",
    "body": "meshop.divideFace",
    "description": "divideFace from meshop"
  },
  "meshop.divideFaceByEdges": {
    "prefix": "meshop.divideFaceByEdges",
    "body": "meshop.divideFaceByEdges",
    "description": "divideFaceByEdges from meshop"
  },
  "meshop.divideFaces": {
    "prefix": "meshop.divideFaces",
    "body": "meshop.divideFaces",
    "description": "divideFaces from meshop"
  },
  "meshop.edgeTessellate": {
    "prefix": "meshop.edgeTessellate",
    "body": "meshop.edgeTessellate",
    "description": "edgeTessellate from meshop"
  },
  "meshop.explodeAllFaces": {
    "prefix": "meshop.explodeAllFaces",
    "body": "meshop.explodeAllFaces",
    "description": "explodeAllFaces from meshop"
  },
  "meshop.explodeFaces": {
    "prefix": "meshop.explodeFaces",
    "body": "meshop.explodeFaces",
    "description": "explodeFaces from meshop"
  },
  "meshop.extrudeEdges": {
    "prefix": "meshop.extrudeEdges",
    "body": "meshop.extrudeEdges",
    "description": "extrudeEdges from meshop"
  },
  "meshop.extrudeFaces": {
    "prefix": "meshop.extrudeFaces",
    "body": "meshop.extrudeFaces",
    "description": "extrudeFaces from meshop"
  },
  "meshop.flipNormals": {
    "prefix": "meshop.flipNormals",
    "body": "meshop.flipNormals",
    "description": "flipNormals from meshop"
  },
  "meshop.freeMapChannel": {
    "prefix": "meshop.freeMapChannel",
    "body": "meshop.freeMapChannel",
    "description": "freeMapChannel from meshop"
  },
  "meshop.freeMapFaces": {
    "prefix": "meshop.freeMapFaces",
    "body": "meshop.freeMapFaces",
    "description": "freeMapFaces from meshop"
  },
  "meshop.freeMapVerts": {
    "prefix": "meshop.freeMapVerts",
    "body": "meshop.freeMapVerts",
    "description": "freeMapVerts from meshop"
  },
  "meshop.freeVAlphas": {
    "prefix": "meshop.freeVAlphas",
    "body": "meshop.freeVAlphas",
    "description": "freeVAlphas from meshop"
  },
  "meshop.freeVData": {
    "prefix": "meshop.freeVData",
    "body": "meshop.freeVData",
    "description": "freeVData from meshop"
  },
  "meshop.freeVertCorners": {
    "prefix": "meshop.freeVertCorners",
    "body": "meshop.freeVertCorners",
    "description": "freeVertCorners from meshop"
  },
  "meshop.freeVertWeights": {
    "prefix": "meshop.freeVertWeights",
    "body": "meshop.freeVertWeights",
    "description": "freeVertWeights from meshop"
  },
  "meshop.freeVSelectWeights": {
    "prefix": "meshop.freeVSelectWeights",
    "body": "meshop.freeVSelectWeights",
    "description": "freeVSelectWeights from meshop"
  },
  "meshop.getAffectBackfacing": {
    "prefix": "meshop.getAffectBackfacing",
    "body": "meshop.getAffectBackfacing",
    "description": "getAffectBackfacing from meshop"
  },
  "meshop.getBaryCoords": {
    "prefix": "meshop.getBaryCoords",
    "body": "meshop.getBaryCoords",
    "description": "getBaryCoords from meshop"
  },
  "meshop.getBubble": {
    "prefix": "meshop.getBubble",
    "body": "meshop.getBubble",
    "description": "getBubble from meshop"
  },
  "meshop.getDisplacementMapping": {
    "prefix": "meshop.getDisplacementMapping",
    "body": "meshop.getDisplacementMapping",
    "description": "getDisplacementMapping from meshop"
  },
  "meshop.getEdgesReverseEdge": {
    "prefix": "meshop.getEdgesReverseEdge",
    "body": "meshop.getEdgesReverseEdge",
    "description": "getEdgesReverseEdge from meshop"
  },
  "meshop.getEdgesUsingFace": {
    "prefix": "meshop.getEdgesUsingFace",
    "body": "meshop.getEdgesUsingFace",
    "description": "getEdgesUsingFace from meshop"
  },
  "meshop.getEdgesUsingVert": {
    "prefix": "meshop.getEdgesUsingVert",
    "body": "meshop.getEdgesUsingVert",
    "description": "getEdgesUsingVert from meshop"
  },
  "meshop.getElementsUsingFace": {
    "prefix": "meshop.getElementsUsingFace",
    "body": "meshop.getElementsUsingFace",
    "description": "getElementsUsingFace from meshop"
  },
  "meshop.getExtrusionType": {
    "prefix": "meshop.getExtrusionType",
    "body": "meshop.getExtrusionType",
    "description": "getExtrusionType from meshop"
  },
  "meshop.getFaceArea": {
    "prefix": "meshop.getFaceArea",
    "body": "meshop.getFaceArea",
    "description": "getFaceArea from meshop"
  },
  "meshop.getFaceCenter": {
    "prefix": "meshop.getFaceCenter",
    "body": "meshop.getFaceCenter",
    "description": "getFaceCenter from meshop"
  },
  "meshop.getFaceRNormals": {
    "prefix": "meshop.getFaceRNormals",
    "body": "meshop.getFaceRNormals",
    "description": "getFaceRNormals from meshop"
  },
  "meshop.getFacesUsingEdge": {
    "prefix": "meshop.getFacesUsingEdge",
    "body": "meshop.getFacesUsingEdge",
    "description": "getFacesUsingEdge from meshop"
  },
  "meshop.getFacesUsingVert": {
    "prefix": "meshop.getFacesUsingVert",
    "body": "meshop.getFacesUsingVert",
    "description": "getFacesUsingVert from meshop"
  },
  "meshop.getFalloff": {
    "prefix": "meshop.getFalloff",
    "body": "meshop.getFalloff",
    "description": "getFalloff from meshop"
  },
  "meshop.getHiddenFaces": {
    "prefix": "meshop.getHiddenFaces",
    "body": "meshop.getHiddenFaces",
    "description": "getHiddenFaces from meshop"
  },
  "meshop.getHiddenVerts": {
    "prefix": "meshop.getHiddenVerts",
    "body": "meshop.getHiddenVerts",
    "description": "getHiddenVerts from meshop"
  },
  "meshop.getIgnoreBackfacing": {
    "prefix": "meshop.getIgnoreBackfacing",
    "body": "meshop.getIgnoreBackfacing",
    "description": "getIgnoreBackfacing from meshop"
  },
  "meshop.getIgnoreVisEdges": {
    "prefix": "meshop.getIgnoreVisEdges",
    "body": "meshop.getIgnoreVisEdges",
    "description": "getIgnoreVisEdges from meshop"
  },
  "meshop.getIsoMapVerts": {
    "prefix": "meshop.getIsoMapVerts",
    "body": "meshop.getIsoMapVerts",
    "description": "getIsoMapVerts from meshop"
  },
  "meshop.getIsoVerts": {
    "prefix": "meshop.getIsoVerts",
    "body": "meshop.getIsoVerts",
    "description": "getIsoVerts from meshop"
  },
  "meshop.getMapFace": {
    "prefix": "meshop.getMapFace",
    "body": "meshop.getMapFace",
    "description": "getMapFace from meshop"
  },
  "meshop.getMapFacesUsingMapVert": {
    "prefix": "meshop.getMapFacesUsingMapVert",
    "body": "meshop.getMapFacesUsingMapVert",
    "description": "getMapFacesUsingMapVert from meshop"
  },
  "meshop.getMapSupport": {
    "prefix": "meshop.getMapSupport",
    "body": "meshop.getMapSupport",
    "description": "getMapSupport from meshop"
  },
  "meshop.getMapVert": {
    "prefix": "meshop.getMapVert",
    "body": "meshop.getMapVert",
    "description": "getMapVert from meshop"
  },
  "meshop.getMapVertsUsingMapFace": {
    "prefix": "meshop.getMapVertsUsingMapFace",
    "body": "meshop.getMapVertsUsingMapFace",
    "description": "getMapVertsUsingMapFace from meshop"
  },
  "meshop.getNormalSize": {
    "prefix": "meshop.getNormalSize",
    "body": "meshop.getNormalSize",
    "description": "getNormalSize from meshop"
  },
  "meshop.getNumCPVVerts": {
    "prefix": "meshop.getNumCPVVerts",
    "body": "meshop.getNumCPVVerts",
    "description": "getNumCPVVerts from meshop"
  },
  "meshop.getNumFaces": {
    "prefix": "meshop.getNumFaces",
    "body": "meshop.getNumFaces",
    "description": "getNumFaces from meshop"
  },
  "meshop.getNumMapFaces": {
    "prefix": "meshop.getNumMapFaces",
    "body": "meshop.getNumMapFaces",
    "description": "getNumMapFaces from meshop"
  },
  "meshop.getNumMaps": {
    "prefix": "meshop.getNumMaps",
    "body": "meshop.getNumMaps",
    "description": "getNumMaps from meshop"
  },
  "meshop.getNumMapVerts": {
    "prefix": "meshop.getNumMapVerts",
    "body": "meshop.getNumMapVerts",
    "description": "getNumMapVerts from meshop"
  },
  "meshop.getNumTVerts": {
    "prefix": "meshop.getNumTVerts",
    "body": "meshop.getNumTVerts",
    "description": "getNumTVerts from meshop"
  },
  "meshop.getNumVDataChannels": {
    "prefix": "meshop.getNumVDataChannels",
    "body": "meshop.getNumVDataChannels",
    "description": "getNumVDataChannels from meshop"
  },
  "meshop.getNumVerts": {
    "prefix": "meshop.getNumVerts",
    "body": "meshop.getNumVerts",
    "description": "getNumVerts from meshop"
  },
  "meshop.getOpenEdges": {
    "prefix": "meshop.getOpenEdges",
    "body": "meshop.getOpenEdges",
    "description": "getOpenEdges from meshop"
  },
  "meshop.getPinch": {
    "prefix": "meshop.getPinch",
    "body": "meshop.getPinch",
    "description": "getPinch from meshop"
  },
  "meshop.getPlanarThreshold": {
    "prefix": "meshop.getPlanarThreshold",
    "body": "meshop.getPlanarThreshold",
    "description": "getPlanarThreshold from meshop"
  },
  "meshop.getPolysUsingEdge": {
    "prefix": "meshop.getPolysUsingEdge",
    "body": "meshop.getPolysUsingEdge",
    "description": "getPolysUsingEdge from meshop"
  },
  "meshop.getPolysUsingFace": {
    "prefix": "meshop.getPolysUsingFace",
    "body": "meshop.getPolysUsingFace",
    "description": "getPolysUsingFace from meshop"
  },
  "meshop.getPolysUsingVert": {
    "prefix": "meshop.getPolysUsingVert",
    "body": "meshop.getPolysUsingVert",
    "description": "getPolysUsingVert from meshop"
  },
  "meshop.getSelByVertex": {
    "prefix": "meshop.getSelByVertex",
    "body": "meshop.getSelByVertex",
    "description": "getSelByVertex from meshop"
  },
  "meshop.getShowFNormals": {
    "prefix": "meshop.getShowFNormals",
    "body": "meshop.getShowFNormals",
    "description": "getShowFNormals from meshop"
  },
  "meshop.getShowVNormals": {
    "prefix": "meshop.getShowVNormals",
    "body": "meshop.getShowVNormals",
    "description": "getShowVNormals from meshop"
  },
  "meshop.getSoftSel": {
    "prefix": "meshop.getSoftSel",
    "body": "meshop.getSoftSel",
    "description": "getSoftSel from meshop"
  },
  "meshop.getSplitMesh": {
    "prefix": "meshop.getSplitMesh",
    "body": "meshop.getSplitMesh",
    "description": "getSplitMesh from meshop"
  },
  "meshop.getSSEdgeDist": {
    "prefix": "meshop.getSSEdgeDist",
    "body": "meshop.getSSEdgeDist",
    "description": "getSSEdgeDist from meshop"
  },
  "meshop.getSSUseEdgeDist": {
    "prefix": "meshop.getSSUseEdgeDist",
    "body": "meshop.getSSUseEdgeDist",
    "description": "getSSUseEdgeDist from meshop"
  },
  "meshop.getSubdivisionAngle": {
    "prefix": "meshop.getSubdivisionAngle",
    "body": "meshop.getSubdivisionAngle",
    "description": "getSubdivisionAngle from meshop"
  },
  "meshop.getSubdivisionDisplacement": {
    "prefix": "meshop.getSubdivisionDisplacement",
    "body": "meshop.getSubdivisionDisplacement",
    "description": "getSubdivisionDisplacement from meshop"
  },
  "meshop.getSubdivisionDistance": {
    "prefix": "meshop.getSubdivisionDistance",
    "body": "meshop.getSubdivisionDistance",
    "description": "getSubdivisionDistance from meshop"
  },
  "meshop.getSubdivisionEdge": {
    "prefix": "meshop.getSubdivisionEdge",
    "body": "meshop.getSubdivisionEdge",
    "description": "getSubdivisionEdge from meshop"
  },
  "meshop.getSubdivisionMaxLevels": {
    "prefix": "meshop.getSubdivisionMaxLevels",
    "body": "meshop.getSubdivisionMaxLevels",
    "description": "getSubdivisionMaxLevels from meshop"
  },
  "meshop.getSubdivisionMaxTriangles": {
    "prefix": "meshop.getSubdivisionMaxTriangles",
    "body": "meshop.getSubdivisionMaxTriangles",
    "description": "getSubdivisionMaxTriangles from meshop"
  },
  "meshop.getSubdivisionMethod": {
    "prefix": "meshop.getSubdivisionMethod",
    "body": "meshop.getSubdivisionMethod",
    "description": "getSubdivisionMethod from meshop"
  },
  "meshop.getSubdivisionMinLevels": {
    "prefix": "meshop.getSubdivisionMinLevels",
    "body": "meshop.getSubdivisionMinLevels",
    "description": "getSubdivisionMinLevels from meshop"
  },
  "meshop.getSubdivisionSteps": {
    "prefix": "meshop.getSubdivisionSteps",
    "body": "meshop.getSubdivisionSteps",
    "description": "getSubdivisionSteps from meshop"
  },
  "meshop.getSubdivisionStyle": {
    "prefix": "meshop.getSubdivisionStyle",
    "body": "meshop.getSubdivisionStyle",
    "description": "getSubdivisionStyle from meshop"
  },
  "meshop.getSubdivisionView": {
    "prefix": "meshop.getSubdivisionView",
    "body": "meshop.getSubdivisionView",
    "description": "getSubdivisionView from meshop"
  },
  "meshop.getUIParam": {
    "prefix": "meshop.getUIParam",
    "body": "meshop.getUIParam",
    "description": "getUIParam from meshop"
  },
  "meshop.getVAlpha": {
    "prefix": "meshop.getVAlpha",
    "body": "meshop.getVAlpha",
    "description": "getVAlpha from meshop"
  },
  "meshop.getVDataChannelSupport": {
    "prefix": "meshop.getVDataChannelSupport",
    "body": "meshop.getVDataChannelSupport",
    "description": "getVDataChannelSupport from meshop"
  },
  "meshop.getVDataValue": {
    "prefix": "meshop.getVDataValue",
    "body": "meshop.getVDataValue",
    "description": "getVDataValue from meshop"
  },
  "meshop.getVert": {
    "prefix": "meshop.getVert",
    "body": "meshop.getVert",
    "description": "getVert from meshop"
  },
  "meshop.getVertCorner": {
    "prefix": "meshop.getVertCorner",
    "body": "meshop.getVertCorner",
    "description": "getVertCorner from meshop"
  },
  "meshop.getVertexAngles": {
    "prefix": "meshop.getVertexAngles",
    "body": "meshop.getVertexAngles",
    "description": "getVertexAngles from meshop"
  },
  "meshop.getVertsByColor": {
    "prefix": "meshop.getVertsByColor",
    "body": "meshop.getVertsByColor",
    "description": "getVertsByColor from meshop"
  },
  "meshop.getVertsUsedOnlyByFaces": {
    "prefix": "meshop.getVertsUsedOnlyByFaces",
    "body": "meshop.getVertsUsedOnlyByFaces",
    "description": "getVertsUsedOnlyByFaces from meshop"
  },
  "meshop.getVertsUsingEdge": {
    "prefix": "meshop.getVertsUsingEdge",
    "body": "meshop.getVertsUsingEdge",
    "description": "getVertsUsingEdge from meshop"
  },
  "meshop.getVertsUsingFace": {
    "prefix": "meshop.getVertsUsingFace",
    "body": "meshop.getVertsUsingFace",
    "description": "getVertsUsingFace from meshop"
  },
  "meshop.getVertWeight": {
    "prefix": "meshop.getVertWeight",
    "body": "meshop.getVertWeight",
    "description": "getVertWeight from meshop"
  },
  "meshop.getVSelectWeight": {
    "prefix": "meshop.getVSelectWeight",
    "body": "meshop.getVSelectWeight",
    "description": "getVSelectWeight from meshop"
  },
  "meshop.getWeldPixels": {
    "prefix": "meshop.getWeldPixels",
    "body": "meshop.getWeldPixels",
    "description": "getWeldPixels from meshop"
  },
  "meshop.getWeldThreshold": {
    "prefix": "meshop.getWeldThreshold",
    "body": "meshop.getWeldThreshold",
    "description": "getWeldThreshold from meshop"
  },
  "meshop.makeFacesPlanar": {
    "prefix": "meshop.makeFacesPlanar",
    "body": "meshop.makeFacesPlanar",
    "description": "makeFacesPlanar from meshop"
  },
  "meshop.makeMapPlanar": {
    "prefix": "meshop.makeMapPlanar",
    "body": "meshop.makeMapPlanar",
    "description": "makeMapPlanar from meshop"
  },
  "meshop.makeVertsPlanar": {
    "prefix": "meshop.makeVertsPlanar",
    "body": "meshop.makeVertsPlanar",
    "description": "makeVertsPlanar from meshop"
  },
  "meshop.minVertexDistanceFrom": {
    "prefix": "meshop.minVertexDistanceFrom",
    "body": "meshop.minVertexDistanceFrom",
    "description": "minVertexDistanceFrom from meshop"
  },
  "meshop.minVertexDistancesFrom": {
    "prefix": "meshop.minVertexDistancesFrom",
    "body": "meshop.minVertexDistancesFrom",
    "description": "minVertexDistancesFrom from meshop"
  },
  "meshop.moveVert": {
    "prefix": "meshop.moveVert",
    "body": "meshop.moveVert",
    "description": "moveVert from meshop"
  },
  "meshop.moveVertsToPlane": {
    "prefix": "meshop.moveVertsToPlane",
    "body": "meshop.moveVertsToPlane",
    "description": "moveVertsToPlane from meshop"
  },
  "meshop.optimize": {
    "prefix": "meshop.optimize",
    "body": "meshop.optimize",
    "description": "optimize from meshop"
  },
  "meshop.removeDegenerateFaces": {
    "prefix": "meshop.removeDegenerateFaces",
    "body": "meshop.removeDegenerateFaces",
    "description": "removeDegenerateFaces from meshop"
  },
  "meshop.removeIllegalFaces": {
    "prefix": "meshop.removeIllegalFaces",
    "body": "meshop.removeIllegalFaces",
    "description": "removeIllegalFaces from meshop"
  },
  "meshop.resetVAlphas": {
    "prefix": "meshop.resetVAlphas",
    "body": "meshop.resetVAlphas",
    "description": "resetVAlphas from meshop"
  },
  "meshop.resetVertCorners": {
    "prefix": "meshop.resetVertCorners",
    "body": "meshop.resetVertCorners",
    "description": "resetVertCorners from meshop"
  },
  "meshop.resetVertWeights": {
    "prefix": "meshop.resetVertWeights",
    "body": "meshop.resetVertWeights",
    "description": "resetVertWeights from meshop"
  },
  "meshop.resetVSelectWeights": {
    "prefix": "meshop.resetVSelectWeights",
    "body": "meshop.resetVSelectWeights",
    "description": "resetVSelectWeights from meshop"
  },
  "meshop.setAffectBackfacing": {
    "prefix": "meshop.setAffectBackfacing",
    "body": "meshop.setAffectBackfacing",
    "description": "setAffectBackfacing from meshop"
  },
  "meshop.setBubble": {
    "prefix": "meshop.setBubble",
    "body": "meshop.setBubble",
    "description": "setBubble from meshop"
  },
  "meshop.setDisplacementMapping": {
    "prefix": "meshop.setDisplacementMapping",
    "body": "meshop.setDisplacementMapping",
    "description": "setDisplacementMapping from meshop"
  },
  "meshop.setExtrusionType": {
    "prefix": "meshop.setExtrusionType",
    "body": "meshop.setExtrusionType",
    "description": "setExtrusionType from meshop"
  },
  "meshop.setFaceAlpha": {
    "prefix": "meshop.setFaceAlpha",
    "body": "meshop.setFaceAlpha",
    "description": "setFaceAlpha from meshop"
  },
  "meshop.setFaceColor": {
    "prefix": "meshop.setFaceColor",
    "body": "meshop.setFaceColor",
    "description": "setFaceColor from meshop"
  },
  "meshop.setFalloff": {
    "prefix": "meshop.setFalloff",
    "body": "meshop.setFalloff",
    "description": "setFalloff from meshop"
  },
  "meshop.setHiddenFaces": {
    "prefix": "meshop.setHiddenFaces",
    "body": "meshop.setHiddenFaces",
    "description": "setHiddenFaces from meshop"
  },
  "meshop.setIgnoreBackfacing": {
    "prefix": "meshop.setIgnoreBackfacing",
    "body": "meshop.setIgnoreBackfacing",
    "description": "setIgnoreBackfacing from meshop"
  },
  "meshop.setIgnoreVisEdges": {
    "prefix": "meshop.setIgnoreVisEdges",
    "body": "meshop.setIgnoreVisEdges",
    "description": "setIgnoreVisEdges from meshop"
  },
  "meshop.setMapFace": {
    "prefix": "meshop.setMapFace",
    "body": "meshop.setMapFace",
    "description": "setMapFace from meshop"
  },
  "meshop.setMapSupport": {
    "prefix": "meshop.setMapSupport",
    "body": "meshop.setMapSupport",
    "description": "setMapSupport from meshop"
  },
  "meshop.setMapVert": {
    "prefix": "meshop.setMapVert",
    "body": "meshop.setMapVert",
    "description": "setMapVert from meshop"
  },
  "meshop.setNormalSize": {
    "prefix": "meshop.setNormalSize",
    "body": "meshop.setNormalSize",
    "description": "setNormalSize from meshop"
  },
  "meshop.setNumCPVVerts": {
    "prefix": "meshop.setNumCPVVerts",
    "body": "meshop.setNumCPVVerts",
    "description": "setNumCPVVerts from meshop"
  },
  "meshop.setNumFaces": {
    "prefix": "meshop.setNumFaces",
    "body": "meshop.setNumFaces",
    "description": "setNumFaces from meshop"
  },
  "meshop.setNumMapFaces": {
    "prefix": "meshop.setNumMapFaces",
    "body": "meshop.setNumMapFaces",
    "description": "setNumMapFaces from meshop"
  },
  "meshop.setNumMaps": {
    "prefix": "meshop.setNumMaps",
    "body": "meshop.setNumMaps",
    "description": "setNumMaps from meshop"
  },
  "meshop.setNumMapVerts": {
    "prefix": "meshop.setNumMapVerts",
    "body": "meshop.setNumMapVerts",
    "description": "setNumMapVerts from meshop"
  },
  "meshop.setNumTVerts": {
    "prefix": "meshop.setNumTVerts",
    "body": "meshop.setNumTVerts",
    "description": "setNumTVerts from meshop"
  },
  "meshop.setNumVDataChannels": {
    "prefix": "meshop.setNumVDataChannels",
    "body": "meshop.setNumVDataChannels",
    "description": "setNumVDataChannels from meshop"
  },
  "meshop.setNumVerts": {
    "prefix": "meshop.setNumVerts",
    "body": "meshop.setNumVerts",
    "description": "setNumVerts from meshop"
  },
  "meshop.setPinch": {
    "prefix": "meshop.setPinch",
    "body": "meshop.setPinch",
    "description": "setPinch from meshop"
  },
  "meshop.setPlanarThreshold": {
    "prefix": "meshop.setPlanarThreshold",
    "body": "meshop.setPlanarThreshold",
    "description": "setPlanarThreshold from meshop"
  },
  "meshop.setSelByVertex": {
    "prefix": "meshop.setSelByVertex",
    "body": "meshop.setSelByVertex",
    "description": "setSelByVertex from meshop"
  },
  "meshop.setShowFNormals": {
    "prefix": "meshop.setShowFNormals",
    "body": "meshop.setShowFNormals",
    "description": "setShowFNormals from meshop"
  },
  "meshop.setShowVNormals": {
    "prefix": "meshop.setShowVNormals",
    "body": "meshop.setShowVNormals",
    "description": "setShowVNormals from meshop"
  },
  "meshop.setSoftSel": {
    "prefix": "meshop.setSoftSel",
    "body": "meshop.setSoftSel",
    "description": "setSoftSel from meshop"
  },
  "meshop.setSplitMesh": {
    "prefix": "meshop.setSplitMesh",
    "body": "meshop.setSplitMesh",
    "description": "setSplitMesh from meshop"
  },
  "meshop.setSSEdgeDist": {
    "prefix": "meshop.setSSEdgeDist",
    "body": "meshop.setSSEdgeDist",
    "description": "setSSEdgeDist from meshop"
  },
  "meshop.setSSUseEdgeDist": {
    "prefix": "meshop.setSSUseEdgeDist",
    "body": "meshop.setSSUseEdgeDist",
    "description": "setSSUseEdgeDist from meshop"
  },
  "meshop.setSubdivisionAngle": {
    "prefix": "meshop.setSubdivisionAngle",
    "body": "meshop.setSubdivisionAngle",
    "description": "setSubdivisionAngle from meshop"
  },
  "meshop.setSubdivisionDisplacement": {
    "prefix": "meshop.setSubdivisionDisplacement",
    "body": "meshop.setSubdivisionDisplacement",
    "description": "setSubdivisionDisplacement from meshop"
  },
  "meshop.setSubdivisionDistance": {
    "prefix": "meshop.setSubdivisionDistance",
    "body": "meshop.setSubdivisionDistance",
    "description": "setSubdivisionDistance from meshop"
  },
  "meshop.setSubdivisionEdge": {
    "prefix": "meshop.setSubdivisionEdge",
    "body": "meshop.setSubdivisionEdge",
    "description": "setSubdivisionEdge from meshop"
  },
  "meshop.setSubdivisionMaxLevels": {
    "prefix": "meshop.setSubdivisionMaxLevels",
    "body": "meshop.setSubdivisionMaxLevels",
    "description": "setSubdivisionMaxLevels from meshop"
  },
  "meshop.setSubdivisionMaxTriangles": {
    "prefix": "meshop.setSubdivisionMaxTriangles",
    "body": "meshop.setSubdivisionMaxTriangles",
    "description": "setSubdivisionMaxTriangles from meshop"
  },
  "meshop.setSubdivisionMethod": {
    "prefix": "meshop.setSubdivisionMethod",
    "body": "meshop.setSubdivisionMethod",
    "description": "setSubdivisionMethod from meshop"
  },
  "meshop.setSubdivisionMinLevels": {
    "prefix": "meshop.setSubdivisionMinLevels",
    "body": "meshop.setSubdivisionMinLevels",
    "description": "setSubdivisionMinLevels from meshop"
  },
  "meshop.setSubdivisionSteps": {
    "prefix": "meshop.setSubdivisionSteps",
    "body": "meshop.setSubdivisionSteps",
    "description": "setSubdivisionSteps from meshop"
  },
  "meshop.setSubdivisionStyle": {
    "prefix": "meshop.setSubdivisionStyle",
    "body": "meshop.setSubdivisionStyle",
    "description": "setSubdivisionStyle from meshop"
  },
  "meshop.setSubdivisionView": {
    "prefix": "meshop.setSubdivisionView",
    "body": "meshop.setSubdivisionView",
    "description": "setSubdivisionView from meshop"
  },
  "meshop.setUIParam": {
    "prefix": "meshop.setUIParam",
    "body": "meshop.setUIParam",
    "description": "setUIParam from meshop"
  },
  "meshop.setVAlpha": {
    "prefix": "meshop.setVAlpha",
    "body": "meshop.setVAlpha",
    "description": "setVAlpha from meshop"
  },
  "meshop.setVDataChannelSupport": {
    "prefix": "meshop.setVDataChannelSupport",
    "body": "meshop.setVDataChannelSupport",
    "description": "setVDataChannelSupport from meshop"
  },
  "meshop.setVDataValue": {
    "prefix": "meshop.setVDataValue",
    "body": "meshop.setVDataValue",
    "description": "setVDataValue from meshop"
  },
  "meshop.setVert": {
    "prefix": "meshop.setVert",
    "body": "meshop.setVert",
    "description": "setVert from meshop"
  },
  "meshop.setVertAlpha": {
    "prefix": "meshop.setVertAlpha",
    "body": "meshop.setVertAlpha",
    "description": "setVertAlpha from meshop"
  },
  "meshop.setVertColor": {
    "prefix": "meshop.setVertColor",
    "body": "meshop.setVertColor",
    "description": "setVertColor from meshop"
  },
  "meshop.setVertCorner": {
    "prefix": "meshop.setVertCorner",
    "body": "meshop.setVertCorner",
    "description": "setVertCorner from meshop"
  },
  "meshop.setVertWeight": {
    "prefix": "meshop.setVertWeight",
    "body": "meshop.setVertWeight",
    "description": "setVertWeight from meshop"
  },
  "meshop.setVSelectWeight": {
    "prefix": "meshop.setVSelectWeight",
    "body": "meshop.setVSelectWeight",
    "description": "setVSelectWeight from meshop"
  },
  "meshop.setWeldPixels": {
    "prefix": "meshop.setWeldPixels",
    "body": "meshop.setWeldPixels",
    "description": "setWeldPixels from meshop"
  },
  "meshop.setWeldThreshold": {
    "prefix": "meshop.setWeldThreshold",
    "body": "meshop.setWeldThreshold",
    "description": "setWeldThreshold from meshop"
  },
  "meshop.slice": {
    "prefix": "meshop.slice",
    "body": "meshop.slice",
    "description": "slice from meshop"
  },
  "meshop.supportVAlphas": {
    "prefix": "meshop.supportVAlphas",
    "body": "meshop.supportVAlphas",
    "description": "supportVAlphas from meshop"
  },
  "meshop.supportVertCorners": {
    "prefix": "meshop.supportVertCorners",
    "body": "meshop.supportVertCorners",
    "description": "supportVertCorners from meshop"
  },
  "meshop.supportVertWeights": {
    "prefix": "meshop.supportVertWeights",
    "body": "meshop.supportVertWeights",
    "description": "supportVertWeights from meshop"
  },
  "meshop.supportVSelectWeights": {
    "prefix": "meshop.supportVSelectWeights",
    "body": "meshop.supportVSelectWeights",
    "description": "supportVSelectWeights from meshop"
  },
  "meshop.turnEdge": {
    "prefix": "meshop.turnEdge",
    "body": "meshop.turnEdge",
    "description": "turnEdge from meshop"
  },
  "meshop.unifyNormals": {
    "prefix": "meshop.unifyNormals",
    "body": "meshop.unifyNormals",
    "description": "unifyNormals from meshop"
  },
  "meshop.weldVertsByThreshold": {
    "prefix": "meshop.weldVertsByThreshold",
    "body": "meshop.weldVertsByThreshold",
    "description": "weldVertsByThreshold from meshop"
  },
  "meshop.weldVertSet": {
    "prefix": "meshop.weldVertSet",
    "body": "meshop.weldVertSet",
    "description": "weldVertSet from meshop"
  },
  "meshOps.attachList": {
    "prefix": "meshOps.attachList",
    "body": "meshOps.attachList",
    "description": "attachList from meshOps"
  },
  "meshOps.autoEdge": {
    "prefix": "meshOps.autoEdge",
    "body": "meshOps.autoEdge",
    "description": "autoEdge from meshOps"
  },
  "meshOps.autosmooth": {
    "prefix": "meshOps.autosmooth",
    "body": "meshOps.autosmooth",
    "description": "autosmooth from meshOps"
  },
  "meshOps.break": {
    "prefix": "meshOps.break",
    "body": "meshOps.break",
    "description": "break from meshOps"
  },
  "meshOps.clearAllSG": {
    "prefix": "meshOps.clearAllSG",
    "body": "meshOps.clearAllSG",
    "description": "clearAllSG from meshOps"
  },
  "meshOps.collapse": {
    "prefix": "meshOps.collapse",
    "body": "meshOps.collapse",
    "description": "collapse from meshOps"
  },
  "meshOps.createShapeFromEdges": {
    "prefix": "meshOps.createShapeFromEdges",
    "body": "meshOps.createShapeFromEdges",
    "description": "createShapeFromEdges from meshOps"
  },
  "meshOps.delete": {
    "prefix": "meshOps.delete",
    "body": "meshOps.delete",
    "description": "delete from meshOps"
  },
  "meshOps.detach": {
    "prefix": "meshOps.detach",
    "body": "meshOps.detach",
    "description": "detach from meshOps"
  },
  "meshOps.explode": {
    "prefix": "meshOps.explode",
    "body": "meshOps.explode",
    "description": "explode from meshOps"
  },
  "meshOps.flipNormal": {
    "prefix": "meshOps.flipNormal",
    "body": "meshOps.flipNormal",
    "description": "flipNormal from meshOps"
  },
  "meshOps.gridAlign": {
    "prefix": "meshOps.gridAlign",
    "body": "meshOps.gridAlign",
    "description": "gridAlign from meshOps"
  },
  "meshOps.hide": {
    "prefix": "meshOps.hide",
    "body": "meshOps.hide",
    "description": "hide from meshOps"
  },
  "meshOps.invisibleEdge": {
    "prefix": "meshOps.invisibleEdge",
    "body": "meshOps.invisibleEdge",
    "description": "invisibleEdge from meshOps"
  },
  "meshOps.makePlanar": {
    "prefix": "meshOps.makePlanar",
    "body": "meshOps.makePlanar",
    "description": "makePlanar from meshOps"
  },
  "meshOps.removeIsolatedVerts": {
    "prefix": "meshOps.removeIsolatedVerts",
    "body": "meshOps.removeIsolatedVerts",
    "description": "removeIsolatedVerts from meshOps"
  },
  "meshOps.selectByColor": {
    "prefix": "meshOps.selectByColor",
    "body": "meshOps.selectByColor",
    "description": "selectByColor from meshOps"
  },
  "meshOps.selectByID": {
    "prefix": "meshOps.selectByID",
    "body": "meshOps.selectByID",
    "description": "selectByID from meshOps"
  },
  "meshOps.selectBySG": {
    "prefix": "meshOps.selectBySG",
    "body": "meshOps.selectBySG",
    "description": "selectBySG from meshOps"
  },
  "meshOps.selectOpenEdges": {
    "prefix": "meshOps.selectOpenEdges",
    "body": "meshOps.selectOpenEdges",
    "description": "selectOpenEdges from meshOps"
  },
  "meshOps.showNormal": {
    "prefix": "meshOps.showNormal",
    "body": "meshOps.showNormal",
    "description": "showNormal from meshOps"
  },
  "meshOps.slice": {
    "prefix": "meshOps.slice",
    "body": "meshOps.slice",
    "description": "slice from meshOps"
  },
  "meshOps.startAttach": {
    "prefix": "meshOps.startAttach",
    "body": "meshOps.startAttach",
    "description": "startAttach from meshOps"
  },
  "meshOps.startBevel": {
    "prefix": "meshOps.startBevel",
    "body": "meshOps.startBevel",
    "description": "startBevel from meshOps"
  },
  "meshOps.startChamfer": {
    "prefix": "meshOps.startChamfer",
    "body": "meshOps.startChamfer",
    "description": "startChamfer from meshOps"
  },
  "meshOps.startCreate": {
    "prefix": "meshOps.startCreate",
    "body": "meshOps.startCreate",
    "description": "startCreate from meshOps"
  },
  "meshOps.startCut": {
    "prefix": "meshOps.startCut",
    "body": "meshOps.startCut",
    "description": "startCut from meshOps"
  },
  "meshOps.startDivide": {
    "prefix": "meshOps.startDivide",
    "body": "meshOps.startDivide",
    "description": "startDivide from meshOps"
  },
  "meshOps.startFlipNormalMode": {
    "prefix": "meshOps.startFlipNormalMode",
    "body": "meshOps.startFlipNormalMode",
    "description": "startFlipNormalMode from meshOps"
  },
  "meshOps.startSlicePlane": {
    "prefix": "meshOps.startSlicePlane",
    "body": "meshOps.startSlicePlane",
    "description": "startSlicePlane from meshOps"
  },
  "meshOps.startTurn": {
    "prefix": "meshOps.startTurn",
    "body": "meshOps.startTurn",
    "description": "startTurn from meshOps"
  },
  "meshOps.startWeldTarget": {
    "prefix": "meshOps.startWeldTarget",
    "body": "meshOps.startWeldTarget",
    "description": "startWeldTarget from meshOps"
  },
  "meshOps.tessellate": {
    "prefix": "meshOps.tessellate",
    "body": "meshOps.tessellate",
    "description": "tessellate from meshOps"
  },
  "meshOps.unhideAll": {
    "prefix": "meshOps.unhideAll",
    "body": "meshOps.unhideAll",
    "description": "unhideAll from meshOps"
  },
  "meshOps.unifyNormal": {
    "prefix": "meshOps.unifyNormal",
    "body": "meshOps.unifyNormal",
    "description": "unifyNormal from meshOps"
  },
  "meshOps.viewAlign": {
    "prefix": "meshOps.viewAlign",
    "body": "meshOps.viewAlign",
    "description": "viewAlign from meshOps"
  },
  "meshOps.visibleEdge": {
    "prefix": "meshOps.visibleEdge",
    "body": "meshOps.visibleEdge",
    "description": "visibleEdge from meshOps"
  },
  "meshOps.weld": {
    "prefix": "meshOps.weld",
    "body": "meshOps.weld",
    "description": "weld from meshOps"
  },
  "mocap.allFilter": {
    "prefix": "mocap.allFilter",
    "body": "mocap.allFilter",
    "description": "allFilter from mocap"
  },
  "mocap.allSpacing": {
    "prefix": "mocap.allSpacing",
    "body": "mocap.allSpacing",
    "description": "allSpacing from mocap"
  },
  "mocap.allTol": {
    "prefix": "mocap.allTol",
    "body": "mocap.allTol",
    "description": "allTol from mocap"
  },
  "mocap.dispKnownMarkers": {
    "prefix": "mocap.dispKnownMarkers",
    "body": "mocap.dispKnownMarkers",
    "description": "dispKnownMarkers from mocap"
  },
  "mocap.dispKnownMarkersType": {
    "prefix": "mocap.dispKnownMarkersType",
    "body": "mocap.dispKnownMarkersType",
    "description": "dispKnownMarkersType from mocap"
  },
  "mocap.dispPropMarkers": {
    "prefix": "mocap.dispPropMarkers",
    "body": "mocap.dispPropMarkers",
    "description": "dispPropMarkers from mocap"
  },
  "mocap.dispUnKnownMarkers": {
    "prefix": "mocap.dispUnKnownMarkers",
    "body": "mocap.dispUnKnownMarkers",
    "description": "dispUnKnownMarkers from mocap"
  },
  "mocap.elbowOrient": {
    "prefix": "mocap.elbowOrient",
    "body": "mocap.elbowOrient",
    "description": "elbowOrient from mocap"
  },
  "mocap.endframe": {
    "prefix": "mocap.endframe",
    "body": "mocap.endframe",
    "description": "endframe from mocap"
  },
  "mocap.footOrient": {
    "prefix": "mocap.footOrient",
    "body": "mocap.footOrient",
    "description": "footOrient from mocap"
  },
  "mocap.fsConversionMode": {
    "prefix": "mocap.fsConversionMode",
    "body": "mocap.fsConversionMode",
    "description": "fsConversionMode from mocap"
  },
  "mocap.fsExtractionMode": {
    "prefix": "mocap.fsExtractionMode",
    "body": "mocap.fsExtractionMode",
    "description": "fsExtractionMode from mocap"
  },
  "mocap.fsExtractionTol": {
    "prefix": "mocap.fsExtractionTol",
    "body": "mocap.fsExtractionTol",
    "description": "fsExtractionTol from mocap"
  },
  "mocap.fsSlidingAngle": {
    "prefix": "mocap.fsSlidingAngle",
    "body": "mocap.fsSlidingAngle",
    "description": "fsSlidingAngle from mocap"
  },
  "mocap.fsSlidingDist": {
    "prefix": "mocap.fsSlidingDist",
    "body": "mocap.fsSlidingDist",
    "description": "fsSlidingDist from mocap"
  },
  "mocap.fsUseFlatten": {
    "prefix": "mocap.fsUseFlatten",
    "body": "mocap.fsUseFlatten",
    "description": "fsUseFlatten from mocap"
  },
  "mocap.fsUseVerticalTol": {
    "prefix": "mocap.fsUseVerticalTol",
    "body": "mocap.fsUseVerticalTol",
    "description": "fsUseVerticalTol from mocap"
  },
  "mocap.fsVerticalTol": {
    "prefix": "mocap.fsVerticalTol",
    "body": "mocap.fsVerticalTol",
    "description": "fsVerticalTol from mocap"
  },
  "mocap.fsZLevel": {
    "prefix": "mocap.fsZLevel",
    "body": "mocap.fsZLevel",
    "description": "fsZLevel from mocap"
  },
  "mocap.handOrient": {
    "prefix": "mocap.handOrient",
    "body": "mocap.handOrient",
    "description": "handOrient from mocap"
  },
  "mocap.horzFilter": {
    "prefix": "mocap.horzFilter",
    "body": "mocap.horzFilter",
    "description": "horzFilter from mocap"
  },
  "mocap.horzSpacing": {
    "prefix": "mocap.horzSpacing",
    "body": "mocap.horzSpacing",
    "description": "horzSpacing from mocap"
  },
  "mocap.horzTol": {
    "prefix": "mocap.horzTol",
    "body": "mocap.horzTol",
    "description": "horzTol from mocap"
  },
  "mocap.jointNameFile": {
    "prefix": "mocap.jointNameFile",
    "body": "mocap.jointNameFile",
    "description": "jointNameFile from mocap"
  },
  "mocap.kneeOrient": {
    "prefix": "mocap.kneeOrient",
    "body": "mocap.kneeOrient",
    "description": "kneeOrient from mocap"
  },
  "mocap.leftArmFilter": {
    "prefix": "mocap.leftArmFilter",
    "body": "mocap.leftArmFilter",
    "description": "leftArmFilter from mocap"
  },
  "mocap.leftArmSpacing": {
    "prefix": "mocap.leftArmSpacing",
    "body": "mocap.leftArmSpacing",
    "description": "leftArmSpacing from mocap"
  },
  "mocap.leftArmTol": {
    "prefix": "mocap.leftArmTol",
    "body": "mocap.leftArmTol",
    "description": "leftArmTol from mocap"
  },
  "mocap.leftLegFilter": {
    "prefix": "mocap.leftLegFilter",
    "body": "mocap.leftLegFilter",
    "description": "leftLegFilter from mocap"
  },
  "mocap.leftLegTol": {
    "prefix": "mocap.leftLegTol",
    "body": "mocap.leftLegTol",
    "description": "leftLegTol from mocap"
  },
  "mocap.loadParameters": {
    "prefix": "mocap.loadParameters",
    "body": "mocap.loadParameters",
    "description": "loadParameters from mocap"
  },
  "mocap.loop": {
    "prefix": "mocap.loop",
    "body": "mocap.loop",
    "description": "loop from mocap"
  },
  "mocap.loopFrameCount": {
    "prefix": "mocap.loopFrameCount",
    "body": "mocap.loopFrameCount",
    "description": "loopFrameCount from mocap"
  },
  "mocap.markerNameFile": {
    "prefix": "mocap.markerNameFile",
    "body": "mocap.markerNameFile",
    "description": "markerNameFile from mocap"
  },
  "mocap.neckFilter": {
    "prefix": "mocap.neckFilter",
    "body": "mocap.neckFilter",
    "description": "neckFilter from mocap"
  },
  "mocap.neckSpacing": {
    "prefix": "mocap.neckSpacing",
    "body": "mocap.neckSpacing",
    "description": "neckSpacing from mocap"
  },
  "mocap.neckTol": {
    "prefix": "mocap.neckTol",
    "body": "mocap.neckTol",
    "description": "neckTol from mocap"
  },
  "mocap.pelvisFilter": {
    "prefix": "mocap.pelvisFilter",
    "body": "mocap.pelvisFilter",
    "description": "pelvisFilter from mocap"
  },
  "mocap.pelvisSpacing": {
    "prefix": "mocap.pelvisSpacing",
    "body": "mocap.pelvisSpacing",
    "description": "pelvisSpacing from mocap"
  },
  "mocap.pelvisTol": {
    "prefix": "mocap.pelvisTol",
    "body": "mocap.pelvisTol",
    "description": "pelvisTol from mocap"
  },
  "mocap.rightArmFilter": {
    "prefix": "mocap.rightArmFilter",
    "body": "mocap.rightArmFilter",
    "description": "rightArmFilter from mocap"
  },
  "mocap.rightArmSpacing": {
    "prefix": "mocap.rightArmSpacing",
    "body": "mocap.rightArmSpacing",
    "description": "rightArmSpacing from mocap"
  },
  "mocap.rightArmTol": {
    "prefix": "mocap.rightArmTol",
    "body": "mocap.rightArmTol",
    "description": "rightArmTol from mocap"
  },
  "mocap.rightLegFilter": {
    "prefix": "mocap.rightLegFilter",
    "body": "mocap.rightLegFilter",
    "description": "rightLegFilter from mocap"
  },
  "mocap.rightLegSpacing": {
    "prefix": "mocap.rightLegSpacing",
    "body": "mocap.rightLegSpacing",
    "description": "rightLegSpacing from mocap"
  },
  "mocap.rightLegTol": {
    "prefix": "mocap.rightLegTol",
    "body": "mocap.rightLegTol",
    "description": "rightLegTol from mocap"
  },
  "mocap.rotFilter": {
    "prefix": "mocap.rotFilter",
    "body": "mocap.rotFilter",
    "description": "rotFilter from mocap"
  },
  "mocap.rotSpacing": {
    "prefix": "mocap.rotSpacing",
    "body": "mocap.rotSpacing",
    "description": "rotSpacing from mocap"
  },
  "mocap.rotTol": {
    "prefix": "mocap.rotTol",
    "body": "mocap.rotTol",
    "description": "rotTol from mocap"
  },
  "mocap.saveParameters": {
    "prefix": "mocap.saveParameters",
    "body": "mocap.saveParameters",
    "description": "saveParameters from mocap"
  },
  "mocap.SCALEFACTOR": {
    "prefix": "mocap.SCALEFACTOR",
    "body": "mocap.SCALEFACTOR",
    "description": "SCALEFACTOR from mocap"
  },
  "mocap.spineFilter": {
    "prefix": "mocap.spineFilter",
    "body": "mocap.spineFilter",
    "description": "spineFilter from mocap"
  },
  "mocap.spineSpacing": {
    "prefix": "mocap.spineSpacing",
    "body": "mocap.spineSpacing",
    "description": "spineSpacing from mocap"
  },
  "mocap.spineTol": {
    "prefix": "mocap.spineTol",
    "body": "mocap.spineTol",
    "description": "spineTol from mocap"
  },
  "mocap.startframe": {
    "prefix": "mocap.startframe",
    "body": "mocap.startframe",
    "description": "startframe from mocap"
  },
  "mocap.tailFilter": {
    "prefix": "mocap.tailFilter",
    "body": "mocap.tailFilter",
    "description": "tailFilter from mocap"
  },
  "mocap.tailSpacing": {
    "prefix": "mocap.tailSpacing",
    "body": "mocap.tailSpacing",
    "description": "tailSpacing from mocap"
  },
  "mocap.tailTol": {
    "prefix": "mocap.tailTol",
    "body": "mocap.tailTol",
    "description": "tailTol from mocap"
  },
  "mocap.talentFigStrucFile": {
    "prefix": "mocap.talentFigStrucFile",
    "body": "mocap.talentFigStrucFile",
    "description": "talentFigStrucFile from mocap"
  },
  "mocap.talentPoseAdjFile": {
    "prefix": "mocap.talentPoseAdjFile",
    "body": "mocap.talentPoseAdjFile",
    "description": "talentPoseAdjFile from mocap"
  },
  "mocap.upVector": {
    "prefix": "mocap.upVector",
    "body": "mocap.upVector",
    "description": "upVector from mocap"
  },
  "mocap.useJointNameFile": {
    "prefix": "mocap.useJointNameFile",
    "body": "mocap.useJointNameFile",
    "description": "useJointNameFile from mocap"
  },
  "mocap.useMarkerNameFile": {
    "prefix": "mocap.useMarkerNameFile",
    "body": "mocap.useMarkerNameFile",
    "description": "useMarkerNameFile from mocap"
  },
  "mocap.useTalentFigStrucFile": {
    "prefix": "mocap.useTalentFigStrucFile",
    "body": "mocap.useTalentFigStrucFile",
    "description": "useTalentFigStrucFile from mocap"
  },
  "mocap.useTalentPoseAdjFile": {
    "prefix": "mocap.useTalentPoseAdjFile",
    "body": "mocap.useTalentPoseAdjFile",
    "description": "useTalentPoseAdjFile from mocap"
  },
  "mocap.vertFilter": {
    "prefix": "mocap.vertFilter",
    "body": "mocap.vertFilter",
    "description": "vertFilter from mocap"
  },
  "mocap.vertSpacing": {
    "prefix": "mocap.vertSpacing",
    "body": "mocap.vertSpacing",
    "description": "vertSpacing from mocap"
  },
  "mocap.vertTol": {
    "prefix": "mocap.vertTol",
    "body": "mocap.vertTol",
    "description": "vertTol from mocap"
  },
  "modPanel.getCurrentObject": {
    "prefix": "modPanel.getCurrentObject",
    "body": "modPanel.getCurrentObject",
    "description": "getCurrentObject from modPanel"
  },
  "modPanel.getModifierIndex": {
    "prefix": "modPanel.getModifierIndex",
    "body": "modPanel.getModifierIndex",
    "description": "getModifierIndex from modPanel"
  },
  "modPanel.getPinStack": {
    "prefix": "modPanel.getPinStack",
    "body": "modPanel.getPinStack",
    "description": "getPinStack from modPanel"
  },
  "modPanel.isPinStackEnabled": {
    "prefix": "modPanel.isPinStackEnabled",
    "body": "modPanel.isPinStackEnabled",
    "description": "isPinStackEnabled from modPanel"
  },
  "modPanel.setCurrentObject": {
    "prefix": "modPanel.setCurrentObject",
    "body": "modPanel.setCurrentObject",
    "description": "setCurrentObject from modPanel"
  },
  "modPanel.setPinStack": {
    "prefix": "modPanel.setPinStack",
    "body": "modPanel.setPinStack",
    "description": "setPinStack from modPanel"
  },
  "modPanel.validModifier": {
    "prefix": "modPanel.validModifier",
    "body": "modPanel.validModifier",
    "description": "validModifier from modPanel"
  },
  "mouse.buttonStates": {
    "prefix": "mouse.buttonStates",
    "body": "mouse.buttonStates",
    "description": "buttonStates from mouse"
  },
  "mouse.inAbort": {
    "prefix": "mouse.inAbort",
    "body": "mouse.inAbort",
    "description": "inAbort from mouse"
  },
  "mouse.mode": {
    "prefix": "mouse.mode",
    "body": "mouse.mode",
    "description": "mode from mouse"
  },
  "mouse.screenpos": {
    "prefix": "mouse.screenpos",
    "body": "mouse.screenpos",
    "description": "screenpos from mouse"
  },
  "MtlInfo.brdf_info": {
    "prefix": "MtlInfo.brdf_info",
    "body": "MtlInfo.brdf_info",
    "description": "brdf_info from MtlInfo"
  },
  "MtlInfo.isMtlAnimated": {
    "prefix": "MtlInfo.isMtlAnimated",
    "body": "MtlInfo.isMtlAnimated",
    "description": "isMtlAnimated from MtlInfo"
  },
  "MtlInfo.mtlName": {
    "prefix": "MtlInfo.mtlName",
    "body": "MtlInfo.mtlName",
    "description": "mtlName from MtlInfo"
  },
  "MultiEdit_ControlInfo_struct.controlItem": {
    "prefix": "MultiEdit_ControlInfo_struct.controlItem",
    "body": "MultiEdit_ControlInfo_struct.controlItem",
    "description": "controlItem from MultiEdit_ControlInfo_struct"
  },
  "MultiEdit_ControlInfo_struct.controlName": {
    "prefix": "MultiEdit_ControlInfo_struct.controlName",
    "body": "MultiEdit_ControlInfo_struct.controlName",
    "description": "controlName from MultiEdit_ControlInfo_struct"
  },
  "MultiEdit_ControlInfo_struct.controlTooltip": {
    "prefix": "MultiEdit_ControlInfo_struct.controlTooltip",
    "body": "MultiEdit_ControlInfo_struct.controlTooltip",
    "description": "controlTooltip from MultiEdit_ControlInfo_struct"
  },
  "MultiEdit_ControlInfo_struct.keyVal": {
    "prefix": "MultiEdit_ControlInfo_struct.keyVal",
    "body": "MultiEdit_ControlInfo_struct.keyVal",
    "description": "keyVal from MultiEdit_ControlInfo_struct"
  },
  "MultiEdit_ControlInfo_struct.paramIdent": {
    "prefix": "MultiEdit_ControlInfo_struct.paramIdent",
    "body": "MultiEdit_ControlInfo_struct.paramIdent",
    "description": "paramIdent from MultiEdit_ControlInfo_struct"
  },
  "MultiEdit_ControlInfo_struct.paramValArray": {
    "prefix": "MultiEdit_ControlInfo_struct.paramValArray",
    "body": "MultiEdit_ControlInfo_struct.paramValArray",
    "description": "paramValArray from MultiEdit_ControlInfo_struct"
  },
  "NodeExposureInterface.get": {
    "prefix": "NodeExposureInterface.get",
    "body": "NodeExposureInterface.get",
    "description": "get from NodeExposureInterface"
  },
  "NormalSelectSpinnerCallback.onButtonDown": {
    "prefix": "NormalSelectSpinnerCallback.onButtonDown",
    "body": "NormalSelectSpinnerCallback.onButtonDown",
    "description": "onButtonDown from NormalSelectSpinnerCallback"
  },
  "NormalSelectSpinnerCallback.onButtonUp": {
    "prefix": "NormalSelectSpinnerCallback.onButtonUp",
    "body": "NormalSelectSpinnerCallback.onButtonUp",
    "description": "onButtonUp from NormalSelectSpinnerCallback"
  },
  "NormalSelectSpinnerCallback.OnChanged": {
    "prefix": "NormalSelectSpinnerCallback.OnChanged",
    "body": "NormalSelectSpinnerCallback.OnChanged",
    "description": "OnChanged from NormalSelectSpinnerCallback"
  },
  "NumericSpinnerCallback.OnChanged": {
    "prefix": "NumericSpinnerCallback.OnChanged",
    "body": "NumericSpinnerCallback.OnChanged",
    "description": "OnChanged from NumericSpinnerCallback"
  },
  "NURMS_Cage_ColorSwatch.controller": {
    "prefix": "NURMS_Cage_ColorSwatch.controller",
    "body": "NURMS_Cage_ColorSwatch.controller",
    "description": "controller from NURMS_Cage_ColorSwatch"
  },
  "NURMS_Cage_ColorSwatch.isEnabled": {
    "prefix": "NURMS_Cage_ColorSwatch.isEnabled",
    "body": "NURMS_Cage_ColorSwatch.isEnabled",
    "description": "isEnabled from NURMS_Cage_ColorSwatch"
  },
  "NURMS_Cage_ColorSwatch.OnChanged": {
    "prefix": "NURMS_Cage_ColorSwatch.OnChanged",
    "body": "NURMS_Cage_ColorSwatch.OnChanged",
    "description": "OnChanged from NURMS_Cage_ColorSwatch"
  },
  "NURMS_CageSelected_ColorSwatch.controller": {
    "prefix": "NURMS_CageSelected_ColorSwatch.controller",
    "body": "NURMS_CageSelected_ColorSwatch.controller",
    "description": "controller from NURMS_CageSelected_ColorSwatch"
  },
  "NURMS_CageSelected_ColorSwatch.isEnabled": {
    "prefix": "NURMS_CageSelected_ColorSwatch.isEnabled",
    "body": "NURMS_CageSelected_ColorSwatch.isEnabled",
    "description": "isEnabled from NURMS_CageSelected_ColorSwatch"
  },
  "NURMS_CageSelected_ColorSwatch.OnChanged": {
    "prefix": "NURMS_CageSelected_ColorSwatch.OnChanged",
    "body": "NURMS_CageSelected_ColorSwatch.OnChanged",
    "description": "OnChanged from NURMS_CageSelected_ColorSwatch"
  },
  "NURMS_Iterations_Spinner.controller": {
    "prefix": "NURMS_Iterations_Spinner.controller",
    "body": "NURMS_Iterations_Spinner.controller",
    "description": "controller from NURMS_Iterations_Spinner"
  },
  "NURMS_Iterations_Spinner.isEnabled": {
    "prefix": "NURMS_Iterations_Spinner.isEnabled",
    "body": "NURMS_Iterations_Spinner.isEnabled",
    "description": "isEnabled from NURMS_Iterations_Spinner"
  },
  "NURMS_Iterations_Spinner.OnChanged": {
    "prefix": "NURMS_Iterations_Spinner.OnChanged",
    "body": "NURMS_Iterations_Spinner.OnChanged",
    "description": "OnChanged from NURMS_Iterations_Spinner"
  },
  "NURMS_RenderIterations_Spinner.controller": {
    "prefix": "NURMS_RenderIterations_Spinner.controller",
    "body": "NURMS_RenderIterations_Spinner.controller",
    "description": "controller from NURMS_RenderIterations_Spinner"
  },
  "NURMS_RenderIterations_Spinner.isEnabled": {
    "prefix": "NURMS_RenderIterations_Spinner.isEnabled",
    "body": "NURMS_RenderIterations_Spinner.isEnabled",
    "description": "isEnabled from NURMS_RenderIterations_Spinner"
  },
  "NURMS_RenderIterations_Spinner.OnChanged": {
    "prefix": "NURMS_RenderIterations_Spinner.OnChanged",
    "body": "NURMS_RenderIterations_Spinner.OnChanged",
    "description": "OnChanged from NURMS_RenderIterations_Spinner"
  },
  "NURMS_RenderSmoothness_Spinner.controller": {
    "prefix": "NURMS_RenderSmoothness_Spinner.controller",
    "body": "NURMS_RenderSmoothness_Spinner.controller",
    "description": "controller from NURMS_RenderSmoothness_Spinner"
  },
  "NURMS_RenderSmoothness_Spinner.isEnabled": {
    "prefix": "NURMS_RenderSmoothness_Spinner.isEnabled",
    "body": "NURMS_RenderSmoothness_Spinner.isEnabled",
    "description": "isEnabled from NURMS_RenderSmoothness_Spinner"
  },
  "NURMS_RenderSmoothness_Spinner.OnChanged": {
    "prefix": "NURMS_RenderSmoothness_Spinner.OnChanged",
    "body": "NURMS_RenderSmoothness_Spinner.OnChanged",
    "description": "OnChanged from NURMS_RenderSmoothness_Spinner"
  },
  "NURMS_Smoothness_Spinner.controller": {
    "prefix": "NURMS_Smoothness_Spinner.controller",
    "body": "NURMS_Smoothness_Spinner.controller",
    "description": "controller from NURMS_Smoothness_Spinner"
  },
  "NURMS_Smoothness_Spinner.isEnabled": {
    "prefix": "NURMS_Smoothness_Spinner.isEnabled",
    "body": "NURMS_Smoothness_Spinner.isEnabled",
    "description": "isEnabled from NURMS_Smoothness_Spinner"
  },
  "NURMS_Smoothness_Spinner.OnChanged": {
    "prefix": "NURMS_Smoothness_Spinner.OnChanged",
    "body": "NURMS_Smoothness_Spinner.OnChanged",
    "description": "OnChanged from NURMS_Smoothness_Spinner"
  },
  "ObjectPaintFillCountSpinnerCallback.isEnabled": {
    "prefix": "ObjectPaintFillCountSpinnerCallback.isEnabled",
    "body": "ObjectPaintFillCountSpinnerCallback.isEnabled",
    "description": "isEnabled from ObjectPaintFillCountSpinnerCallback"
  },
  "ObjectPaintFillCountSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintFillCountSpinnerCallback.OnChanged",
    "body": "ObjectPaintFillCountSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintFillCountSpinnerCallback"
  },
  "ObjectPaintMotionSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintMotionSpinnerCallback.OnChanged",
    "body": "ObjectPaintMotionSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintMotionSpinnerCallback"
  },
  "ObjectPaintOffsetSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintOffsetSpinnerCallback.OnChanged",
    "body": "ObjectPaintOffsetSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintOffsetSpinnerCallback"
  },
  "ObjectPaintRotXSpinnerCallback.isEnabled": {
    "prefix": "ObjectPaintRotXSpinnerCallback.isEnabled",
    "body": "ObjectPaintRotXSpinnerCallback.isEnabled",
    "description": "isEnabled from ObjectPaintRotXSpinnerCallback"
  },
  "ObjectPaintRotXSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintRotXSpinnerCallback.OnChanged",
    "body": "ObjectPaintRotXSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintRotXSpinnerCallback"
  },
  "ObjectPaintRotYSpinnerCallback.isEnabled": {
    "prefix": "ObjectPaintRotYSpinnerCallback.isEnabled",
    "body": "ObjectPaintRotYSpinnerCallback.isEnabled",
    "description": "isEnabled from ObjectPaintRotYSpinnerCallback"
  },
  "ObjectPaintRotYSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintRotYSpinnerCallback.OnChanged",
    "body": "ObjectPaintRotYSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintRotYSpinnerCallback"
  },
  "ObjectPaintRotZSpinnerCallback.isEnabled": {
    "prefix": "ObjectPaintRotZSpinnerCallback.isEnabled",
    "body": "ObjectPaintRotZSpinnerCallback.isEnabled",
    "description": "isEnabled from ObjectPaintRotZSpinnerCallback"
  },
  "ObjectPaintRotZSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintRotZSpinnerCallback.OnChanged",
    "body": "ObjectPaintRotZSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintRotZSpinnerCallback"
  },
  "ObjectPaintScaleRampXEndSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScaleRampXEndSpinnerCallback.OnChanged",
    "body": "ObjectPaintScaleRampXEndSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScaleRampXEndSpinnerCallback"
  },
  "ObjectPaintScaleRampXStartSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScaleRampXStartSpinnerCallback.OnChanged",
    "body": "ObjectPaintScaleRampXStartSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScaleRampXStartSpinnerCallback"
  },
  "ObjectPaintScaleRampYEndSpinnerCallback.isEnabled": {
    "prefix": "ObjectPaintScaleRampYEndSpinnerCallback.isEnabled",
    "body": "ObjectPaintScaleRampYEndSpinnerCallback.isEnabled",
    "description": "isEnabled from ObjectPaintScaleRampYEndSpinnerCallback"
  },
  "ObjectPaintScaleRampYEndSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScaleRampYEndSpinnerCallback.OnChanged",
    "body": "ObjectPaintScaleRampYEndSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScaleRampYEndSpinnerCallback"
  },
  "ObjectPaintScaleRampYStartSpinnerCallback.isEnabled": {
    "prefix": "ObjectPaintScaleRampYStartSpinnerCallback.isEnabled",
    "body": "ObjectPaintScaleRampYStartSpinnerCallback.isEnabled",
    "description": "isEnabled from ObjectPaintScaleRampYStartSpinnerCallback"
  },
  "ObjectPaintScaleRampYStartSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScaleRampYStartSpinnerCallback.OnChanged",
    "body": "ObjectPaintScaleRampYStartSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScaleRampYStartSpinnerCallback"
  },
  "ObjectPaintScaleRampZEndSpinnerCallback.isEnabled": {
    "prefix": "ObjectPaintScaleRampZEndSpinnerCallback.isEnabled",
    "body": "ObjectPaintScaleRampZEndSpinnerCallback.isEnabled",
    "description": "isEnabled from ObjectPaintScaleRampZEndSpinnerCallback"
  },
  "ObjectPaintScaleRampZEndSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScaleRampZEndSpinnerCallback.OnChanged",
    "body": "ObjectPaintScaleRampZEndSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScaleRampZEndSpinnerCallback"
  },
  "ObjectPaintScaleRampZStartSpinnerCallback.isEnabled": {
    "prefix": "ObjectPaintScaleRampZStartSpinnerCallback.isEnabled",
    "body": "ObjectPaintScaleRampZStartSpinnerCallback.isEnabled",
    "description": "isEnabled from ObjectPaintScaleRampZStartSpinnerCallback"
  },
  "ObjectPaintScaleRampZStartSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScaleRampZStartSpinnerCallback.OnChanged",
    "body": "ObjectPaintScaleRampZStartSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScaleRampZStartSpinnerCallback"
  },
  "ObjectPaintScaleRandomXMaxSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScaleRandomXMaxSpinnerCallback.OnChanged",
    "body": "ObjectPaintScaleRandomXMaxSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScaleRandomXMaxSpinnerCallback"
  },
  "ObjectPaintScaleRandomXMinSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScaleRandomXMinSpinnerCallback.OnChanged",
    "body": "ObjectPaintScaleRandomXMinSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScaleRandomXMinSpinnerCallback"
  },
  "ObjectPaintScaleRandomYMaxSpinnerCallback.isEnabled": {
    "prefix": "ObjectPaintScaleRandomYMaxSpinnerCallback.isEnabled",
    "body": "ObjectPaintScaleRandomYMaxSpinnerCallback.isEnabled",
    "description": "isEnabled from ObjectPaintScaleRandomYMaxSpinnerCallback"
  },
  "ObjectPaintScaleRandomYMaxSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScaleRandomYMaxSpinnerCallback.OnChanged",
    "body": "ObjectPaintScaleRandomYMaxSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScaleRandomYMaxSpinnerCallback"
  },
  "ObjectPaintScaleRandomYMinSpinnerCallback.isEnabled": {
    "prefix": "ObjectPaintScaleRandomYMinSpinnerCallback.isEnabled",
    "body": "ObjectPaintScaleRandomYMinSpinnerCallback.isEnabled",
    "description": "isEnabled from ObjectPaintScaleRandomYMinSpinnerCallback"
  },
  "ObjectPaintScaleRandomYMinSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScaleRandomYMinSpinnerCallback.OnChanged",
    "body": "ObjectPaintScaleRandomYMinSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScaleRandomYMinSpinnerCallback"
  },
  "ObjectPaintScaleRandomZMaxSpinnerCallback.isEnabled": {
    "prefix": "ObjectPaintScaleRandomZMaxSpinnerCallback.isEnabled",
    "body": "ObjectPaintScaleRandomZMaxSpinnerCallback.isEnabled",
    "description": "isEnabled from ObjectPaintScaleRandomZMaxSpinnerCallback"
  },
  "ObjectPaintScaleRandomZMaxSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScaleRandomZMaxSpinnerCallback.OnChanged",
    "body": "ObjectPaintScaleRandomZMaxSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScaleRandomZMaxSpinnerCallback"
  },
  "ObjectPaintScaleRandomZMinSpinnerCallback.isEnabled": {
    "prefix": "ObjectPaintScaleRandomZMinSpinnerCallback.isEnabled",
    "body": "ObjectPaintScaleRandomZMinSpinnerCallback.isEnabled",
    "description": "isEnabled from ObjectPaintScaleRandomZMinSpinnerCallback"
  },
  "ObjectPaintScaleRandomZMinSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScaleRandomZMinSpinnerCallback.OnChanged",
    "body": "ObjectPaintScaleRandomZMinSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScaleRandomZMinSpinnerCallback"
  },
  "ObjectPaintScaleXSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScaleXSpinnerCallback.OnChanged",
    "body": "ObjectPaintScaleXSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScaleXSpinnerCallback"
  },
  "ObjectPaintScaleYSpinnerCallback.isEnabled": {
    "prefix": "ObjectPaintScaleYSpinnerCallback.isEnabled",
    "body": "ObjectPaintScaleYSpinnerCallback.isEnabled",
    "description": "isEnabled from ObjectPaintScaleYSpinnerCallback"
  },
  "ObjectPaintScaleYSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScaleYSpinnerCallback.OnChanged",
    "body": "ObjectPaintScaleYSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScaleYSpinnerCallback"
  },
  "ObjectPaintScaleZSpinnerCallback.isEnabled": {
    "prefix": "ObjectPaintScaleZSpinnerCallback.isEnabled",
    "body": "ObjectPaintScaleZSpinnerCallback.isEnabled",
    "description": "isEnabled from ObjectPaintScaleZSpinnerCallback"
  },
  "ObjectPaintScaleZSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScaleZSpinnerCallback.OnChanged",
    "body": "ObjectPaintScaleZSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScaleZSpinnerCallback"
  },
  "ObjectPaintScatterUSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScatterUSpinnerCallback.OnChanged",
    "body": "ObjectPaintScatterUSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScatterUSpinnerCallback"
  },
  "ObjectPaintScatterVSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScatterVSpinnerCallback.OnChanged",
    "body": "ObjectPaintScatterVSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScatterVSpinnerCallback"
  },
  "ObjectPaintScatterWSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintScatterWSpinnerCallback.OnChanged",
    "body": "ObjectPaintScatterWSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintScatterWSpinnerCallback"
  },
  "ObjectPaintSpacingSpinnerCallback.onButtonDown": {
    "prefix": "ObjectPaintSpacingSpinnerCallback.onButtonDown",
    "body": "ObjectPaintSpacingSpinnerCallback.onButtonDown",
    "description": "onButtonDown from ObjectPaintSpacingSpinnerCallback"
  },
  "ObjectPaintSpacingSpinnerCallback.onButtonUp": {
    "prefix": "ObjectPaintSpacingSpinnerCallback.onButtonUp",
    "body": "ObjectPaintSpacingSpinnerCallback.onButtonUp",
    "description": "onButtonUp from ObjectPaintSpacingSpinnerCallback"
  },
  "ObjectPaintSpacingSpinnerCallback.OnChanged": {
    "prefix": "ObjectPaintSpacingSpinnerCallback.OnChanged",
    "body": "ObjectPaintSpacingSpinnerCallback.OnChanged",
    "description": "OnChanged from ObjectPaintSpacingSpinnerCallback"
  },
  "ObjectPaintStruct.hasStartedSpacingButtonDown": {
    "prefix": "ObjectPaintStruct.hasStartedSpacingButtonDown",
    "body": "ObjectPaintStruct.hasStartedSpacingButtonDown",
    "description": "hasStartedSpacingButtonDown from ObjectPaintStruct"
  },
  "ObjectPaintStruct.IsPickingObject": {
    "prefix": "ObjectPaintStruct.IsPickingObject",
    "body": "ObjectPaintStruct.IsPickingObject",
    "description": "IsPickingObject from ObjectPaintStruct"
  },
  "ObjectPaintStruct.ListSelectedIndex": {
    "prefix": "ObjectPaintStruct.ListSelectedIndex",
    "body": "ObjectPaintStruct.ListSelectedIndex",
    "description": "ListSelectedIndex from ObjectPaintStruct"
  },
  "ObjectPaintStruct.LoadDefaultSettings": {
    "prefix": "ObjectPaintStruct.LoadDefaultSettings",
    "body": "ObjectPaintStruct.LoadDefaultSettings",
    "description": "LoadDefaultSettings from ObjectPaintStruct"
  },
  "ObjectPaintStruct.MotionTypeCallback": {
    "prefix": "ObjectPaintStruct.MotionTypeCallback",
    "body": "ObjectPaintStruct.MotionTypeCallback",
    "description": "MotionTypeCallback from ObjectPaintStruct"
  },
  "ObjectPaintStruct.NodeDialogOpen": {
    "prefix": "ObjectPaintStruct.NodeDialogOpen",
    "body": "ObjectPaintStruct.NodeDialogOpen",
    "description": "NodeDialogOpen from ObjectPaintStruct"
  },
  "ObjectPaintStruct.NodeNames": {
    "prefix": "ObjectPaintStruct.NodeNames",
    "body": "ObjectPaintStruct.NodeNames",
    "description": "NodeNames from ObjectPaintStruct"
  },
  "ObjectPaintStruct.nodes": {
    "prefix": "ObjectPaintStruct.nodes",
    "body": "ObjectPaintStruct.nodes",
    "description": "nodes from ObjectPaintStruct"
  },
  "ObjectPaintStruct.ObjectPaintPickObject": {
    "prefix": "ObjectPaintStruct.ObjectPaintPickObject",
    "body": "ObjectPaintStruct.ObjectPaintPickObject",
    "description": "ObjectPaintPickObject from ObjectPaintStruct"
  },
  "ObjectPaintStruct.OpenNodeDialog": {
    "prefix": "ObjectPaintStruct.OpenNodeDialog",
    "body": "ObjectPaintStruct.OpenNodeDialog",
    "description": "OpenNodeDialog from ObjectPaintStruct"
  },
  "ObjectPaintStruct.UseIndexCallback": {
    "prefix": "ObjectPaintStruct.UseIndexCallback",
    "body": "ObjectPaintStruct.UseIndexCallback",
    "description": "UseIndexCallback from ObjectPaintStruct"
  },
  "ObjectPaintStruct.UseObjectText": {
    "prefix": "ObjectPaintStruct.UseObjectText",
    "body": "ObjectPaintStruct.UseObjectText",
    "description": "UseObjectText from ObjectPaintStruct"
  },
  "options.printAllElements": {
    "prefix": "options.printAllElements",
    "body": "options.printAllElements",
    "description": "printAllElements from options"
  },
  "options.showGCStatus": {
    "prefix": "options.showGCStatus",
    "body": "options.showGCStatus",
    "description": "showGCStatus from options"
  },
  "Paint_PaintSize_Spinner.controller": {
    "prefix": "Paint_PaintSize_Spinner.controller",
    "body": "Paint_PaintSize_Spinner.controller",
    "description": "controller from Paint_PaintSize_Spinner"
  },
  "Paint_PaintSize_Spinner.isEnabled": {
    "prefix": "Paint_PaintSize_Spinner.isEnabled",
    "body": "Paint_PaintSize_Spinner.isEnabled",
    "description": "isEnabled from Paint_PaintSize_Spinner"
  },
  "Paint_PaintSize_Spinner.OnChanged": {
    "prefix": "Paint_PaintSize_Spinner.OnChanged",
    "body": "Paint_PaintSize_Spinner.OnChanged",
    "description": "OnChanged from Paint_PaintSize_Spinner"
  },
  "Paint_PaintStrength_Spinner.controller": {
    "prefix": "Paint_PaintStrength_Spinner.controller",
    "body": "Paint_PaintStrength_Spinner.controller",
    "description": "controller from Paint_PaintStrength_Spinner"
  },
  "Paint_PaintStrength_Spinner.isEnabled": {
    "prefix": "Paint_PaintStrength_Spinner.isEnabled",
    "body": "Paint_PaintStrength_Spinner.isEnabled",
    "description": "isEnabled from Paint_PaintStrength_Spinner"
  },
  "Paint_PaintStrength_Spinner.OnChanged": {
    "prefix": "Paint_PaintStrength_Spinner.OnChanged",
    "body": "Paint_PaintStrength_Spinner.OnChanged",
    "description": "OnChanged from Paint_PaintStrength_Spinner"
  },
  "Paint_PaintValue_Spinner.controller": {
    "prefix": "Paint_PaintValue_Spinner.controller",
    "body": "Paint_PaintValue_Spinner.controller",
    "description": "controller from Paint_PaintValue_Spinner"
  },
  "Paint_PaintValue_Spinner.isEnabled": {
    "prefix": "Paint_PaintValue_Spinner.isEnabled",
    "body": "Paint_PaintValue_Spinner.isEnabled",
    "description": "isEnabled from Paint_PaintValue_Spinner"
  },
  "Paint_PaintValue_Spinner.OnChanged": {
    "prefix": "Paint_PaintValue_Spinner.OnChanged",
    "body": "Paint_PaintValue_Spinner.OnChanged",
    "description": "OnChanged from Paint_PaintValue_Spinner"
  },
  "patch.addHook": {
    "prefix": "patch.addHook",
    "body": "patch.addHook",
    "description": "addHook from patch"
  },
  "patch.addQuadPatch": {
    "prefix": "patch.addQuadPatch",
    "body": "patch.addQuadPatch",
    "description": "addQuadPatch from patch"
  },
  "patch.addTriPatch": {
    "prefix": "patch.addTriPatch",
    "body": "patch.addTriPatch",
    "description": "addTriPatch from patch"
  },
  "patch.autosmooth": {
    "prefix": "patch.autosmooth",
    "body": "patch.autosmooth",
    "description": "autosmooth from patch"
  },
  "patch.changePatchInteriorType": {
    "prefix": "patch.changePatchInteriorType",
    "body": "patch.changePatchInteriorType",
    "description": "changePatchInteriorType from patch"
  },
  "patch.changeVertType": {
    "prefix": "patch.changeVertType",
    "body": "patch.changeVertType",
    "description": "changeVertType from patch"
  },
  "patch.clonePatchParts": {
    "prefix": "patch.clonePatchParts",
    "body": "patch.clonePatchParts",
    "description": "clonePatchParts from patch"
  },
  "patch.deletePatchParts": {
    "prefix": "patch.deletePatchParts",
    "body": "patch.deletePatchParts",
    "description": "deletePatchParts from patch"
  },
  "patch.edgeNormal": {
    "prefix": "patch.edgeNormal",
    "body": "patch.edgeNormal",
    "description": "edgeNormal from patch"
  },
  "patch.flipPatchNormal": {
    "prefix": "patch.flipPatchNormal",
    "body": "patch.flipPatchNormal",
    "description": "flipPatchNormal from patch"
  },
  "patch.getAdaptive": {
    "prefix": "patch.getAdaptive",
    "body": "patch.getAdaptive",
    "description": "getAdaptive from patch"
  },
  "patch.getEdges": {
    "prefix": "patch.getEdges",
    "body": "patch.getEdges",
    "description": "getEdges from patch"
  },
  "patch.getEdgeVec12": {
    "prefix": "patch.getEdgeVec12",
    "body": "patch.getEdgeVec12",
    "description": "getEdgeVec12 from patch"
  },
  "patch.getEdgeVec21": {
    "prefix": "patch.getEdgeVec21",
    "body": "patch.getEdgeVec21",
    "description": "getEdgeVec21 from patch"
  },
  "patch.getEdgeVert1": {
    "prefix": "patch.getEdgeVert1",
    "body": "patch.getEdgeVert1",
    "description": "getEdgeVert1 from patch"
  },
  "patch.getEdgeVert2": {
    "prefix": "patch.getEdgeVert2",
    "body": "patch.getEdgeVert2",
    "description": "getEdgeVert2 from patch"
  },
  "patch.getMapPatch": {
    "prefix": "patch.getMapPatch",
    "body": "patch.getMapPatch",
    "description": "getMapPatch from patch"
  },
  "patch.getMapSupport": {
    "prefix": "patch.getMapSupport",
    "body": "patch.getMapSupport",
    "description": "getMapSupport from patch"
  },
  "patch.getMapVert": {
    "prefix": "patch.getMapVert",
    "body": "patch.getMapVert",
    "description": "getMapVert from patch"
  },
  "patch.getMesh": {
    "prefix": "patch.getMesh",
    "body": "patch.getMesh",
    "description": "getMesh from patch"
  },
  "patch.getMeshSteps": {
    "prefix": "patch.getMeshSteps",
    "body": "patch.getMeshSteps",
    "description": "getMeshSteps from patch"
  },
  "patch.getMeshStepsRender": {
    "prefix": "patch.getMeshStepsRender",
    "body": "patch.getMeshStepsRender",
    "description": "getMeshStepsRender from patch"
  },
  "patch.getNumEdges": {
    "prefix": "patch.getNumEdges",
    "body": "patch.getNumEdges",
    "description": "getNumEdges from patch"
  },
  "patch.getNumMaps": {
    "prefix": "patch.getNumMaps",
    "body": "patch.getNumMaps",
    "description": "getNumMaps from patch"
  },
  "patch.getNumMapVerts": {
    "prefix": "patch.getNumMapVerts",
    "body": "patch.getNumMapVerts",
    "description": "getNumMapVerts from patch"
  },
  "patch.getNumPatches": {
    "prefix": "patch.getNumPatches",
    "body": "patch.getNumPatches",
    "description": "getNumPatches from patch"
  },
  "patch.getNumVecs": {
    "prefix": "patch.getNumVecs",
    "body": "patch.getNumVecs",
    "description": "getNumVecs from patch"
  },
  "patch.getNumVerts": {
    "prefix": "patch.getNumVerts",
    "body": "patch.getNumVerts",
    "description": "getNumVerts from patch"
  },
  "patch.getPatches": {
    "prefix": "patch.getPatches",
    "body": "patch.getPatches",
    "description": "getPatches from patch"
  },
  "patch.getPatchInteriorType": {
    "prefix": "patch.getPatchInteriorType",
    "body": "patch.getPatchInteriorType",
    "description": "getPatchInteriorType from patch"
  },
  "patch.getPatchMtlID": {
    "prefix": "patch.getPatchMtlID",
    "body": "patch.getPatchMtlID",
    "description": "getPatchMtlID from patch"
  },
  "patch.getPatchType": {
    "prefix": "patch.getPatchType",
    "body": "patch.getPatchType",
    "description": "getPatchType from patch"
  },
  "patch.getShowInterior": {
    "prefix": "patch.getShowInterior",
    "body": "patch.getShowInterior",
    "description": "getShowInterior from patch"
  },
  "patch.getVec": {
    "prefix": "patch.getVec",
    "body": "patch.getVec",
    "description": "getVec from patch"
  },
  "patch.getVecPatches": {
    "prefix": "patch.getVecPatches",
    "body": "patch.getVecPatches",
    "description": "getVecPatches from patch"
  },
  "patch.getVectors": {
    "prefix": "patch.getVectors",
    "body": "patch.getVectors",
    "description": "getVectors from patch"
  },
  "patch.getVecVert": {
    "prefix": "patch.getVecVert",
    "body": "patch.getVecVert",
    "description": "getVecVert from patch"
  },
  "patch.getVert": {
    "prefix": "patch.getVert",
    "body": "patch.getVert",
    "description": "getVert from patch"
  },
  "patch.getVertEdges": {
    "prefix": "patch.getVertEdges",
    "body": "patch.getVertEdges",
    "description": "getVertEdges from patch"
  },
  "patch.getVertPatches": {
    "prefix": "patch.getVertPatches",
    "body": "patch.getVertPatches",
    "description": "getVertPatches from patch"
  },
  "patch.getVertType": {
    "prefix": "patch.getVertType",
    "body": "patch.getVertType",
    "description": "getVertType from patch"
  },
  "patch.getVertVecs": {
    "prefix": "patch.getVertVecs",
    "body": "patch.getVertVecs",
    "description": "getVertVecs from patch"
  },
  "patch.hookFixTopology": {
    "prefix": "patch.hookFixTopology",
    "body": "patch.hookFixTopology",
    "description": "hookFixTopology from patch"
  },
  "patch.interpQuadPatch": {
    "prefix": "patch.interpQuadPatch",
    "body": "patch.interpQuadPatch",
    "description": "interpQuadPatch from patch"
  },
  "patch.interpTriPatch": {
    "prefix": "patch.interpTriPatch",
    "body": "patch.interpTriPatch",
    "description": "interpTriPatch from patch"
  },
  "patch.makeQuadPatch": {
    "prefix": "patch.makeQuadPatch",
    "body": "patch.makeQuadPatch",
    "description": "makeQuadPatch from patch"
  },
  "patch.makeTriPatch": {
    "prefix": "patch.makeTriPatch",
    "body": "patch.makeTriPatch",
    "description": "makeTriPatch from patch"
  },
  "patch.maxMapChannels": {
    "prefix": "patch.maxMapChannels",
    "body": "patch.maxMapChannels",
    "description": "maxMapChannels from patch"
  },
  "patch.patchNormal": {
    "prefix": "patch.patchNormal",
    "body": "patch.patchNormal",
    "description": "patchNormal from patch"
  },
  "patch.removeHook": {
    "prefix": "patch.removeHook",
    "body": "patch.removeHook",
    "description": "removeHook from patch"
  },
  "patch.setAdaptive": {
    "prefix": "patch.setAdaptive",
    "body": "patch.setAdaptive",
    "description": "setAdaptive from patch"
  },
  "patch.setMapPatch": {
    "prefix": "patch.setMapPatch",
    "body": "patch.setMapPatch",
    "description": "setMapPatch from patch"
  },
  "patch.setMapSupport": {
    "prefix": "patch.setMapSupport",
    "body": "patch.setMapSupport",
    "description": "setMapSupport from patch"
  },
  "patch.setMapVert": {
    "prefix": "patch.setMapVert",
    "body": "patch.setMapVert",
    "description": "setMapVert from patch"
  },
  "patch.setMeshSteps": {
    "prefix": "patch.setMeshSteps",
    "body": "patch.setMeshSteps",
    "description": "setMeshSteps from patch"
  },
  "patch.setMeshStepsRender": {
    "prefix": "patch.setMeshStepsRender",
    "body": "patch.setMeshStepsRender",
    "description": "setMeshStepsRender from patch"
  },
  "patch.setNumEdges": {
    "prefix": "patch.setNumEdges",
    "body": "patch.setNumEdges",
    "description": "setNumEdges from patch"
  },
  "patch.setNumMapPatches": {
    "prefix": "patch.setNumMapPatches",
    "body": "patch.setNumMapPatches",
    "description": "setNumMapPatches from patch"
  },
  "patch.setNumMaps": {
    "prefix": "patch.setNumMaps",
    "body": "patch.setNumMaps",
    "description": "setNumMaps from patch"
  },
  "patch.setNumMapVerts": {
    "prefix": "patch.setNumMapVerts",
    "body": "patch.setNumMapVerts",
    "description": "setNumMapVerts from patch"
  },
  "patch.setNumPatches": {
    "prefix": "patch.setNumPatches",
    "body": "patch.setNumPatches",
    "description": "setNumPatches from patch"
  },
  "patch.setNumVecs": {
    "prefix": "patch.setNumVecs",
    "body": "patch.setNumVecs",
    "description": "setNumVecs from patch"
  },
  "patch.setNumVerts": {
    "prefix": "patch.setNumVerts",
    "body": "patch.setNumVerts",
    "description": "setNumVerts from patch"
  },
  "patch.setPatchMtlID": {
    "prefix": "patch.setPatchMtlID",
    "body": "patch.setPatchMtlID",
    "description": "setPatchMtlID from patch"
  },
  "patch.setShowInterior": {
    "prefix": "patch.setShowInterior",
    "body": "patch.setShowInterior",
    "description": "setShowInterior from patch"
  },
  "patch.setVert": {
    "prefix": "patch.setVert",
    "body": "patch.setVert",
    "description": "setVert from patch"
  },
  "patch.subdivideEdges": {
    "prefix": "patch.subdivideEdges",
    "body": "patch.subdivideEdges",
    "description": "subdivideEdges from patch"
  },
  "patch.subdividePatches": {
    "prefix": "patch.subdividePatches",
    "body": "patch.subdividePatches",
    "description": "subdividePatches from patch"
  },
  "patch.transform": {
    "prefix": "patch.transform",
    "body": "patch.transform",
    "description": "transform from patch"
  },
  "patch.unifyNormals": {
    "prefix": "patch.unifyNormals",
    "body": "patch.unifyNormals",
    "description": "unifyNormals from patch"
  },
  "patch.update": {
    "prefix": "patch.update",
    "body": "patch.update",
    "description": "update from patch"
  },
  "patch.updateHooks": {
    "prefix": "patch.updateHooks",
    "body": "patch.updateHooks",
    "description": "updateHooks from patch"
  },
  "patch.updatePatchNormals": {
    "prefix": "patch.updatePatchNormals",
    "body": "patch.updatePatchNormals",
    "description": "updatePatchNormals from patch"
  },
  "patch.weld2Verts": {
    "prefix": "patch.weld2Verts",
    "body": "patch.weld2Verts",
    "description": "weld2Verts from patch"
  },
  "patch.weldEdges": {
    "prefix": "patch.weldEdges",
    "body": "patch.weldEdges",
    "description": "weldEdges from patch"
  },
  "patch.weldVerts": {
    "prefix": "patch.weldVerts",
    "body": "patch.weldVerts",
    "description": "weldVerts from patch"
  },
  "patchOps.addQuad": {
    "prefix": "patchOps.addQuad",
    "body": "patchOps.addQuad",
    "description": "addQuad from patchOps"
  },
  "patchOps.addTri": {
    "prefix": "patchOps.addTri",
    "body": "patchOps.addTri",
    "description": "addTri from patchOps"
  },
  "patchOps.break": {
    "prefix": "patchOps.break",
    "body": "patchOps.break",
    "description": "break from patchOps"
  },
  "patchOps.clearAllSG": {
    "prefix": "patchOps.clearAllSG",
    "body": "patchOps.clearAllSG",
    "description": "clearAllSG from patchOps"
  },
  "patchOps.createShapeFromEdges": {
    "prefix": "patchOps.createShapeFromEdges",
    "body": "patchOps.createShapeFromEdges",
    "description": "createShapeFromEdges from patchOps"
  },
  "patchOps.delete": {
    "prefix": "patchOps.delete",
    "body": "patchOps.delete",
    "description": "delete from patchOps"
  },
  "patchOps.detach": {
    "prefix": "patchOps.detach",
    "body": "patchOps.detach",
    "description": "detach from patchOps"
  },
  "patchOps.flipNormal": {
    "prefix": "patchOps.flipNormal",
    "body": "patchOps.flipNormal",
    "description": "flipNormal from patchOps"
  },
  "patchOps.growSelection": {
    "prefix": "patchOps.growSelection",
    "body": "patchOps.growSelection",
    "description": "growSelection from patchOps"
  },
  "patchOps.hide": {
    "prefix": "patchOps.hide",
    "body": "patchOps.hide",
    "description": "hide from patchOps"
  },
  "patchOps.patchSmooth": {
    "prefix": "patchOps.patchSmooth",
    "body": "patchOps.patchSmooth",
    "description": "patchSmooth from patchOps"
  },
  "patchOps.selectByID": {
    "prefix": "patchOps.selectByID",
    "body": "patchOps.selectByID",
    "description": "selectByID from patchOps"
  },
  "patchOps.selectBySG": {
    "prefix": "patchOps.selectBySG",
    "body": "patchOps.selectBySG",
    "description": "selectBySG from patchOps"
  },
  "patchOps.selectEdgeLoop": {
    "prefix": "patchOps.selectEdgeLoop",
    "body": "patchOps.selectEdgeLoop",
    "description": "selectEdgeLoop from patchOps"
  },
  "patchOps.selectEdgeRing": {
    "prefix": "patchOps.selectEdgeRing",
    "body": "patchOps.selectEdgeRing",
    "description": "selectEdgeRing from patchOps"
  },
  "patchOps.selectOpenEdges": {
    "prefix": "patchOps.selectOpenEdges",
    "body": "patchOps.selectOpenEdges",
    "description": "selectOpenEdges from patchOps"
  },
  "patchOps.shrinkSelection": {
    "prefix": "patchOps.shrinkSelection",
    "body": "patchOps.shrinkSelection",
    "description": "shrinkSelection from patchOps"
  },
  "patchOps.startAttach": {
    "prefix": "patchOps.startAttach",
    "body": "patchOps.startAttach",
    "description": "startAttach from patchOps"
  },
  "patchOps.startBevel": {
    "prefix": "patchOps.startBevel",
    "body": "patchOps.startBevel",
    "description": "startBevel from patchOps"
  },
  "patchOps.startBind": {
    "prefix": "patchOps.startBind",
    "body": "patchOps.startBind",
    "description": "startBind from patchOps"
  },
  "patchOps.startCopyTangent": {
    "prefix": "patchOps.startCopyTangent",
    "body": "patchOps.startCopyTangent",
    "description": "startCopyTangent from patchOps"
  },
  "patchOps.startCreate": {
    "prefix": "patchOps.startCreate",
    "body": "patchOps.startCreate",
    "description": "startCreate from patchOps"
  },
  "patchOps.startFlipNormalMode": {
    "prefix": "patchOps.startFlipNormalMode",
    "body": "patchOps.startFlipNormalMode",
    "description": "startFlipNormalMode from patchOps"
  },
  "patchOps.startPasteTangent": {
    "prefix": "patchOps.startPasteTangent",
    "body": "patchOps.startPasteTangent",
    "description": "startPasteTangent from patchOps"
  },
  "patchOps.startWeldTarget": {
    "prefix": "patchOps.startWeldTarget",
    "body": "patchOps.startWeldTarget",
    "description": "startWeldTarget from patchOps"
  },
  "patchOps.subdivide": {
    "prefix": "patchOps.subdivide",
    "body": "patchOps.subdivide",
    "description": "subdivide from patchOps"
  },
  "patchOps.toggleShadedFaces": {
    "prefix": "patchOps.toggleShadedFaces",
    "body": "patchOps.toggleShadedFaces",
    "description": "toggleShadedFaces from patchOps"
  },
  "patchOps.unbind": {
    "prefix": "patchOps.unbind",
    "body": "patchOps.unbind",
    "description": "unbind from patchOps"
  },
  "patchOps.unhideAll": {
    "prefix": "patchOps.unhideAll",
    "body": "patchOps.unhideAll",
    "description": "unhideAll from patchOps"
  },
  "patchOps.unifyNormal": {
    "prefix": "patchOps.unifyNormal",
    "body": "patchOps.unifyNormal",
    "description": "unifyNormal from patchOps"
  },
  "patchOps.weld": {
    "prefix": "patchOps.weld",
    "body": "patchOps.weld",
    "description": "weld from patchOps"
  },
  "pathConfig.addProjectDirectoryCreateFilter": {
    "prefix": "pathConfig.addProjectDirectoryCreateFilter",
    "body": "pathConfig.addProjectDirectoryCreateFilter",
    "description": "addProjectDirectoryCreateFilter from pathConfig"
  },
  "pathConfig.appendPath": {
    "prefix": "pathConfig.appendPath",
    "body": "pathConfig.appendPath",
    "description": "appendPath from pathConfig"
  },
  "pathConfig.convertPathToAbsolute": {
    "prefix": "pathConfig.convertPathToAbsolute",
    "body": "pathConfig.convertPathToAbsolute",
    "description": "convertPathToAbsolute from pathConfig"
  },
  "pathConfig.convertPathToLowerCase": {
    "prefix": "pathConfig.convertPathToLowerCase",
    "body": "pathConfig.convertPathToLowerCase",
    "description": "convertPathToLowerCase from pathConfig"
  },
  "pathConfig.convertPathToRelativeTo": {
    "prefix": "pathConfig.convertPathToRelativeTo",
    "body": "pathConfig.convertPathToRelativeTo",
    "description": "convertPathToRelativeTo from pathConfig"
  },
  "pathConfig.convertPathToUnc": {
    "prefix": "pathConfig.convertPathToUnc",
    "body": "pathConfig.convertPathToUnc",
    "description": "convertPathToUnc from pathConfig"
  },
  "pathConfig.doProjectSetupSteps": {
    "prefix": "pathConfig.doProjectSetupSteps",
    "body": "pathConfig.doProjectSetupSteps",
    "description": "doProjectSetupSteps from pathConfig"
  },
  "pathConfig.doProjectSetupStepsUsingDirectory": {
    "prefix": "pathConfig.doProjectSetupStepsUsingDirectory",
    "body": "pathConfig.doProjectSetupStepsUsingDirectory",
    "description": "doProjectSetupStepsUsingDirectory from pathConfig"
  },
  "pathConfig.getCurrentProjectFolder": {
    "prefix": "pathConfig.getCurrentProjectFolder",
    "body": "pathConfig.getCurrentProjectFolder",
    "description": "getCurrentProjectFolder from pathConfig"
  },
  "pathConfig.getCurrentProjectFolderPath": {
    "prefix": "pathConfig.getCurrentProjectFolderPath",
    "body": "pathConfig.getCurrentProjectFolderPath",
    "description": "getCurrentProjectFolderPath from pathConfig"
  },
  "pathConfig.GetDir": {
    "prefix": "pathConfig.GetDir",
    "body": "pathConfig.GetDir",
    "description": "GetDir from pathConfig"
  },
  "pathConfig.getProjectFolderPath": {
    "prefix": "pathConfig.getProjectFolderPath",
    "body": "pathConfig.getProjectFolderPath",
    "description": "getProjectFolderPath from pathConfig"
  },
  "pathConfig.getProjectSubDirectory": {
    "prefix": "pathConfig.getProjectSubDirectory",
    "body": "pathConfig.getProjectSubDirectory",
    "description": "getProjectSubDirectory from pathConfig"
  },
  "pathConfig.getProjectSubDirectoryCount": {
    "prefix": "pathConfig.getProjectSubDirectoryCount",
    "body": "pathConfig.getProjectSubDirectoryCount",
    "description": "getProjectSubDirectoryCount from pathConfig"
  },
  "pathConfig.isAbsolutePath": {
    "prefix": "pathConfig.isAbsolutePath",
    "body": "pathConfig.isAbsolutePath",
    "description": "isAbsolutePath from pathConfig"
  },
  "pathConfig.isLegalPath": {
    "prefix": "pathConfig.isLegalPath",
    "body": "pathConfig.isLegalPath",
    "description": "isLegalPath from pathConfig"
  },
  "pathConfig.isPathRootedAtBackslash": {
    "prefix": "pathConfig.isPathRootedAtBackslash",
    "body": "pathConfig.isPathRootedAtBackslash",
    "description": "isPathRootedAtBackslash from pathConfig"
  },
  "pathConfig.isPathRootedAtDriveLetter": {
    "prefix": "pathConfig.isPathRootedAtDriveLetter",
    "body": "pathConfig.isPathRootedAtDriveLetter",
    "description": "isPathRootedAtDriveLetter from pathConfig"
  },
  "pathConfig.isProjectFolder": {
    "prefix": "pathConfig.isProjectFolder",
    "body": "pathConfig.isProjectFolder",
    "description": "isProjectFolder from pathConfig"
  },
  "pathConfig.isRootPath": {
    "prefix": "pathConfig.isRootPath",
    "body": "pathConfig.isRootPath",
    "description": "isRootPath from pathConfig"
  },
  "pathConfig.isUncPath": {
    "prefix": "pathConfig.isUncPath",
    "body": "pathConfig.isUncPath",
    "description": "isUncPath from pathConfig"
  },
  "pathConfig.isUncSharePath": {
    "prefix": "pathConfig.isUncSharePath",
    "body": "pathConfig.isUncSharePath",
    "description": "isUncSharePath from pathConfig"
  },
  "pathConfig.isUsingProfileDirectories": {
    "prefix": "pathConfig.isUsingProfileDirectories",
    "body": "pathConfig.isUsingProfileDirectories",
    "description": "isUsingProfileDirectories from pathConfig"
  },
  "pathConfig.isUsingRoamingProfiles": {
    "prefix": "pathConfig.isUsingRoamingProfiles",
    "body": "pathConfig.isUsingRoamingProfiles",
    "description": "isUsingRoamingProfiles from pathConfig"
  },
  "pathConfig.load": {
    "prefix": "pathConfig.load",
    "body": "pathConfig.load",
    "description": "load from pathConfig"
  },
  "pathConfig.mapPaths": {
    "prefix": "pathConfig.mapPaths",
    "body": "pathConfig.mapPaths",
    "description": "mapPaths from pathConfig"
  },
  "pathConfig.add": {
    "prefix": "pathConfig.add",
    "body": "pathConfig.add",
    "description": "add from pathConfig"
  },
  "pathConfig.count": {
    "prefix": "pathConfig.count",
    "body": "pathConfig.count",
    "description": "count from pathConfig"
  },
  "pathConfig.get": {
    "prefix": "pathConfig.get",
    "body": "pathConfig.get",
    "description": "get from pathConfig"
  },
  "pathConfig.getFullFilePath": {
    "prefix": "pathConfig.getFullFilePath",
    "body": "pathConfig.getFullFilePath",
    "description": "getFullFilePath from pathConfig"
  },
  "pathConfig.merge": {
    "prefix": "pathConfig.merge",
    "body": "pathConfig.merge",
    "description": "merge from pathConfig"
  },
  "pathConfig.normalizePath": {
    "prefix": "pathConfig.normalizePath",
    "body": "pathConfig.normalizePath",
    "description": "normalizePath from pathConfig"
  },
  "pathConfig.pathsResolveEquivalent": {
    "prefix": "pathConfig.pathsResolveEquivalent",
    "body": "pathConfig.pathsResolveEquivalent",
    "description": "pathsResolveEquivalent from pathConfig"
  },
  "pathConfig.pluginPaths": {
    "prefix": "pathConfig.pluginPaths",
    "body": "pathConfig.pluginPaths",
    "description": "pluginPaths from pathConfig"
  },
  "pathConfig.removePathLeaf": {
    "prefix": "pathConfig.removePathLeaf",
    "body": "pathConfig.removePathLeaf",
    "description": "removePathLeaf from pathConfig"
  },
  "pathConfig.removePathTopParent": {
    "prefix": "pathConfig.removePathTopParent",
    "body": "pathConfig.removePathTopParent",
    "description": "removePathTopParent from pathConfig"
  },
  "pathConfig.resolvePathSymbols": {
    "prefix": "pathConfig.resolvePathSymbols",
    "body": "pathConfig.resolvePathSymbols",
    "description": "resolvePathSymbols from pathConfig"
  },
  "pathConfig.resolveUNC": {
    "prefix": "pathConfig.resolveUNC",
    "body": "pathConfig.resolveUNC",
    "description": "resolveUNC from pathConfig"
  },
  "pathConfig.SaveTo": {
    "prefix": "pathConfig.SaveTo",
    "body": "pathConfig.SaveTo",
    "description": "SaveTo from pathConfig"
  },
  "pathConfig.sessionPaths": {
    "prefix": "pathConfig.sessionPaths",
    "body": "pathConfig.sessionPaths",
    "description": "sessionPaths from pathConfig"
  },
  "pathConfig.setCurrentProjectFolder": {
    "prefix": "pathConfig.setCurrentProjectFolder",
    "body": "pathConfig.setCurrentProjectFolder",
    "description": "setCurrentProjectFolder from pathConfig"
  },
  "pathConfig.SetDir": {
    "prefix": "pathConfig.SetDir",
    "body": "pathConfig.SetDir",
    "description": "SetDir from pathConfig"
  },
  "pathConfig.stripPathToLeaf": {
    "prefix": "pathConfig.stripPathToLeaf",
    "body": "pathConfig.stripPathToLeaf",
    "description": "stripPathToLeaf from pathConfig"
  },
  "pathConfig.stripPathToTopParent": {
    "prefix": "pathConfig.stripPathToTopParent",
    "body": "pathConfig.stripPathToTopParent",
    "description": "stripPathToTopParent from pathConfig"
  },
  "pathConfig.xrefPaths": {
    "prefix": "pathConfig.xrefPaths",
    "body": "pathConfig.xrefPaths",
    "description": "xrefPaths from pathConfig"
  },
  "PDBranchSpinnerCallback.OnChanged": {
    "prefix": "PDBranchSpinnerCallback.OnChanged",
    "body": "PDBranchSpinnerCallback.OnChanged",
    "description": "OnChanged from PDBranchSpinnerCallback"
  },
  "PDDistanceSpinnerCallback.OnChanged": {
    "prefix": "PDDistanceSpinnerCallback.OnChanged",
    "body": "PDDistanceSpinnerCallback.OnChanged",
    "description": "OnChanged from PDDistanceSpinnerCallback"
  },
  "PDOffsetSpinnerCallback.OnChanged": {
    "prefix": "PDOffsetSpinnerCallback.OnChanged",
    "body": "PDOffsetSpinnerCallback.OnChanged",
    "description": "OnChanged from PDOffsetSpinnerCallback"
  },
  "PDSolveSpinnerCallback.OnChanged": {
    "prefix": "PDSolveSpinnerCallback.OnChanged",
    "body": "PDSolveSpinnerCallback.OnChanged",
    "description": "OnChanged from PDSolveSpinnerCallback"
  },
  "persistents.isPersistent": {
    "prefix": "persistents.isPersistent",
    "body": "persistents.isPersistent",
    "description": "isPersistent from persistents"
  },
  "persistents.make": {
    "prefix": "persistents.make",
    "body": "persistents.make",
    "description": "make from persistents"
  },
  "persistents.remove": {
    "prefix": "persistents.remove",
    "body": "persistents.remove",
    "description": "remove from persistents"
  },
  "persistents.removeAll": {
    "prefix": "persistents.removeAll",
    "body": "persistents.removeAll",
    "description": "removeAll from persistents"
  },
  "persistents.show": {
    "prefix": "persistents.show",
    "body": "persistents.show",
    "description": "show from persistents"
  },
  "PerspectiveGrowSpinnerCallback.onButtonDown": {
    "prefix": "PerspectiveGrowSpinnerCallback.onButtonDown",
    "body": "PerspectiveGrowSpinnerCallback.onButtonDown",
    "description": "onButtonDown from PerspectiveGrowSpinnerCallback"
  },
  "PerspectiveGrowSpinnerCallback.onButtonUp": {
    "prefix": "PerspectiveGrowSpinnerCallback.onButtonUp",
    "body": "PerspectiveGrowSpinnerCallback.onButtonUp",
    "description": "onButtonUp from PerspectiveGrowSpinnerCallback"
  },
  "PerspectiveGrowSpinnerCallback.OnChanged": {
    "prefix": "PerspectiveGrowSpinnerCallback.OnChanged",
    "body": "PerspectiveGrowSpinnerCallback.OnChanged",
    "description": "OnChanged from PerspectiveGrowSpinnerCallback"
  },
  "PerspectiveSelectSpinnerCallback.OnChanged": {
    "prefix": "PerspectiveSelectSpinnerCallback.OnChanged",
    "body": "PerspectiveSelectSpinnerCallback.OnChanged",
    "description": "OnChanged from PerspectiveSelectSpinnerCallback"
  },
  "pluginPaths.get": {
    "prefix": "pluginPaths.get",
    "body": "pluginPaths.get",
    "description": "get from pluginPaths"
  },
  "PolyBoostStruct.ActiveLoopRingMode": {
    "prefix": "PolyBoostStruct.ActiveLoopRingMode",
    "body": "PolyBoostStruct.ActiveLoopRingMode",
    "description": "ActiveLoopRingMode from PolyBoostStruct"
  },
  "PolyBoostStruct.Clonefunc": {
    "prefix": "PolyBoostStruct.Clonefunc",
    "body": "PolyBoostStruct.Clonefunc",
    "description": "Clonefunc from PolyBoostStruct"
  },
  "PolyBoostStruct.ClothElement": {
    "prefix": "PolyBoostStruct.ClothElement",
    "body": "PolyBoostStruct.ClothElement",
    "description": "ClothElement from PolyBoostStruct"
  },
  "PolyBoostStruct.ClothGrowShrink": {
    "prefix": "PolyBoostStruct.ClothGrowShrink",
    "body": "PolyBoostStruct.ClothGrowShrink",
    "description": "ClothGrowShrink from PolyBoostStruct"
  },
  "PolyBoostStruct.ClothLoopRing": {
    "prefix": "PolyBoostStruct.ClothLoopRing",
    "body": "PolyBoostStruct.ClothLoopRing",
    "description": "ClothLoopRing from PolyBoostStruct"
  },
  "PolyBoostStruct.createPolygon": {
    "prefix": "PolyBoostStruct.createPolygon",
    "body": "PolyBoostStruct.createPolygon",
    "description": "createPolygon from PolyBoostStruct"
  },
  "PolyBoostStruct.DotLoopSelect": {
    "prefix": "PolyBoostStruct.DotLoopSelect",
    "body": "PolyBoostStruct.DotLoopSelect",
    "description": "DotLoopSelect from PolyBoostStruct"
  },
  "PolyBoostStruct.EndAllTools": {
    "prefix": "PolyBoostStruct.EndAllTools",
    "body": "PolyBoostStruct.EndAllTools",
    "description": "EndAllTools from PolyBoostStruct"
  },
  "PolyBoostStruct.FindUnwrapfunc": {
    "prefix": "PolyBoostStruct.FindUnwrapfunc",
    "body": "PolyBoostStruct.FindUnwrapfunc",
    "description": "FindUnwrapfunc from PolyBoostStruct"
  },
  "PolyBoostStruct.FlowConnect": {
    "prefix": "PolyBoostStruct.FlowConnect",
    "body": "PolyBoostStruct.FlowConnect",
    "description": "FlowConnect from PolyBoostStruct"
  },
  "PolyBoostStruct.FlowDfunc": {
    "prefix": "PolyBoostStruct.FlowDfunc",
    "body": "PolyBoostStruct.FlowDfunc",
    "description": "FlowDfunc from PolyBoostStruct"
  },
  "PolyBoostStruct.Flowfunc": {
    "prefix": "PolyBoostStruct.Flowfunc",
    "body": "PolyBoostStruct.Flowfunc",
    "description": "Flowfunc from PolyBoostStruct"
  },
  "PolyBoostStruct.FlowSel": {
    "prefix": "PolyBoostStruct.FlowSel",
    "body": "PolyBoostStruct.FlowSel",
    "description": "FlowSel from PolyBoostStruct"
  },
  "PolyBoostStruct.FreeformApplySettings": {
    "prefix": "PolyBoostStruct.FreeformApplySettings",
    "body": "PolyBoostStruct.FreeformApplySettings",
    "description": "FreeformApplySettings from PolyBoostStruct"
  },
  "PolyBoostStruct.FreeformLoadDefaultSettings": {
    "prefix": "PolyBoostStruct.FreeformLoadDefaultSettings",
    "body": "PolyBoostStruct.FreeformLoadDefaultSettings",
    "description": "FreeformLoadDefaultSettings from PolyBoostStruct"
  },
  "PolyBoostStruct.FreeformLoadSettings": {
    "prefix": "PolyBoostStruct.FreeformLoadSettings",
    "body": "PolyBoostStruct.FreeformLoadSettings",
    "description": "FreeformLoadSettings from PolyBoostStruct"
  },
  "PolyBoostStruct.FreeformSaveSettings": {
    "prefix": "PolyBoostStruct.FreeformSaveSettings",
    "body": "PolyBoostStruct.FreeformSaveSettings",
    "description": "FreeformSaveSettings from PolyBoostStruct"
  },
  "PolyBoostStruct.FreeformSetDefaultSettings": {
    "prefix": "PolyBoostStruct.FreeformSetDefaultSettings",
    "body": "PolyBoostStruct.FreeformSetDefaultSettings",
    "description": "FreeformSetDefaultSettings from PolyBoostStruct"
  },
  "PolyBoostStruct.FreeformWriteSettings": {
    "prefix": "PolyBoostStruct.FreeformWriteSettings",
    "body": "PolyBoostStruct.FreeformWriteSettings",
    "description": "FreeformWriteSettings from PolyBoostStruct"
  },
  "PolyBoostStruct.GetSizefunc": {
    "prefix": "PolyBoostStruct.GetSizefunc",
    "body": "PolyBoostStruct.GetSizefunc",
    "description": "GetSizefunc from PolyBoostStruct"
  },
  "PolyBoostStruct.Hardfunc": {
    "prefix": "PolyBoostStruct.Hardfunc",
    "body": "PolyBoostStruct.Hardfunc",
    "description": "Hardfunc from PolyBoostStruct"
  },
  "PolyBoostStruct.InsertVertex": {
    "prefix": "PolyBoostStruct.InsertVertex",
    "body": "PolyBoostStruct.InsertVertex",
    "description": "InsertVertex from PolyBoostStruct"
  },
  "PolyBoostStruct.Insloopfunc": {
    "prefix": "PolyBoostStruct.Insloopfunc",
    "body": "PolyBoostStruct.Insloopfunc",
    "description": "Insloopfunc from PolyBoostStruct"
  },
  "PolyBoostStruct.LoopSelect": {
    "prefix": "PolyBoostStruct.LoopSelect",
    "body": "PolyBoostStruct.LoopSelect",
    "description": "LoopSelect from PolyBoostStruct"
  },
  "PolyBoostStruct.Looptopofunc": {
    "prefix": "PolyBoostStruct.Looptopofunc",
    "body": "PolyBoostStruct.Looptopofunc",
    "description": "Looptopofunc from PolyBoostStruct"
  },
  "PolyBoostStruct.ModeLoopRing": {
    "prefix": "PolyBoostStruct.ModeLoopRing",
    "body": "PolyBoostStruct.ModeLoopRing",
    "description": "ModeLoopRing from PolyBoostStruct"
  },
  "PolyBoostStruct.ModeRun": {
    "prefix": "PolyBoostStruct.ModeRun",
    "body": "PolyBoostStruct.ModeRun",
    "description": "ModeRun from PolyBoostStruct"
  },
  "PolyBoostStruct.ModeSel": {
    "prefix": "PolyBoostStruct.ModeSel",
    "body": "PolyBoostStruct.ModeSel",
    "description": "ModeSel from PolyBoostStruct"
  },
  "PolyBoostStruct.ModeStep": {
    "prefix": "PolyBoostStruct.ModeStep",
    "body": "PolyBoostStruct.ModeStep",
    "description": "ModeStep from PolyBoostStruct"
  },
  "PolyBoostStruct.Modetext": {
    "prefix": "PolyBoostStruct.Modetext",
    "body": "PolyBoostStruct.Modetext",
    "description": "Modetext from PolyBoostStruct"
  },
  "PolyBoostStruct.Modetype": {
    "prefix": "PolyBoostStruct.Modetype",
    "body": "PolyBoostStruct.Modetype",
    "description": "Modetype from PolyBoostStruct"
  },
  "PolyBoostStruct.NumericDfunc": {
    "prefix": "PolyBoostStruct.NumericDfunc",
    "body": "PolyBoostStruct.NumericDfunc",
    "description": "NumericDfunc from PolyBoostStruct"
  },
  "PolyBoostStruct.NUMERICSELECT": {
    "prefix": "PolyBoostStruct.NUMERICSELECT",
    "body": "PolyBoostStruct.NUMERICSELECT",
    "description": "NUMERICSELECT from PolyBoostStruct"
  },
  "PolyBoostStruct.ObjectPaintStart": {
    "prefix": "PolyBoostStruct.ObjectPaintStart",
    "body": "PolyBoostStruct.ObjectPaintStart",
    "description": "ObjectPaintStart from PolyBoostStruct"
  },
  "PolyBoostStruct.PaintDeformPickFilter": {
    "prefix": "PolyBoostStruct.PaintDeformPickFilter",
    "body": "PolyBoostStruct.PaintDeformPickFilter",
    "description": "PaintDeformPickFilter from PolyBoostStruct"
  },
  "PolyBoostStruct.PaintDeformPickNode": {
    "prefix": "PolyBoostStruct.PaintDeformPickNode",
    "body": "PolyBoostStruct.PaintDeformPickNode",
    "description": "PaintDeformPickNode from PolyBoostStruct"
  },
  "PolyBoostStruct.PaintDeformPicktext": {
    "prefix": "PolyBoostStruct.PaintDeformPicktext",
    "body": "PolyBoostStruct.PaintDeformPicktext",
    "description": "PaintDeformPicktext from PolyBoostStruct"
  },
  "PolyBoostStruct.Pastefunc": {
    "prefix": "PolyBoostStruct.Pastefunc",
    "body": "PolyBoostStruct.Pastefunc",
    "description": "Pastefunc from PolyBoostStruct"
  },
  "PolyBoostStruct.PasteSelection": {
    "prefix": "PolyBoostStruct.PasteSelection",
    "body": "PolyBoostStruct.PasteSelection",
    "description": "PasteSelection from PolyBoostStruct"
  },
  "PolyBoostStruct.PBo_Flowmainpos": {
    "prefix": "PolyBoostStruct.PBo_Flowmainpos",
    "body": "PolyBoostStruct.PBo_Flowmainpos",
    "description": "PBo_Flowmainpos from PolyBoostStruct"
  },
  "PolyBoostStruct.PBo_SDmainpos": {
    "prefix": "PolyBoostStruct.PBo_SDmainpos",
    "body": "PolyBoostStruct.PBo_SDmainpos",
    "description": "PBo_SDmainpos from PolyBoostStruct"
  },
  "PolyBoostStruct.PBo_texturemain": {
    "prefix": "PolyBoostStruct.PBo_texturemain",
    "body": "PolyBoostStruct.PBo_texturemain",
    "description": "PBo_texturemain from PolyBoostStruct"
  },
  "PolyBoostStruct.PBo_texturemainpos": {
    "prefix": "PolyBoostStruct.PBo_texturemainpos",
    "body": "PolyBoostStruct.PBo_texturemainpos",
    "description": "PBo_texturemainpos from PolyBoostStruct"
  },
  "PolyBoostStruct.PBo_transmain": {
    "prefix": "PolyBoostStruct.PBo_transmain",
    "body": "PolyBoostStruct.PBo_transmain",
    "description": "PBo_transmain from PolyBoostStruct"
  },
  "PolyBoostStruct.PBo_transmainpos": {
    "prefix": "PolyBoostStruct.PBo_transmainpos",
    "body": "PolyBoostStruct.PBo_transmainpos",
    "description": "PBo_transmainpos from PolyBoostStruct"
  },
  "PolyBoostStruct.PerspectiveSelect": {
    "prefix": "PolyBoostStruct.PerspectiveSelect",
    "body": "PolyBoostStruct.PerspectiveSelect",
    "description": "PerspectiveSelect from PolyBoostStruct"
  },
  "PolyBoostStruct.PolyDrawPickFilter": {
    "prefix": "PolyBoostStruct.PolyDrawPickFilter",
    "body": "PolyBoostStruct.PolyDrawPickFilter",
    "description": "PolyDrawPickFilter from PolyBoostStruct"
  },
  "PolyBoostStruct.PolyDrawPickNode": {
    "prefix": "PolyBoostStruct.PolyDrawPickNode",
    "body": "PolyBoostStruct.PolyDrawPickNode",
    "description": "PolyDrawPickNode from PolyBoostStruct"
  },
  "PolyBoostStruct.PolyDrawPicktext": {
    "prefix": "PolyBoostStruct.PolyDrawPicktext",
    "body": "PolyBoostStruct.PolyDrawPicktext",
    "description": "PolyDrawPicktext from PolyBoostStruct"
  },
  "PolyBoostStruct.PolyDrawStart": {
    "prefix": "PolyBoostStruct.PolyDrawStart",
    "body": "PolyBoostStruct.PolyDrawStart",
    "description": "PolyDrawStart from PolyBoostStruct"
  },
  "PolyBoostStruct.PolySculptStart": {
    "prefix": "PolyBoostStruct.PolySculptStart",
    "body": "PolyBoostStruct.PolySculptStart",
    "description": "PolySculptStart from PolyBoostStruct"
  },
  "PolyBoostStruct.PolyShiftStart": {
    "prefix": "PolyBoostStruct.PolyShiftStart",
    "body": "PolyBoostStruct.PolyShiftStart",
    "description": "PolyShiftStart from PolyBoostStruct"
  },
  "PolyBoostStruct.Quadrify": {
    "prefix": "PolyBoostStruct.Quadrify",
    "body": "PolyBoostStruct.Quadrify",
    "description": "Quadrify from PolyBoostStruct"
  },
  "PolyBoostStruct.Randconfunc": {
    "prefix": "PolyBoostStruct.Randconfunc",
    "body": "PolyBoostStruct.Randconfunc",
    "description": "Randconfunc from PolyBoostStruct"
  },
  "PolyBoostStruct.RandDfunc": {
    "prefix": "PolyBoostStruct.RandDfunc",
    "body": "PolyBoostStruct.RandDfunc",
    "description": "RandDfunc from PolyBoostStruct"
  },
  "PolyBoostStruct.RandomConnect": {
    "prefix": "PolyBoostStruct.RandomConnect",
    "body": "PolyBoostStruct.RandomConnect",
    "description": "RandomConnect from PolyBoostStruct"
  },
  "PolyBoostStruct.RANDOMSELECT": {
    "prefix": "PolyBoostStruct.RANDOMSELECT",
    "body": "PolyBoostStruct.RANDOMSELECT",
    "description": "RANDOMSELECT from PolyBoostStruct"
  },
  "PolyBoostStruct.Resetxfunc": {
    "prefix": "PolyBoostStruct.Resetxfunc",
    "body": "PolyBoostStruct.Resetxfunc",
    "description": "Resetxfunc from PolyBoostStruct"
  },
  "PolyBoostStruct.SelectedObj": {
    "prefix": "PolyBoostStruct.SelectedObj",
    "body": "PolyBoostStruct.SelectedObj",
    "description": "SelectedObj from PolyBoostStruct"
  },
  "PolyBoostStruct.SelStorage1": {
    "prefix": "PolyBoostStruct.SelStorage1",
    "body": "PolyBoostStruct.SelStorage1",
    "description": "SelStorage1 from PolyBoostStruct"
  },
  "PolyBoostStruct.SelStorage2": {
    "prefix": "PolyBoostStruct.SelStorage2",
    "body": "PolyBoostStruct.SelStorage2",
    "description": "SelStorage2 from PolyBoostStruct"
  },
  "PolyBoostStruct.SelStorage3": {
    "prefix": "PolyBoostStruct.SelStorage3",
    "body": "PolyBoostStruct.SelStorage3",
    "description": "SelStorage3 from PolyBoostStruct"
  },
  "PolyBoostStruct.SetFlow": {
    "prefix": "PolyBoostStruct.SetFlow",
    "body": "PolyBoostStruct.SetFlow",
    "description": "SetFlow from PolyBoostStruct"
  },
  "PolyBoostStruct.SetSizefunc": {
    "prefix": "PolyBoostStruct.SetSizefunc",
    "body": "PolyBoostStruct.SetSizefunc",
    "description": "SetSizefunc from PolyBoostStruct"
  },
  "PolyBoostStruct.Simifunc": {
    "prefix": "PolyBoostStruct.Simifunc",
    "body": "PolyBoostStruct.Simifunc",
    "description": "Simifunc from PolyBoostStruct"
  },
  "PolyBoostStruct.SimilarSelect": {
    "prefix": "PolyBoostStruct.SimilarSelect",
    "body": "PolyBoostStruct.SimilarSelect",
    "description": "SimilarSelect from PolyBoostStruct"
  },
  "PolyBoostStruct.SkinElement": {
    "prefix": "PolyBoostStruct.SkinElement",
    "body": "PolyBoostStruct.SkinElement",
    "description": "SkinElement from PolyBoostStruct"
  },
  "PolyBoostStruct.SkinGrow": {
    "prefix": "PolyBoostStruct.SkinGrow",
    "body": "PolyBoostStruct.SkinGrow",
    "description": "SkinGrow from PolyBoostStruct"
  },
  "PolyBoostStruct.SkinLoopRing": {
    "prefix": "PolyBoostStruct.SkinLoopRing",
    "body": "PolyBoostStruct.SkinLoopRing",
    "description": "SkinLoopRing from PolyBoostStruct"
  },
  "PolyBoostStruct.SkinShrink": {
    "prefix": "PolyBoostStruct.SkinShrink",
    "body": "PolyBoostStruct.SkinShrink",
    "description": "SkinShrink from PolyBoostStruct"
  },
  "PolyBoostStruct.SmartRotate": {
    "prefix": "PolyBoostStruct.SmartRotate",
    "body": "PolyBoostStruct.SmartRotate",
    "description": "SmartRotate from PolyBoostStruct"
  },
  "PolyBoostStruct.Smoothfunc": {
    "prefix": "PolyBoostStruct.Smoothfunc",
    "body": "PolyBoostStruct.Smoothfunc",
    "description": "Smoothfunc from PolyBoostStruct"
  },
  "PolyBoostStruct.SolveSurface": {
    "prefix": "PolyBoostStruct.SolveSurface",
    "body": "PolyBoostStruct.SolveSurface",
    "description": "SolveSurface from PolyBoostStruct"
  },
  "PolyBoostStruct.SpinnerChange": {
    "prefix": "PolyBoostStruct.SpinnerChange",
    "body": "PolyBoostStruct.SpinnerChange",
    "description": "SpinnerChange from PolyBoostStruct"
  },
  "PolyBoostStruct.Stepfunc": {
    "prefix": "PolyBoostStruct.Stepfunc",
    "body": "PolyBoostStruct.Stepfunc",
    "description": "Stepfunc from PolyBoostStruct"
  },
  "PolyBoostStruct.StepLast": {
    "prefix": "PolyBoostStruct.StepLast",
    "body": "PolyBoostStruct.StepLast",
    "description": "StepLast from PolyBoostStruct"
  },
  "PolyBoostStruct.StepLoopSelect": {
    "prefix": "PolyBoostStruct.StepLoopSelect",
    "body": "PolyBoostStruct.StepLoopSelect",
    "description": "StepLoopSelect from PolyBoostStruct"
  },
  "PolyBoostStruct.StepRun": {
    "prefix": "PolyBoostStruct.StepRun",
    "body": "PolyBoostStruct.StepRun",
    "description": "StepRun from PolyBoostStruct"
  },
  "PolyBoostStruct.StepSel": {
    "prefix": "PolyBoostStruct.StepSel",
    "body": "PolyBoostStruct.StepSel",
    "description": "StepSel from PolyBoostStruct"
  },
  "PolyBoostStruct.StoreApply": {
    "prefix": "PolyBoostStruct.StoreApply",
    "body": "PolyBoostStruct.StoreApply",
    "description": "StoreApply from PolyBoostStruct"
  },
  "PolyBoostStruct.Storefunc": {
    "prefix": "PolyBoostStruct.Storefunc",
    "body": "PolyBoostStruct.Storefunc",
    "description": "Storefunc from PolyBoostStruct"
  },
  "PolyBoostStruct.SubLevel": {
    "prefix": "PolyBoostStruct.SubLevel",
    "body": "PolyBoostStruct.SubLevel",
    "description": "SubLevel from PolyBoostStruct"
  },
  "PolyBoostStruct.SurfSelsel": {
    "prefix": "PolyBoostStruct.SurfSelsel",
    "body": "PolyBoostStruct.SurfSelsel",
    "description": "SurfSelsel from PolyBoostStruct"
  },
  "PolyBoostStruct.SymmetryD": {
    "prefix": "PolyBoostStruct.SymmetryD",
    "body": "PolyBoostStruct.SymmetryD",
    "description": "SymmetryD from PolyBoostStruct"
  },
  "PolyBoostStruct.TextureRollout": {
    "prefix": "PolyBoostStruct.TextureRollout",
    "body": "PolyBoostStruct.TextureRollout",
    "description": "TextureRollout from PolyBoostStruct"
  },
  "PolyBoostStruct.TextureToolsOpen": {
    "prefix": "PolyBoostStruct.TextureToolsOpen",
    "body": "PolyBoostStruct.TextureToolsOpen",
    "description": "TextureToolsOpen from PolyBoostStruct"
  },
  "PolyBoostStruct.TexWrapFile": {
    "prefix": "PolyBoostStruct.TexWrapFile",
    "body": "PolyBoostStruct.TexWrapFile",
    "description": "TexWrapFile from PolyBoostStruct"
  },
  "PolyBoostStruct.Thirtyfunc": {
    "prefix": "PolyBoostStruct.Thirtyfunc",
    "body": "PolyBoostStruct.Thirtyfunc",
    "description": "Thirtyfunc from PolyBoostStruct"
  },
  "PolyBoostStruct.ToolToggle": {
    "prefix": "PolyBoostStruct.ToolToggle",
    "body": "PolyBoostStruct.ToolToggle",
    "description": "ToolToggle from PolyBoostStruct"
  },
  "PolyBoostStruct.topology": {
    "prefix": "PolyBoostStruct.topology",
    "body": "PolyBoostStruct.topology",
    "description": "topology from PolyBoostStruct"
  },
  "PolyBoostStruct.TopsSelect": {
    "prefix": "PolyBoostStruct.TopsSelect",
    "body": "PolyBoostStruct.TopsSelect",
    "description": "TopsSelect from PolyBoostStruct"
  },
  "PolyBoostStruct.TransformDialogOpen": {
    "prefix": "PolyBoostStruct.TransformDialogOpen",
    "body": "PolyBoostStruct.TransformDialogOpen",
    "description": "TransformDialogOpen from PolyBoostStruct"
  },
  "PolyBoostStruct.TransformRollout": {
    "prefix": "PolyBoostStruct.TransformRollout",
    "body": "PolyBoostStruct.TransformRollout",
    "description": "TransformRollout from PolyBoostStruct"
  },
  "PolyBoostStruct.UV_ToUvfunc": {
    "prefix": "PolyBoostStruct.UV_ToUvfunc",
    "body": "PolyBoostStruct.UV_ToUvfunc",
    "description": "UV_ToUvfunc from PolyBoostStruct"
  },
  "PolyBoostStruct.UVtweakgo": {
    "prefix": "PolyBoostStruct.UVtweakgo",
    "body": "PolyBoostStruct.UVtweakgo",
    "description": "UVtweakgo from PolyBoostStruct"
  },
  "PolyBoostStruct.UVWTweakStart": {
    "prefix": "PolyBoostStruct.UVWTweakStart",
    "body": "PolyBoostStruct.UVWTweakStart",
    "description": "UVWTweakStart from PolyBoostStruct"
  },
  "PolyBoostStruct.validClothmod": {
    "prefix": "PolyBoostStruct.validClothmod",
    "body": "PolyBoostStruct.validClothmod",
    "description": "validClothmod from PolyBoostStruct"
  },
  "PolyBoostStruct.validEPbasemacro": {
    "prefix": "PolyBoostStruct.validEPbasemacro",
    "body": "PolyBoostStruct.validEPbasemacro",
    "description": "validEPbasemacro from PolyBoostStruct"
  },
  "PolyBoostStruct.validEPmacro": {
    "prefix": "PolyBoostStruct.validEPmacro",
    "body": "PolyBoostStruct.validEPmacro",
    "description": "validEPmacro from PolyBoostStruct"
  },
  "PolyBoostStruct.validobjfunc": {
    "prefix": "PolyBoostStruct.validobjfunc",
    "body": "PolyBoostStruct.validobjfunc",
    "description": "validobjfunc from PolyBoostStruct"
  },
  "PolyBoostStruct.validSkinMod": {
    "prefix": "PolyBoostStruct.validSkinMod",
    "body": "PolyBoostStruct.validSkinMod",
    "description": "validSkinMod from PolyBoostStruct"
  },
  "PolyBoostStruct.validUV": {
    "prefix": "PolyBoostStruct.validUV",
    "body": "PolyBoostStruct.validUV",
    "description": "validUV from PolyBoostStruct"
  },
  "PolyBoostStruct.validUV2": {
    "prefix": "PolyBoostStruct.validUV2",
    "body": "PolyBoostStruct.validUV2",
    "description": "validUV2 from PolyBoostStruct"
  },
  "PolyBoostStruct.validUVlevel": {
    "prefix": "PolyBoostStruct.validUVlevel",
    "body": "PolyBoostStruct.validUVlevel",
    "description": "validUVlevel from PolyBoostStruct"
  },
  "PolyBoostStruct.vertexTicks": {
    "prefix": "PolyBoostStruct.vertexTicks",
    "body": "PolyBoostStruct.vertexTicks",
    "description": "vertexTicks from PolyBoostStruct"
  },
  "PolyBoostStruct.ViewportCanvasOpen": {
    "prefix": "PolyBoostStruct.ViewportCanvasOpen",
    "body": "PolyBoostStruct.ViewportCanvasOpen",
    "description": "ViewportCanvasOpen from PolyBoostStruct"
  },
  "polyop.applyUVWMap": {
    "prefix": "polyop.applyUVWMap",
    "body": "polyop.applyUVWMap",
    "description": "applyUVWMap from polyop"
  },
  "polyop.attach": {
    "prefix": "polyop.attach",
    "body": "polyop.attach",
    "description": "attach from polyop"
  },
  "polyop.autosmooth": {
    "prefix": "polyop.autosmooth",
    "body": "polyop.autosmooth",
    "description": "autosmooth from polyop"
  },
  "polyop.bevelFaces": {
    "prefix": "polyop.bevelFaces",
    "body": "polyop.bevelFaces",
    "description": "bevelFaces from polyop"
  },
  "polyop.breakVerts": {
    "prefix": "polyop.breakVerts",
    "body": "polyop.breakVerts",
    "description": "breakVerts from polyop"
  },
  "polyop.capHolesByEdge": {
    "prefix": "polyop.capHolesByEdge",
    "body": "polyop.capHolesByEdge",
    "description": "capHolesByEdge from polyop"
  },
  "polyop.capHolesByFace": {
    "prefix": "polyop.capHolesByFace",
    "body": "polyop.capHolesByFace",
    "description": "capHolesByFace from polyop"
  },
  "polyop.capHolesByVert": {
    "prefix": "polyop.capHolesByVert",
    "body": "polyop.capHolesByVert",
    "description": "capHolesByVert from polyop"
  },
  "polyop.chamferEdges": {
    "prefix": "polyop.chamferEdges",
    "body": "polyop.chamferEdges",
    "description": "chamferEdges from polyop"
  },
  "polyop.chamferVerts": {
    "prefix": "polyop.chamferVerts",
    "body": "polyop.chamferVerts",
    "description": "chamferVerts from polyop"
  },
  "polyop.collapseDeadStructs": {
    "prefix": "polyop.collapseDeadStructs",
    "body": "polyop.collapseDeadStructs",
    "description": "collapseDeadStructs from polyop"
  },
  "polyop.collapseEdges": {
    "prefix": "polyop.collapseEdges",
    "body": "polyop.collapseEdges",
    "description": "collapseEdges from polyop"
  },
  "polyop.collapseFaces": {
    "prefix": "polyop.collapseFaces",
    "body": "polyop.collapseFaces",
    "description": "collapseFaces from polyop"
  },
  "polyop.collapseVerts": {
    "prefix": "polyop.collapseVerts",
    "body": "polyop.collapseVerts",
    "description": "collapseVerts from polyop"
  },
  "polyop.createEdge": {
    "prefix": "polyop.createEdge",
    "body": "polyop.createEdge",
    "description": "createEdge from polyop"
  },
  "polyop.createPolygon": {
    "prefix": "polyop.createPolygon",
    "body": "polyop.createPolygon",
    "description": "createPolygon from polyop"
  },
  "polyop.createShape": {
    "prefix": "polyop.createShape",
    "body": "polyop.createShape",
    "description": "createShape from polyop"
  },
  "polyop.createVert": {
    "prefix": "polyop.createVert",
    "body": "polyop.createVert",
    "description": "createVert from polyop"
  },
  "polyop.cutEdge": {
    "prefix": "polyop.cutEdge",
    "body": "polyop.cutEdge",
    "description": "cutEdge from polyop"
  },
  "polyop.cutFace": {
    "prefix": "polyop.cutFace",
    "body": "polyop.cutFace",
    "description": "cutFace from polyop"
  },
  "polyop.cutVert": {
    "prefix": "polyop.cutVert",
    "body": "polyop.cutVert",
    "description": "cutVert from polyop"
  },
  "polyop.defaultMapFaces": {
    "prefix": "polyop.defaultMapFaces",
    "body": "polyop.defaultMapFaces",
    "description": "defaultMapFaces from polyop"
  },
  "polyop.deleteEdges": {
    "prefix": "polyop.deleteEdges",
    "body": "polyop.deleteEdges",
    "description": "deleteEdges from polyop"
  },
  "polyop.deleteFaces": {
    "prefix": "polyop.deleteFaces",
    "body": "polyop.deleteFaces",
    "description": "deleteFaces from polyop"
  },
  "polyop.deleteIsoVerts": {
    "prefix": "polyop.deleteIsoVerts",
    "body": "polyop.deleteIsoVerts",
    "description": "deleteIsoVerts from polyop"
  },
  "polyop.deleteVerts": {
    "prefix": "polyop.deleteVerts",
    "body": "polyop.deleteVerts",
    "description": "deleteVerts from polyop"
  },
  "polyop.detachEdges": {
    "prefix": "polyop.detachEdges",
    "body": "polyop.detachEdges",
    "description": "detachEdges from polyop"
  },
  "polyop.detachFaces": {
    "prefix": "polyop.detachFaces",
    "body": "polyop.detachFaces",
    "description": "detachFaces from polyop"
  },
  "polyop.detachVerts": {
    "prefix": "polyop.detachVerts",
    "body": "polyop.detachVerts",
    "description": "detachVerts from polyop"
  },
  "polyop.divideEdge": {
    "prefix": "polyop.divideEdge",
    "body": "polyop.divideEdge",
    "description": "divideEdge from polyop"
  },
  "polyop.divideFace": {
    "prefix": "polyop.divideFace",
    "body": "polyop.divideFace",
    "description": "divideFace from polyop"
  },
  "polyop.extrudeFaces": {
    "prefix": "polyop.extrudeFaces",
    "body": "polyop.extrudeFaces",
    "description": "extrudeFaces from polyop"
  },
  "polyop.fillInMesh": {
    "prefix": "polyop.fillInMesh",
    "body": "polyop.fillInMesh",
    "description": "fillInMesh from polyop"
  },
  "polyop.flipNormals": {
    "prefix": "polyop.flipNormals",
    "body": "polyop.flipNormals",
    "description": "flipNormals from polyop"
  },
  "polyop.forceSubdivision": {
    "prefix": "polyop.forceSubdivision",
    "body": "polyop.forceSubdivision",
    "description": "forceSubdivision from polyop"
  },
  "polyop.freeEData": {
    "prefix": "polyop.freeEData",
    "body": "polyop.freeEData",
    "description": "freeEData from polyop"
  },
  "polyop.freeVData": {
    "prefix": "polyop.freeVData",
    "body": "polyop.freeVData",
    "description": "freeVData from polyop"
  },
  "polyop.getBorderFromEdge": {
    "prefix": "polyop.getBorderFromEdge",
    "body": "polyop.getBorderFromEdge",
    "description": "getBorderFromEdge from polyop"
  },
  "polyop.getDeadEdges": {
    "prefix": "polyop.getDeadEdges",
    "body": "polyop.getDeadEdges",
    "description": "getDeadEdges from polyop"
  },
  "polyop.getDeadFaces": {
    "prefix": "polyop.getDeadFaces",
    "body": "polyop.getDeadFaces",
    "description": "getDeadFaces from polyop"
  },
  "polyop.getDeadVerts": {
    "prefix": "polyop.getDeadVerts",
    "body": "polyop.getDeadVerts",
    "description": "getDeadVerts from polyop"
  },
  "polyop.getEDataChannelSupport": {
    "prefix": "polyop.getEDataChannelSupport",
    "body": "polyop.getEDataChannelSupport",
    "description": "getEDataChannelSupport from polyop"
  },
  "polyop.getEDataValue": {
    "prefix": "polyop.getEDataValue",
    "body": "polyop.getEDataValue",
    "description": "getEDataValue from polyop"
  },
  "polyop.getEdgeFaces": {
    "prefix": "polyop.getEdgeFaces",
    "body": "polyop.getEdgeFaces",
    "description": "getEdgeFaces from polyop"
  },
  "polyop.getEdgeFlags": {
    "prefix": "polyop.getEdgeFlags",
    "body": "polyop.getEdgeFlags",
    "description": "getEdgeFlags from polyop"
  },
  "polyop.getEdgesByFlag": {
    "prefix": "polyop.getEdgesByFlag",
    "body": "polyop.getEdgesByFlag",
    "description": "getEdgesByFlag from polyop"
  },
  "polyop.getEdgeSelection": {
    "prefix": "polyop.getEdgeSelection",
    "body": "polyop.getEdgeSelection",
    "description": "getEdgeSelection from polyop"
  },
  "polyop.getEdgesUsingFace": {
    "prefix": "polyop.getEdgesUsingFace",
    "body": "polyop.getEdgesUsingFace",
    "description": "getEdgesUsingFace from polyop"
  },
  "polyop.getEdgesUsingVert": {
    "prefix": "polyop.getEdgesUsingVert",
    "body": "polyop.getEdgesUsingVert",
    "description": "getEdgesUsingVert from polyop"
  },
  "polyop.getEdgeVerts": {
    "prefix": "polyop.getEdgeVerts",
    "body": "polyop.getEdgeVerts",
    "description": "getEdgeVerts from polyop"
  },
  "polyop.getEdgeVis": {
    "prefix": "polyop.getEdgeVis",
    "body": "polyop.getEdgeVis",
    "description": "getEdgeVis from polyop"
  },
  "polyop.getElementsUsingFace": {
    "prefix": "polyop.getElementsUsingFace",
    "body": "polyop.getElementsUsingFace",
    "description": "getElementsUsingFace from polyop"
  },
  "polyop.getFaceArea": {
    "prefix": "polyop.getFaceArea",
    "body": "polyop.getFaceArea",
    "description": "getFaceArea from polyop"
  },
  "polyop.getFaceCenter": {
    "prefix": "polyop.getFaceCenter",
    "body": "polyop.getFaceCenter",
    "description": "getFaceCenter from polyop"
  },
  "polyop.getFaceDeg": {
    "prefix": "polyop.getFaceDeg",
    "body": "polyop.getFaceDeg",
    "description": "getFaceDeg from polyop"
  },
  "polyop.getFaceEdges": {
    "prefix": "polyop.getFaceEdges",
    "body": "polyop.getFaceEdges",
    "description": "getFaceEdges from polyop"
  },
  "polyop.getFaceFlags": {
    "prefix": "polyop.getFaceFlags",
    "body": "polyop.getFaceFlags",
    "description": "getFaceFlags from polyop"
  },
  "polyop.getFaceMatID": {
    "prefix": "polyop.getFaceMatID",
    "body": "polyop.getFaceMatID",
    "description": "getFaceMatID from polyop"
  },
  "polyop.getFaceNormal": {
    "prefix": "polyop.getFaceNormal",
    "body": "polyop.getFaceNormal",
    "description": "getFaceNormal from polyop"
  },
  "polyop.getFacesByFlag": {
    "prefix": "polyop.getFacesByFlag",
    "body": "polyop.getFacesByFlag",
    "description": "getFacesByFlag from polyop"
  },
  "polyop.getFaceSelection": {
    "prefix": "polyop.getFaceSelection",
    "body": "polyop.getFaceSelection",
    "description": "getFaceSelection from polyop"
  },
  "polyop.getFaceSmoothGroup": {
    "prefix": "polyop.getFaceSmoothGroup",
    "body": "polyop.getFaceSmoothGroup",
    "description": "getFaceSmoothGroup from polyop"
  },
  "polyop.getFacesUsingEdge": {
    "prefix": "polyop.getFacesUsingEdge",
    "body": "polyop.getFacesUsingEdge",
    "description": "getFacesUsingEdge from polyop"
  },
  "polyop.getFacesUsingVert": {
    "prefix": "polyop.getFacesUsingVert",
    "body": "polyop.getFacesUsingVert",
    "description": "getFacesUsingVert from polyop"
  },
  "polyop.getFaceVerts": {
    "prefix": "polyop.getFaceVerts",
    "body": "polyop.getFaceVerts",
    "description": "getFaceVerts from polyop"
  },
  "polyop.getHasDeadStructs": {
    "prefix": "polyop.getHasDeadStructs",
    "body": "polyop.getHasDeadStructs",
    "description": "getHasDeadStructs from polyop"
  },
  "polyop.getHiddenFaces": {
    "prefix": "polyop.getHiddenFaces",
    "body": "polyop.getHiddenFaces",
    "description": "getHiddenFaces from polyop"
  },
  "polyop.getHiddenVerts": {
    "prefix": "polyop.getHiddenVerts",
    "body": "polyop.getHiddenVerts",
    "description": "getHiddenVerts from polyop"
  },
  "polyop.getMapFace": {
    "prefix": "polyop.getMapFace",
    "body": "polyop.getMapFace",
    "description": "getMapFace from polyop"
  },
  "polyop.getMapSupport": {
    "prefix": "polyop.getMapSupport",
    "body": "polyop.getMapSupport",
    "description": "getMapSupport from polyop"
  },
  "polyop.getMapVert": {
    "prefix": "polyop.getMapVert",
    "body": "polyop.getMapVert",
    "description": "getMapVert from polyop"
  },
  "polyop.getNumEDataChannels": {
    "prefix": "polyop.getNumEDataChannels",
    "body": "polyop.getNumEDataChannels",
    "description": "getNumEDataChannels from polyop"
  },
  "polyop.getNumEdges": {
    "prefix": "polyop.getNumEdges",
    "body": "polyop.getNumEdges",
    "description": "getNumEdges from polyop"
  },
  "polyop.getNumFaces": {
    "prefix": "polyop.getNumFaces",
    "body": "polyop.getNumFaces",
    "description": "getNumFaces from polyop"
  },
  "polyop.getNumMapFaces": {
    "prefix": "polyop.getNumMapFaces",
    "body": "polyop.getNumMapFaces",
    "description": "getNumMapFaces from polyop"
  },
  "polyop.getNumMaps": {
    "prefix": "polyop.getNumMaps",
    "body": "polyop.getNumMaps",
    "description": "getNumMaps from polyop"
  },
  "polyop.getNumMapVerts": {
    "prefix": "polyop.getNumMapVerts",
    "body": "polyop.getNumMapVerts",
    "description": "getNumMapVerts from polyop"
  },
  "polyop.getNumVDataChannels": {
    "prefix": "polyop.getNumVDataChannels",
    "body": "polyop.getNumVDataChannels",
    "description": "getNumVDataChannels from polyop"
  },
  "polyop.getNumVerts": {
    "prefix": "polyop.getNumVerts",
    "body": "polyop.getNumVerts",
    "description": "getNumVerts from polyop"
  },
  "polyop.getOpenEdges": {
    "prefix": "polyop.getOpenEdges",
    "body": "polyop.getOpenEdges",
    "description": "getOpenEdges from polyop"
  },
  "polyop.getSafeFaceCenter": {
    "prefix": "polyop.getSafeFaceCenter",
    "body": "polyop.getSafeFaceCenter",
    "description": "getSafeFaceCenter from polyop"
  },
  "polyop.getSlicePlane": {
    "prefix": "polyop.getSlicePlane",
    "body": "polyop.getSlicePlane",
    "description": "getSlicePlane from polyop"
  },
  "polyop.getVDataChannelSupport": {
    "prefix": "polyop.getVDataChannelSupport",
    "body": "polyop.getVDataChannelSupport",
    "description": "getVDataChannelSupport from polyop"
  },
  "polyop.getVDataValue": {
    "prefix": "polyop.getVDataValue",
    "body": "polyop.getVDataValue",
    "description": "getVDataValue from polyop"
  },
  "polyop.getVert": {
    "prefix": "polyop.getVert",
    "body": "polyop.getVert",
    "description": "getVert from polyop"
  },
  "polyop.getVertFlags": {
    "prefix": "polyop.getVertFlags",
    "body": "polyop.getVertFlags",
    "description": "getVertFlags from polyop"
  },
  "polyop.getVertsByColor": {
    "prefix": "polyop.getVertsByColor",
    "body": "polyop.getVertsByColor",
    "description": "getVertsByColor from polyop"
  },
  "polyop.getVertsByFlag": {
    "prefix": "polyop.getVertsByFlag",
    "body": "polyop.getVertsByFlag",
    "description": "getVertsByFlag from polyop"
  },
  "polyop.getVertSelection": {
    "prefix": "polyop.getVertSelection",
    "body": "polyop.getVertSelection",
    "description": "getVertSelection from polyop"
  },
  "polyop.getVertsUsedOnlyByFaces": {
    "prefix": "polyop.getVertsUsedOnlyByFaces",
    "body": "polyop.getVertsUsedOnlyByFaces",
    "description": "getVertsUsedOnlyByFaces from polyop"
  },
  "polyop.getVertsUsingEdge": {
    "prefix": "polyop.getVertsUsingEdge",
    "body": "polyop.getVertsUsingEdge",
    "description": "getVertsUsingEdge from polyop"
  },
  "polyop.getVertsUsingFace": {
    "prefix": "polyop.getVertsUsingFace",
    "body": "polyop.getVertsUsingFace",
    "description": "getVertsUsingFace from polyop"
  },
  "polyop.inSlicePlaneMode": {
    "prefix": "polyop.inSlicePlaneMode",
    "body": "polyop.inSlicePlaneMode",
    "description": "inSlicePlaneMode from polyop"
  },
  "polyop.isEdgeDead": {
    "prefix": "polyop.isEdgeDead",
    "body": "polyop.isEdgeDead",
    "description": "isEdgeDead from polyop"
  },
  "polyop.isFaceDead": {
    "prefix": "polyop.isFaceDead",
    "body": "polyop.isFaceDead",
    "description": "isFaceDead from polyop"
  },
  "polyop.isMeshFilledIn": {
    "prefix": "polyop.isMeshFilledIn",
    "body": "polyop.isMeshFilledIn",
    "description": "isMeshFilledIn from polyop"
  },
  "polyop.isVertDead": {
    "prefix": "polyop.isVertDead",
    "body": "polyop.isVertDead",
    "description": "isVertDead from polyop"
  },
  "polyop.makeEdgesPlanar": {
    "prefix": "polyop.makeEdgesPlanar",
    "body": "polyop.makeEdgesPlanar",
    "description": "makeEdgesPlanar from polyop"
  },
  "polyop.makeFacesPlanar": {
    "prefix": "polyop.makeFacesPlanar",
    "body": "polyop.makeFacesPlanar",
    "description": "makeFacesPlanar from polyop"
  },
  "polyop.makeVertsPlanar": {
    "prefix": "polyop.makeVertsPlanar",
    "body": "polyop.makeVertsPlanar",
    "description": "makeVertsPlanar from polyop"
  },
  "polyop.meshSmoothByEdge": {
    "prefix": "polyop.meshSmoothByEdge",
    "body": "polyop.meshSmoothByEdge",
    "description": "meshSmoothByEdge from polyop"
  },
  "polyop.meshSmoothByFace": {
    "prefix": "polyop.meshSmoothByFace",
    "body": "polyop.meshSmoothByFace",
    "description": "meshSmoothByFace from polyop"
  },
  "polyop.meshSmoothByVert": {
    "prefix": "polyop.meshSmoothByVert",
    "body": "polyop.meshSmoothByVert",
    "description": "meshSmoothByVert from polyop"
  },
  "polyop.moveEdgesToPlane": {
    "prefix": "polyop.moveEdgesToPlane",
    "body": "polyop.moveEdgesToPlane",
    "description": "moveEdgesToPlane from polyop"
  },
  "polyop.moveFacesToPlane": {
    "prefix": "polyop.moveFacesToPlane",
    "body": "polyop.moveFacesToPlane",
    "description": "moveFacesToPlane from polyop"
  },
  "polyop.moveVert": {
    "prefix": "polyop.moveVert",
    "body": "polyop.moveVert",
    "description": "moveVert from polyop"
  },
  "polyop.moveVertsToPlane": {
    "prefix": "polyop.moveVertsToPlane",
    "body": "polyop.moveVertsToPlane",
    "description": "moveVertsToPlane from polyop"
  },
  "polyop.propagateFlags": {
    "prefix": "polyop.propagateFlags",
    "body": "polyop.propagateFlags",
    "description": "propagateFlags from polyop"
  },
  "polyop.resetEData": {
    "prefix": "polyop.resetEData",
    "body": "polyop.resetEData",
    "description": "resetEData from polyop"
  },
  "polyop.resetSlicePlane": {
    "prefix": "polyop.resetSlicePlane",
    "body": "polyop.resetSlicePlane",
    "description": "resetSlicePlane from polyop"
  },
  "polyop.resetVData": {
    "prefix": "polyop.resetVData",
    "body": "polyop.resetVData",
    "description": "resetVData from polyop"
  },
  "polyop.retriangulate": {
    "prefix": "polyop.retriangulate",
    "body": "polyop.retriangulate",
    "description": "retriangulate from polyop"
  },
  "polyop.setDiagonal": {
    "prefix": "polyop.setDiagonal",
    "body": "polyop.setDiagonal",
    "description": "setDiagonal from polyop"
  },
  "polyop.setEDataChannelSupport": {
    "prefix": "polyop.setEDataChannelSupport",
    "body": "polyop.setEDataChannelSupport",
    "description": "setEDataChannelSupport from polyop"
  },
  "polyop.setEDataValue": {
    "prefix": "polyop.setEDataValue",
    "body": "polyop.setEDataValue",
    "description": "setEDataValue from polyop"
  },
  "polyop.setEdgeFlags": {
    "prefix": "polyop.setEdgeFlags",
    "body": "polyop.setEdgeFlags",
    "description": "setEdgeFlags from polyop"
  },
  "polyop.setEdgeSelection": {
    "prefix": "polyop.setEdgeSelection",
    "body": "polyop.setEdgeSelection",
    "description": "setEdgeSelection from polyop"
  },
  "polyop.setEdgeVis": {
    "prefix": "polyop.setEdgeVis",
    "body": "polyop.setEdgeVis",
    "description": "setEdgeVis from polyop"
  },
  "polyop.setFaceColor": {
    "prefix": "polyop.setFaceColor",
    "body": "polyop.setFaceColor",
    "description": "setFaceColor from polyop"
  },
  "polyop.setFaceFlags": {
    "prefix": "polyop.setFaceFlags",
    "body": "polyop.setFaceFlags",
    "description": "setFaceFlags from polyop"
  },
  "polyop.setFaceMatID": {
    "prefix": "polyop.setFaceMatID",
    "body": "polyop.setFaceMatID",
    "description": "setFaceMatID from polyop"
  },
  "polyop.setFaceSelection": {
    "prefix": "polyop.setFaceSelection",
    "body": "polyop.setFaceSelection",
    "description": "setFaceSelection from polyop"
  },
  "polyop.setFaceSmoothGroup": {
    "prefix": "polyop.setFaceSmoothGroup",
    "body": "polyop.setFaceSmoothGroup",
    "description": "setFaceSmoothGroup from polyop"
  },
  "polyop.setHiddenFaces": {
    "prefix": "polyop.setHiddenFaces",
    "body": "polyop.setHiddenFaces",
    "description": "setHiddenFaces from polyop"
  },
  "polyop.setMapFace": {
    "prefix": "polyop.setMapFace",
    "body": "polyop.setMapFace",
    "description": "setMapFace from polyop"
  },
  "polyop.setMapSupport": {
    "prefix": "polyop.setMapSupport",
    "body": "polyop.setMapSupport",
    "description": "setMapSupport from polyop"
  },
  "polyop.setMapVert": {
    "prefix": "polyop.setMapVert",
    "body": "polyop.setMapVert",
    "description": "setMapVert from polyop"
  },
  "polyop.setNumEDataChannels": {
    "prefix": "polyop.setNumEDataChannels",
    "body": "polyop.setNumEDataChannels",
    "description": "setNumEDataChannels from polyop"
  },
  "polyop.setNumMapFaces": {
    "prefix": "polyop.setNumMapFaces",
    "body": "polyop.setNumMapFaces",
    "description": "setNumMapFaces from polyop"
  },
  "polyop.setNumMaps": {
    "prefix": "polyop.setNumMaps",
    "body": "polyop.setNumMaps",
    "description": "setNumMaps from polyop"
  },
  "polyop.setNumMapVerts": {
    "prefix": "polyop.setNumMapVerts",
    "body": "polyop.setNumMapVerts",
    "description": "setNumMapVerts from polyop"
  },
  "polyop.setNumVDataChannels": {
    "prefix": "polyop.setNumVDataChannels",
    "body": "polyop.setNumVDataChannels",
    "description": "setNumVDataChannels from polyop"
  },
  "polyop.setSlicePlane": {
    "prefix": "polyop.setSlicePlane",
    "body": "polyop.setSlicePlane",
    "description": "setSlicePlane from polyop"
  },
  "polyop.setVDataChannelSupport": {
    "prefix": "polyop.setVDataChannelSupport",
    "body": "polyop.setVDataChannelSupport",
    "description": "setVDataChannelSupport from polyop"
  },
  "polyop.setVDataValue": {
    "prefix": "polyop.setVDataValue",
    "body": "polyop.setVDataValue",
    "description": "setVDataValue from polyop"
  },
  "polyop.setVert": {
    "prefix": "polyop.setVert",
    "body": "polyop.setVert",
    "description": "setVert from polyop"
  },
  "polyop.setVertColor": {
    "prefix": "polyop.setVertColor",
    "body": "polyop.setVertColor",
    "description": "setVertColor from polyop"
  },
  "polyop.setVertFlags": {
    "prefix": "polyop.setVertFlags",
    "body": "polyop.setVertFlags",
    "description": "setVertFlags from polyop"
  },
  "polyop.setVertSelection": {
    "prefix": "polyop.setVertSelection",
    "body": "polyop.setVertSelection",
    "description": "setVertSelection from polyop"
  },
  "polyop.slice": {
    "prefix": "polyop.slice",
    "body": "polyop.slice",
    "description": "slice from polyop"
  },
  "polyop.splitEdges": {
    "prefix": "polyop.splitEdges",
    "body": "polyop.splitEdges",
    "description": "splitEdges from polyop"
  },
  "polyop.tessellateByEdge": {
    "prefix": "polyop.tessellateByEdge",
    "body": "polyop.tessellateByEdge",
    "description": "tessellateByEdge from polyop"
  },
  "polyop.tessellateByFace": {
    "prefix": "polyop.tessellateByFace",
    "body": "polyop.tessellateByFace",
    "description": "tessellateByFace from polyop"
  },
  "polyop.tessellateByVert": {
    "prefix": "polyop.tessellateByVert",
    "body": "polyop.tessellateByVert",
    "description": "tessellateByVert from polyop"
  },
  "polyop.unHideAllFaces": {
    "prefix": "polyop.unHideAllFaces",
    "body": "polyop.unHideAllFaces",
    "description": "unHideAllFaces from polyop"
  },
  "polyop.unHideAllVerts": {
    "prefix": "polyop.unHideAllVerts",
    "body": "polyop.unHideAllVerts",
    "description": "unHideAllVerts from polyop"
  },
  "polyop.weldEdges": {
    "prefix": "polyop.weldEdges",
    "body": "polyop.weldEdges",
    "description": "weldEdges from polyop"
  },
  "polyop.weldEdgesByThreshold": {
    "prefix": "polyop.weldEdgesByThreshold",
    "body": "polyop.weldEdgesByThreshold",
    "description": "weldEdgesByThreshold from polyop"
  },
  "polyop.weldVerts": {
    "prefix": "polyop.weldVerts",
    "body": "polyop.weldVerts",
    "description": "weldVerts from polyop"
  },
  "polyop.weldVertsByThreshold": {
    "prefix": "polyop.weldVertsByThreshold",
    "body": "polyop.weldVertsByThreshold",
    "description": "weldVertsByThreshold from polyop"
  },
  "polyOps.attachList": {
    "prefix": "polyOps.attachList",
    "body": "polyOps.attachList",
    "description": "attachList from polyOps"
  },
  "polyOps.autosmooth": {
    "prefix": "polyOps.autosmooth",
    "body": "polyOps.autosmooth",
    "description": "autosmooth from polyOps"
  },
  "polyOps.break": {
    "prefix": "polyOps.break",
    "body": "polyOps.break",
    "description": "break from polyOps"
  },
  "polyOps.cap": {
    "prefix": "polyOps.cap",
    "body": "polyOps.cap",
    "description": "cap from polyOps"
  },
  "polyOps.clearAllSG": {
    "prefix": "polyOps.clearAllSG",
    "body": "polyOps.clearAllSG",
    "description": "clearAllSG from polyOps"
  },
  "polyOps.collapse": {
    "prefix": "polyOps.collapse",
    "body": "polyOps.collapse",
    "description": "collapse from polyOps"
  },
  "polyOps.createShapeFromEdges": {
    "prefix": "polyOps.createShapeFromEdges",
    "body": "polyOps.createShapeFromEdges",
    "description": "createShapeFromEdges from polyOps"
  },
  "polyOps.delete": {
    "prefix": "polyOps.delete",
    "body": "polyOps.delete",
    "description": "delete from polyOps"
  },
  "polyOps.detach": {
    "prefix": "polyOps.detach",
    "body": "polyOps.detach",
    "description": "detach from polyOps"
  },
  "polyOps.flipNormal": {
    "prefix": "polyOps.flipNormal",
    "body": "polyOps.flipNormal",
    "description": "flipNormal from polyOps"
  },
  "polyOps.gridAlign": {
    "prefix": "polyOps.gridAlign",
    "body": "polyOps.gridAlign",
    "description": "gridAlign from polyOps"
  },
  "polyOps.hide": {
    "prefix": "polyOps.hide",
    "body": "polyOps.hide",
    "description": "hide from polyOps"
  },
  "polyOps.makePlanar": {
    "prefix": "polyOps.makePlanar",
    "body": "polyOps.makePlanar",
    "description": "makePlanar from polyOps"
  },
  "polyOps.meshsmooth": {
    "prefix": "polyOps.meshsmooth",
    "body": "polyOps.meshsmooth",
    "description": "meshsmooth from polyOps"
  },
  "polyOps.NamedSelPaste": {
    "prefix": "polyOps.NamedSelPaste",
    "body": "polyOps.NamedSelPaste",
    "description": "NamedSelPaste from polyOps"
  },
  "polyOps.removeIsolatedVerts": {
    "prefix": "polyOps.removeIsolatedVerts",
    "body": "polyOps.removeIsolatedVerts",
    "description": "removeIsolatedVerts from polyOps"
  },
  "polyOps.resetPlane": {
    "prefix": "polyOps.resetPlane",
    "body": "polyOps.resetPlane",
    "description": "resetPlane from polyOps"
  },
  "polyOps.retriangulate": {
    "prefix": "polyOps.retriangulate",
    "body": "polyOps.retriangulate",
    "description": "retriangulate from polyOps"
  },
  "polyOps.selectByColor": {
    "prefix": "polyOps.selectByColor",
    "body": "polyOps.selectByColor",
    "description": "selectByColor from polyOps"
  },
  "polyOps.selectByID": {
    "prefix": "polyOps.selectByID",
    "body": "polyOps.selectByID",
    "description": "selectByID from polyOps"
  },
  "polyOps.selectBySG": {
    "prefix": "polyOps.selectBySG",
    "body": "polyOps.selectBySG",
    "description": "selectBySG from polyOps"
  },
  "polyOps.slice": {
    "prefix": "polyOps.slice",
    "body": "polyOps.slice",
    "description": "slice from polyOps"
  },
  "polyOps.split": {
    "prefix": "polyOps.split",
    "body": "polyOps.split",
    "description": "split from polyOps"
  },
  "polyOps.startBevel": {
    "prefix": "polyOps.startBevel",
    "body": "polyOps.startBevel",
    "description": "startBevel from polyOps"
  },
  "polyOps.startChamferEdge": {
    "prefix": "polyOps.startChamferEdge",
    "body": "polyOps.startChamferEdge",
    "description": "startChamferEdge from polyOps"
  },
  "polyOps.startChamferVertex": {
    "prefix": "polyOps.startChamferVertex",
    "body": "polyOps.startChamferVertex",
    "description": "startChamferVertex from polyOps"
  },
  "polyOps.startCreateEdge": {
    "prefix": "polyOps.startCreateEdge",
    "body": "polyOps.startCreateEdge",
    "description": "startCreateEdge from polyOps"
  },
  "polyOps.startCreateFace": {
    "prefix": "polyOps.startCreateFace",
    "body": "polyOps.startCreateFace",
    "description": "startCreateFace from polyOps"
  },
  "polyOps.startCreateVertex": {
    "prefix": "polyOps.startCreateVertex",
    "body": "polyOps.startCreateVertex",
    "description": "startCreateVertex from polyOps"
  },
  "polyOps.startCutEdge": {
    "prefix": "polyOps.startCutEdge",
    "body": "polyOps.startCutEdge",
    "description": "startCutEdge from polyOps"
  },
  "polyOps.startCutFace": {
    "prefix": "polyOps.startCutFace",
    "body": "polyOps.startCutFace",
    "description": "startCutFace from polyOps"
  },
  "polyOps.startCutVertex": {
    "prefix": "polyOps.startCutVertex",
    "body": "polyOps.startCutVertex",
    "description": "startCutVertex from polyOps"
  },
  "polyOps.startDivideEdge": {
    "prefix": "polyOps.startDivideEdge",
    "body": "polyOps.startDivideEdge",
    "description": "startDivideEdge from polyOps"
  },
  "polyOps.startDivideFace": {
    "prefix": "polyOps.startDivideFace",
    "body": "polyOps.startDivideFace",
    "description": "startDivideFace from polyOps"
  },
  "polyOps.startEditTri": {
    "prefix": "polyOps.startEditTri",
    "body": "polyOps.startEditTri",
    "description": "startEditTri from polyOps"
  },
  "polyOps.startExtrudeEdge": {
    "prefix": "polyOps.startExtrudeEdge",
    "body": "polyOps.startExtrudeEdge",
    "description": "startExtrudeEdge from polyOps"
  },
  "polyOps.startExtrudeFace": {
    "prefix": "polyOps.startExtrudeFace",
    "body": "polyOps.startExtrudeFace",
    "description": "startExtrudeFace from polyOps"
  },
  "polyOps.startExtrudeVertex": {
    "prefix": "polyOps.startExtrudeVertex",
    "body": "polyOps.startExtrudeVertex",
    "description": "startExtrudeVertex from polyOps"
  },
  "polyOps.startSlicePlane": {
    "prefix": "polyOps.startSlicePlane",
    "body": "polyOps.startSlicePlane",
    "description": "startSlicePlane from polyOps"
  },
  "polyOps.startWeldTarget": {
    "prefix": "polyOps.startWeldTarget",
    "body": "polyOps.startWeldTarget",
    "description": "startWeldTarget from polyOps"
  },
  "polyOps.tessellate": {
    "prefix": "polyOps.tessellate",
    "body": "polyOps.tessellate",
    "description": "tessellate from polyOps"
  },
  "polyOps.unhide": {
    "prefix": "polyOps.unhide",
    "body": "polyOps.unhide",
    "description": "unhide from polyOps"
  },
  "polyOps.update": {
    "prefix": "polyOps.update",
    "body": "polyOps.update",
    "description": "update from polyOps"
  },
  "polyOps.viewAlign": {
    "prefix": "polyOps.viewAlign",
    "body": "polyOps.viewAlign",
    "description": "viewAlign from polyOps"
  },
  "polyOps.weld": {
    "prefix": "polyOps.weld",
    "body": "polyOps.weld",
    "description": "weld from polyOps"
  },
  "PolyToolsUIstruct.ConvexConcaveType": {
    "prefix": "PolyToolsUIstruct.ConvexConcaveType",
    "body": "PolyToolsUIstruct.ConvexConcaveType",
    "description": "ConvexConcaveType from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.CovexConcave": {
    "prefix": "PolyToolsUIstruct.CovexConcave",
    "body": "PolyToolsUIstruct.CovexConcave",
    "description": "CovexConcave from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.DistanceSelectSpinner": {
    "prefix": "PolyToolsUIstruct.DistanceSelectSpinner",
    "body": "PolyToolsUIstruct.DistanceSelectSpinner",
    "description": "DistanceSelectSpinner from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.DotLoopGap": {
    "prefix": "PolyToolsUIstruct.DotLoopGap",
    "body": "PolyToolsUIstruct.DotLoopGap",
    "description": "DotLoopGap from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.DotLoopType": {
    "prefix": "PolyToolsUIstruct.DotLoopType",
    "body": "PolyToolsUIstruct.DotLoopType",
    "description": "DotLoopType from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.DotLoopTypeEdge": {
    "prefix": "PolyToolsUIstruct.DotLoopTypeEdge",
    "body": "PolyToolsUIstruct.DotLoopTypeEdge",
    "description": "DotLoopTypeEdge from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.DotLoopTypePoly": {
    "prefix": "PolyToolsUIstruct.DotLoopTypePoly",
    "body": "PolyToolsUIstruct.DotLoopTypePoly",
    "description": "DotLoopTypePoly from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.FlowConnectAutoLoop": {
    "prefix": "PolyToolsUIstruct.FlowConnectAutoLoop",
    "body": "PolyToolsUIstruct.FlowConnectAutoLoop",
    "description": "FlowConnectAutoLoop from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.HalfAxis": {
    "prefix": "PolyToolsUIstruct.HalfAxis",
    "body": "PolyToolsUIstruct.HalfAxis",
    "description": "HalfAxis from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.HalfInvert": {
    "prefix": "PolyToolsUIstruct.HalfInvert",
    "body": "PolyToolsUIstruct.HalfInvert",
    "description": "HalfInvert from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.HardType": {
    "prefix": "PolyToolsUIstruct.HardType",
    "body": "PolyToolsUIstruct.HardType",
    "description": "HardType from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.InsertV": {
    "prefix": "PolyToolsUIstruct.InsertV",
    "body": "PolyToolsUIstruct.InsertV",
    "description": "InsertV from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.LoopModeButton": {
    "prefix": "PolyToolsUIstruct.LoopModeButton",
    "body": "PolyToolsUIstruct.LoopModeButton",
    "description": "LoopModeButton from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.MirrorElementClone": {
    "prefix": "PolyToolsUIstruct.MirrorElementClone",
    "body": "PolyToolsUIstruct.MirrorElementClone",
    "description": "MirrorElementClone from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.NormalInvert": {
    "prefix": "PolyToolsUIstruct.NormalInvert",
    "body": "PolyToolsUIstruct.NormalInvert",
    "description": "NormalInvert from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.NormalRadio": {
    "prefix": "PolyToolsUIstruct.NormalRadio",
    "body": "PolyToolsUIstruct.NormalRadio",
    "description": "NormalRadio from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.NormalSelectSpinner": {
    "prefix": "PolyToolsUIstruct.NormalSelectSpinner",
    "body": "PolyToolsUIstruct.NormalSelectSpinner",
    "description": "NormalSelectSpinner from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.NumericEdges": {
    "prefix": "PolyToolsUIstruct.NumericEdges",
    "body": "PolyToolsUIstruct.NumericEdges",
    "description": "NumericEdges from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.NumericType": {
    "prefix": "PolyToolsUIstruct.NumericType",
    "body": "PolyToolsUIstruct.NumericType",
    "description": "NumericType from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PDAutoWeld": {
    "prefix": "PolyToolsUIstruct.PDAutoWeld",
    "body": "PolyToolsUIstruct.PDAutoWeld",
    "description": "PDAutoWeld from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PDBranchTaper": {
    "prefix": "PolyToolsUIstruct.PDBranchTaper",
    "body": "PolyToolsUIstruct.PDBranchTaper",
    "description": "PDBranchTaper from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PDButtons": {
    "prefix": "PolyToolsUIstruct.PDButtons",
    "body": "PolyToolsUIstruct.PDButtons",
    "description": "PDButtons from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PDDistance": {
    "prefix": "PolyToolsUIstruct.PDDistance",
    "body": "PolyToolsUIstruct.PDDistance",
    "description": "PDDistance from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PDDistanceType": {
    "prefix": "PolyToolsUIstruct.PDDistanceType",
    "body": "PolyToolsUIstruct.PDDistanceType",
    "description": "PDDistanceType from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PDDrawtype": {
    "prefix": "PolyToolsUIstruct.PDDrawtype",
    "body": "PolyToolsUIstruct.PDDrawtype",
    "description": "PDDrawtype from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PDOffset": {
    "prefix": "PolyToolsUIstruct.PDOffset",
    "body": "PolyToolsUIstruct.PDOffset",
    "description": "PDOffset from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PDPickButton": {
    "prefix": "PolyToolsUIstruct.PDPickButton",
    "body": "PolyToolsUIstruct.PDPickButton",
    "description": "PDPickButton from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PDSetFlow": {
    "prefix": "PolyToolsUIstruct.PDSetFlow",
    "body": "PolyToolsUIstruct.PDSetFlow",
    "description": "PDSetFlow from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PDSolveAngle": {
    "prefix": "PolyToolsUIstruct.PDSolveAngle",
    "body": "PolyToolsUIstruct.PDSolveAngle",
    "description": "PDSolveAngle from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PDSolveQuads": {
    "prefix": "PolyToolsUIstruct.PDSolveQuads",
    "body": "PolyToolsUIstruct.PDSolveQuads",
    "description": "PDSolveQuads from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PDSurfQuads": {
    "prefix": "PolyToolsUIstruct.PDSurfQuads",
    "body": "PolyToolsUIstruct.PDSurfQuads",
    "description": "PDSurfQuads from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PDTool": {
    "prefix": "PolyToolsUIstruct.PDTool",
    "body": "PolyToolsUIstruct.PDTool",
    "description": "PDTool from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PerspectiveGrowSpinner": {
    "prefix": "PolyToolsUIstruct.PerspectiveGrowSpinner",
    "body": "PolyToolsUIstruct.PerspectiveGrowSpinner",
    "description": "PerspectiveGrowSpinner from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PerspectiveOutline": {
    "prefix": "PolyToolsUIstruct.PerspectiveOutline",
    "body": "PolyToolsUIstruct.PerspectiveOutline",
    "description": "PerspectiveOutline from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PerspectiveValue": {
    "prefix": "PolyToolsUIstruct.PerspectiveValue",
    "body": "PolyToolsUIstruct.PerspectiveValue",
    "description": "PerspectiveValue from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PolyDrawSettings": {
    "prefix": "PolyToolsUIstruct.PolyDrawSettings",
    "body": "PolyToolsUIstruct.PolyDrawSettings",
    "description": "PolyDrawSettings from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PolySculptSettings": {
    "prefix": "PolyToolsUIstruct.PolySculptSettings",
    "body": "PolyToolsUIstruct.PolySculptSettings",
    "description": "PolySculptSettings from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PolyShiftActive": {
    "prefix": "PolyToolsUIstruct.PolyShiftActive",
    "body": "PolyToolsUIstruct.PolyShiftActive",
    "description": "PolyShiftActive from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PolyShiftSettings": {
    "prefix": "PolyToolsUIstruct.PolyShiftSettings",
    "body": "PolyToolsUIstruct.PolyShiftSettings",
    "description": "PolyShiftSettings from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSBrushAffect": {
    "prefix": "PolyToolsUIstruct.PSBrushAffect",
    "body": "PolyToolsUIstruct.PSBrushAffect",
    "description": "PSBrushAffect from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSButtons": {
    "prefix": "PolyToolsUIstruct.PSButtons",
    "body": "PolyToolsUIstruct.PSButtons",
    "description": "PSButtons from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSConformAmount": {
    "prefix": "PolyToolsUIstruct.PSConformAmount",
    "body": "PolyToolsUIstruct.PSConformAmount",
    "description": "PSConformAmount from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSConformDirection": {
    "prefix": "PolyToolsUIstruct.PSConformDirection",
    "body": "PolyToolsUIstruct.PSConformDirection",
    "description": "PSConformDirection from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSFalloff": {
    "prefix": "PolyToolsUIstruct.PSFalloff",
    "body": "PolyToolsUIstruct.PSFalloff",
    "description": "PSFalloff from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSFreezeEX": {
    "prefix": "PolyToolsUIstruct.PSFreezeEX",
    "body": "PolyToolsUIstruct.PSFreezeEX",
    "description": "PSFreezeEX from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSFreezeEY": {
    "prefix": "PolyToolsUIstruct.PSFreezeEY",
    "body": "PolyToolsUIstruct.PSFreezeEY",
    "description": "PSFreezeEY from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSFreezeEZ": {
    "prefix": "PolyToolsUIstruct.PSFreezeEZ",
    "body": "PolyToolsUIstruct.PSFreezeEZ",
    "description": "PSFreezeEZ from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSFreezeX": {
    "prefix": "PolyToolsUIstruct.PSFreezeX",
    "body": "PolyToolsUIstruct.PSFreezeX",
    "description": "PSFreezeX from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSFreezeY": {
    "prefix": "PolyToolsUIstruct.PSFreezeY",
    "body": "PolyToolsUIstruct.PSFreezeY",
    "description": "PSFreezeY from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSFreezeZ": {
    "prefix": "PolyToolsUIstruct.PSFreezeZ",
    "body": "PolyToolsUIstruct.PSFreezeZ",
    "description": "PSFreezeZ from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSFullStrength": {
    "prefix": "PolyToolsUIstruct.PSFullStrength",
    "body": "PolyToolsUIstruct.PSFullStrength",
    "description": "PSFullStrength from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSIgnoreback": {
    "prefix": "PolyToolsUIstruct.PSIgnoreback",
    "body": "PolyToolsUIstruct.PSIgnoreback",
    "description": "PSIgnoreback from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSMirror": {
    "prefix": "PolyToolsUIstruct.PSMirror",
    "body": "PolyToolsUIstruct.PSMirror",
    "description": "PSMirror from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSMirrorAxis": {
    "prefix": "PolyToolsUIstruct.PSMirrorAxis",
    "body": "PolyToolsUIstruct.PSMirrorAxis",
    "description": "PSMirrorAxis from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSStrength": {
    "prefix": "PolyToolsUIstruct.PSStrength",
    "body": "PolyToolsUIstruct.PSStrength",
    "description": "PSStrength from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSUseRelativeOffset": {
    "prefix": "PolyToolsUIstruct.PSUseRelativeOffset",
    "body": "PolyToolsUIstruct.PSUseRelativeOffset",
    "description": "PSUseRelativeOffset from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.PSUseSelected": {
    "prefix": "PolyToolsUIstruct.PSUseSelected",
    "body": "PolyToolsUIstruct.PSUseSelected",
    "description": "PSUseSelected from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.QuadrifyType": {
    "prefix": "PolyToolsUIstruct.QuadrifyType",
    "body": "PolyToolsUIstruct.QuadrifyType",
    "description": "QuadrifyType from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.RandomConnectAutoLoop": {
    "prefix": "PolyToolsUIstruct.RandomConnectAutoLoop",
    "body": "PolyToolsUIstruct.RandomConnectAutoLoop",
    "description": "RandomConnectAutoLoop from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.RandomConnectJitter": {
    "prefix": "PolyToolsUIstruct.RandomConnectJitter",
    "body": "PolyToolsUIstruct.RandomConnectJitter",
    "description": "RandomConnectJitter from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.RandomNumber": {
    "prefix": "PolyToolsUIstruct.RandomNumber",
    "body": "PolyToolsUIstruct.RandomNumber",
    "description": "RandomNumber from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.RandomNumberButton": {
    "prefix": "PolyToolsUIstruct.RandomNumberButton",
    "body": "PolyToolsUIstruct.RandomNumberButton",
    "description": "RandomNumberButton from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.RandomPercent": {
    "prefix": "PolyToolsUIstruct.RandomPercent",
    "body": "PolyToolsUIstruct.RandomPercent",
    "description": "RandomPercent from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.RandomPercentButton": {
    "prefix": "PolyToolsUIstruct.RandomPercentButton",
    "body": "PolyToolsUIstruct.RandomPercentButton",
    "description": "RandomPercentButton from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.RandomSelectType": {
    "prefix": "PolyToolsUIstruct.RandomSelectType",
    "body": "PolyToolsUIstruct.RandomSelectType",
    "description": "RandomSelectType from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.RandomType": {
    "prefix": "PolyToolsUIstruct.RandomType",
    "body": "PolyToolsUIstruct.RandomType",
    "description": "RandomType from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.RingModeButton": {
    "prefix": "PolyToolsUIstruct.RingModeButton",
    "body": "PolyToolsUIstruct.RingModeButton",
    "description": "RingModeButton from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SculptBrushsize": {
    "prefix": "PolyToolsUIstruct.SculptBrushsize",
    "body": "PolyToolsUIstruct.SculptBrushsize",
    "description": "SculptBrushsize from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SculptBrushStrength": {
    "prefix": "PolyToolsUIstruct.SculptBrushStrength",
    "body": "PolyToolsUIstruct.SculptBrushStrength",
    "description": "SculptBrushStrength from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SculptButtons": {
    "prefix": "PolyToolsUIstruct.SculptButtons",
    "body": "PolyToolsUIstruct.SculptButtons",
    "description": "SculptButtons from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SculptCap": {
    "prefix": "PolyToolsUIstruct.SculptCap",
    "body": "PolyToolsUIstruct.SculptCap",
    "description": "SculptCap from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SculptDirection": {
    "prefix": "PolyToolsUIstruct.SculptDirection",
    "body": "PolyToolsUIstruct.SculptDirection",
    "description": "SculptDirection from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SculptHasBuffer": {
    "prefix": "PolyToolsUIstruct.SculptHasBuffer",
    "body": "PolyToolsUIstruct.SculptHasBuffer",
    "description": "SculptHasBuffer from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SculptNoiseIterations": {
    "prefix": "PolyToolsUIstruct.SculptNoiseIterations",
    "body": "PolyToolsUIstruct.SculptNoiseIterations",
    "description": "SculptNoiseIterations from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SculptNoiseScale": {
    "prefix": "PolyToolsUIstruct.SculptNoiseScale",
    "body": "PolyToolsUIstruct.SculptNoiseScale",
    "description": "SculptNoiseScale from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SculptNoiseSeed": {
    "prefix": "PolyToolsUIstruct.SculptNoiseSeed",
    "body": "PolyToolsUIstruct.SculptNoiseSeed",
    "description": "SculptNoiseSeed from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SculptNoiseTurbulence": {
    "prefix": "PolyToolsUIstruct.SculptNoiseTurbulence",
    "body": "PolyToolsUIstruct.SculptNoiseTurbulence",
    "description": "SculptNoiseTurbulence from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SculptOffset": {
    "prefix": "PolyToolsUIstruct.SculptOffset",
    "body": "PolyToolsUIstruct.SculptOffset",
    "description": "SculptOffset from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SculptPickButton": {
    "prefix": "PolyToolsUIstruct.SculptPickButton",
    "body": "PolyToolsUIstruct.SculptPickButton",
    "description": "SculptPickButton from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SculptTool": {
    "prefix": "PolyToolsUIstruct.SculptTool",
    "body": "PolyToolsUIstruct.SculptTool",
    "description": "SculptTool from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SculptUseSelectedVerts": {
    "prefix": "PolyToolsUIstruct.SculptUseSelectedVerts",
    "body": "PolyToolsUIstruct.SculptUseSelectedVerts",
    "description": "SculptUseSelectedVerts from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SetFlowAutoLoop": {
    "prefix": "PolyToolsUIstruct.SetFlowAutoLoop",
    "body": "PolyToolsUIstruct.SetFlowAutoLoop",
    "description": "SetFlowAutoLoop from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SetFlowSpeed": {
    "prefix": "PolyToolsUIstruct.SetFlowSpeed",
    "body": "PolyToolsUIstruct.SetFlowSpeed",
    "description": "SetFlowSpeed from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SimilarE": {
    "prefix": "PolyToolsUIstruct.SimilarE",
    "body": "PolyToolsUIstruct.SimilarE",
    "description": "SimilarE from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SimilarF": {
    "prefix": "PolyToolsUIstruct.SimilarF",
    "body": "PolyToolsUIstruct.SimilarF",
    "description": "SimilarF from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SimilarV": {
    "prefix": "PolyToolsUIstruct.SimilarV",
    "body": "PolyToolsUIstruct.SimilarV",
    "description": "SimilarV from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.Smooth30Type": {
    "prefix": "PolyToolsUIstruct.Smooth30Type",
    "body": "PolyToolsUIstruct.Smooth30Type",
    "description": "Smooth30Type from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SmoothType": {
    "prefix": "PolyToolsUIstruct.SmoothType",
    "body": "PolyToolsUIstruct.SmoothType",
    "description": "SmoothType from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.StepLoopLongdist": {
    "prefix": "PolyToolsUIstruct.StepLoopLongdist",
    "body": "PolyToolsUIstruct.StepLoopLongdist",
    "description": "StepLoopLongdist from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.StepModeButton": {
    "prefix": "PolyToolsUIstruct.StepModeButton",
    "body": "PolyToolsUIstruct.StepModeButton",
    "description": "StepModeButton from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.StoreSelButton1": {
    "prefix": "PolyToolsUIstruct.StoreSelButton1",
    "body": "PolyToolsUIstruct.StoreSelButton1",
    "description": "StoreSelButton1 from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.StoreSelButton2": {
    "prefix": "PolyToolsUIstruct.StoreSelButton2",
    "body": "PolyToolsUIstruct.StoreSelButton2",
    "description": "StoreSelButton2 from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.SurfaceSelectSpinner": {
    "prefix": "PolyToolsUIstruct.SurfaceSelectSpinner",
    "body": "PolyToolsUIstruct.SurfaceSelectSpinner",
    "description": "SurfaceSelectSpinner from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.ToolReset": {
    "prefix": "PolyToolsUIstruct.ToolReset",
    "body": "PolyToolsUIstruct.ToolReset",
    "description": "ToolReset from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.UVWTweakActive": {
    "prefix": "PolyToolsUIstruct.UVWTweakActive",
    "body": "PolyToolsUIstruct.UVWTweakActive",
    "description": "UVWTweakActive from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.UVWTweakButton": {
    "prefix": "PolyToolsUIstruct.UVWTweakButton",
    "body": "PolyToolsUIstruct.UVWTweakButton",
    "description": "UVWTweakButton from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.UVWTweakChannel": {
    "prefix": "PolyToolsUIstruct.UVWTweakChannel",
    "body": "PolyToolsUIstruct.UVWTweakChannel",
    "description": "UVWTweakChannel from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.UVWTweakFalloff": {
    "prefix": "PolyToolsUIstruct.UVWTweakFalloff",
    "body": "PolyToolsUIstruct.UVWTweakFalloff",
    "description": "UVWTweakFalloff from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.UVWTweakFullStrength": {
    "prefix": "PolyToolsUIstruct.UVWTweakFullStrength",
    "body": "PolyToolsUIstruct.UVWTweakFullStrength",
    "description": "UVWTweakFullStrength from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.UVWTweakSettings": {
    "prefix": "PolyToolsUIstruct.UVWTweakSettings",
    "body": "PolyToolsUIstruct.UVWTweakSettings",
    "description": "UVWTweakSettings from PolyToolsUIstruct"
  },
  "PolyToolsUIstruct.UVWTweakStrength": {
    "prefix": "PolyToolsUIstruct.UVWTweakStrength",
    "body": "PolyToolsUIstruct.UVWTweakStrength",
    "description": "UVWTweakStrength from PolyToolsUIstruct"
  },
  "preferences.constantReferenceSystem": {
    "prefix": "preferences.constantReferenceSystem",
    "body": "preferences.constantReferenceSystem",
    "description": "constantReferenceSystem from preferences"
  },
  "preferences.DontRepeatRefMsg": {
    "prefix": "preferences.DontRepeatRefMsg",
    "body": "preferences.DontRepeatRefMsg",
    "description": "DontRepeatRefMsg from preferences"
  },
  "preferences.flyOffTime": {
    "prefix": "preferences.flyOffTime",
    "body": "preferences.flyOffTime",
    "description": "flyOffTime from preferences"
  },
  "preferences.maximumGBufferLayers": {
    "prefix": "preferences.maximumGBufferLayers",
    "body": "preferences.maximumGBufferLayers",
    "description": "maximumGBufferLayers from preferences"
  },
  "preferences.spinnerPrecision": {
    "prefix": "preferences.spinnerPrecision",
    "body": "preferences.spinnerPrecision",
    "description": "spinnerPrecision from preferences"
  },
  "preferences.spinnerSnap": {
    "prefix": "preferences.spinnerSnap",
    "body": "preferences.spinnerSnap",
    "description": "spinnerSnap from preferences"
  },
  "preferences.spinnerWrap": {
    "prefix": "preferences.spinnerWrap",
    "body": "preferences.spinnerWrap",
    "description": "spinnerWrap from preferences"
  },
  "preferences.useLargeVertexDots": {
    "prefix": "preferences.useLargeVertexDots",
    "body": "preferences.useLargeVertexDots",
    "description": "useLargeVertexDots from preferences"
  },
  "preferences.useSpinnerSnap": {
    "prefix": "preferences.useSpinnerSnap",
    "body": "preferences.useSpinnerSnap",
    "description": "useSpinnerSnap from preferences"
  },
  "preferences.useTransformGizmos": {
    "prefix": "preferences.useTransformGizmos",
    "body": "preferences.useTransformGizmos",
    "description": "useTransformGizmos from preferences"
  },
  "preferences.useVertexDots": {
    "prefix": "preferences.useVertexDots",
    "body": "preferences.useVertexDots",
    "description": "useVertexDots from preferences"
  },
  "PromptForNameHandler_struct.initNameVal": {
    "prefix": "PromptForNameHandler_struct.initNameVal",
    "body": "PromptForNameHandler_struct.initNameVal",
    "description": "initNameVal from PromptForNameHandler_struct"
  },
  "PromptForNameHandler_struct.initTitleVal": {
    "prefix": "PromptForNameHandler_struct.initTitleVal",
    "body": "PromptForNameHandler_struct.initTitleVal",
    "description": "initTitleVal from PromptForNameHandler_struct"
  },
  "PromptForNameHandler_struct.PromptForNameRollout": {
    "prefix": "PromptForNameHandler_struct.PromptForNameRollout",
    "body": "PromptForNameHandler_struct.PromptForNameRollout",
    "description": "PromptForNameRollout from PromptForNameHandler_struct"
  },
  "PromptForNameHandler_struct.resultNameVal": {
    "prefix": "PromptForNameHandler_struct.resultNameVal",
    "body": "PromptForNameHandler_struct.resultNameVal",
    "description": "resultNameVal from PromptForNameHandler_struct"
  },
  "PSConformSpinnerCallback.OnChanged": {
    "prefix": "PSConformSpinnerCallback.OnChanged",
    "body": "PSConformSpinnerCallback.OnChanged",
    "description": "OnChanged from PSConformSpinnerCallback"
  },
  "PSFalloffSpinnerCallback.OnChanged": {
    "prefix": "PSFalloffSpinnerCallback.OnChanged",
    "body": "PSFalloffSpinnerCallback.OnChanged",
    "description": "OnChanged from PSFalloffSpinnerCallback"
  },
  "PSFullStrengthSpinnerCallback.OnChanged": {
    "prefix": "PSFullStrengthSpinnerCallback.OnChanged",
    "body": "PSFullStrengthSpinnerCallback.OnChanged",
    "description": "OnChanged from PSFullStrengthSpinnerCallback"
  },
  "PSStrengthSpinnerCallback.OnChanged": {
    "prefix": "PSStrengthSpinnerCallback.OnChanged",
    "body": "PSStrengthSpinnerCallback.OnChanged",
    "description": "OnChanged from PSStrengthSpinnerCallback"
  },
  "px_multiedit_methods_struct.AddParamEntryToItems": {
    "prefix": "px_multiedit_methods_struct.AddParamEntryToItems",
    "body": "px_multiedit_methods_struct.AddParamEntryToItems",
    "description": "AddParamEntryToItems from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.AddParamEntryToRigidBodyList": {
    "prefix": "px_multiedit_methods_struct.AddParamEntryToRigidBodyList",
    "body": "px_multiedit_methods_struct.AddParamEntryToRigidBodyList",
    "description": "AddParamEntryToRigidBodyList from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.controlInfoListSorted": {
    "prefix": "px_multiedit_methods_struct.controlInfoListSorted",
    "body": "px_multiedit_methods_struct.controlInfoListSorted",
    "description": "controlInfoListSorted from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.ControlItemToKeyVal": {
    "prefix": "px_multiedit_methods_struct.ControlItemToKeyVal",
    "body": "px_multiedit_methods_struct.ControlItemToKeyVal",
    "description": "ControlItemToKeyVal from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.ControlItemToKeyValStruct": {
    "prefix": "px_multiedit_methods_struct.ControlItemToKeyValStruct",
    "body": "px_multiedit_methods_struct.ControlItemToKeyValStruct",
    "description": "ControlItemToKeyValStruct from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.ControlValToParamVal": {
    "prefix": "px_multiedit_methods_struct.ControlValToParamVal",
    "body": "px_multiedit_methods_struct.ControlValToParamVal",
    "description": "ControlValToParamVal from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.GetControlInfo": {
    "prefix": "px_multiedit_methods_struct.GetControlInfo",
    "body": "px_multiedit_methods_struct.GetControlInfo",
    "description": "GetControlInfo from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.GetFuncResultFromItems": {
    "prefix": "px_multiedit_methods_struct.GetFuncResultFromItems",
    "body": "px_multiedit_methods_struct.GetFuncResultFromItems",
    "description": "GetFuncResultFromItems from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.GetFuncResultFromRigidBodyList": {
    "prefix": "px_multiedit_methods_struct.GetFuncResultFromRigidBodyList",
    "body": "px_multiedit_methods_struct.GetFuncResultFromRigidBodyList",
    "description": "GetFuncResultFromRigidBodyList from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.GetParamArrayFromItems": {
    "prefix": "px_multiedit_methods_struct.GetParamArrayFromItems",
    "body": "px_multiedit_methods_struct.GetParamArrayFromItems",
    "description": "GetParamArrayFromItems from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.GetParamFromConstraintList": {
    "prefix": "px_multiedit_methods_struct.GetParamFromConstraintList",
    "body": "px_multiedit_methods_struct.GetParamFromConstraintList",
    "description": "GetParamFromConstraintList from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.GetParamFromControl": {
    "prefix": "px_multiedit_methods_struct.GetParamFromControl",
    "body": "px_multiedit_methods_struct.GetParamFromControl",
    "description": "GetParamFromControl from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.GetParamFromControlItem": {
    "prefix": "px_multiedit_methods_struct.GetParamFromControlItem",
    "body": "px_multiedit_methods_struct.GetParamFromControlItem",
    "description": "GetParamFromControlItem from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.GetParamFromItems": {
    "prefix": "px_multiedit_methods_struct.GetParamFromItems",
    "body": "px_multiedit_methods_struct.GetParamFromItems",
    "description": "GetParamFromItems from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.GetParamFromRigidBodyList": {
    "prefix": "px_multiedit_methods_struct.GetParamFromRigidBodyList",
    "body": "px_multiedit_methods_struct.GetParamFromRigidBodyList",
    "description": "GetParamFromRigidBodyList from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.GetParamPrimitiveFromItems": {
    "prefix": "px_multiedit_methods_struct.GetParamPrimitiveFromItems",
    "body": "px_multiedit_methods_struct.GetParamPrimitiveFromItems",
    "description": "GetParamPrimitiveFromItems from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.GetRolloutInfoList": {
    "prefix": "px_multiedit_methods_struct.GetRolloutInfoList",
    "body": "px_multiedit_methods_struct.GetRolloutInfoList",
    "description": "GetRolloutInfoList from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.GetSortKey": {
    "prefix": "px_multiedit_methods_struct.GetSortKey",
    "body": "px_multiedit_methods_struct.GetSortKey",
    "description": "GetSortKey from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.InitControlInfoList": {
    "prefix": "px_multiedit_methods_struct.InitControlInfoList",
    "body": "px_multiedit_methods_struct.InitControlInfoList",
    "description": "InitControlInfoList from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.InvokeFuncOnItems": {
    "prefix": "px_multiedit_methods_struct.InvokeFuncOnItems",
    "body": "px_multiedit_methods_struct.InvokeFuncOnItems",
    "description": "InvokeFuncOnItems from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.InvokeFuncOnRigidBodyList": {
    "prefix": "px_multiedit_methods_struct.InvokeFuncOnRigidBodyList",
    "body": "px_multiedit_methods_struct.InvokeFuncOnRigidBodyList",
    "description": "InvokeFuncOnRigidBodyList from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.IsTabVisible": {
    "prefix": "px_multiedit_methods_struct.IsTabVisible",
    "body": "px_multiedit_methods_struct.IsTabVisible",
    "description": "IsTabVisible from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.OnClose": {
    "prefix": "px_multiedit_methods_struct.OnClose",
    "body": "px_multiedit_methods_struct.OnClose",
    "description": "OnClose from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.OnOpen": {
    "prefix": "px_multiedit_methods_struct.OnOpen",
    "body": "px_multiedit_methods_struct.OnOpen",
    "description": "OnOpen from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.OnSelectionSetChange": {
    "prefix": "px_multiedit_methods_struct.OnSelectionSetChange",
    "body": "px_multiedit_methods_struct.OnSelectionSetChange",
    "description": "OnSelectionSetChange from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.OnSwitchTabs": {
    "prefix": "px_multiedit_methods_struct.OnSwitchTabs",
    "body": "px_multiedit_methods_struct.OnSwitchTabs",
    "description": "OnSwitchTabs from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.OnUndo": {
    "prefix": "px_multiedit_methods_struct.OnUndo",
    "body": "px_multiedit_methods_struct.OnUndo",
    "description": "OnUndo from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.ParamValComparator": {
    "prefix": "px_multiedit_methods_struct.ParamValComparator",
    "body": "px_multiedit_methods_struct.ParamValComparator",
    "description": "ParamValComparator from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.ParamValToControlVal": {
    "prefix": "px_multiedit_methods_struct.ParamValToControlVal",
    "body": "px_multiedit_methods_struct.ParamValToControlVal",
    "description": "ParamValToControlVal from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.RemoveParamEntryFromItems": {
    "prefix": "px_multiedit_methods_struct.RemoveParamEntryFromItems",
    "body": "px_multiedit_methods_struct.RemoveParamEntryFromItems",
    "description": "RemoveParamEntryFromItems from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.RemoveParamEntryFromRigidBodyList": {
    "prefix": "px_multiedit_methods_struct.RemoveParamEntryFromRigidBodyList",
    "body": "px_multiedit_methods_struct.RemoveParamEntryFromRigidBodyList",
    "description": "RemoveParamEntryFromRigidBodyList from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.rolloutInfoList": {
    "prefix": "px_multiedit_methods_struct.rolloutInfoList",
    "body": "px_multiedit_methods_struct.rolloutInfoList",
    "description": "rolloutInfoList from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.SetControlToConstraintList": {
    "prefix": "px_multiedit_methods_struct.SetControlToConstraintList",
    "body": "px_multiedit_methods_struct.SetControlToConstraintList",
    "description": "SetControlToConstraintList from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.SetControlToItems": {
    "prefix": "px_multiedit_methods_struct.SetControlToItems",
    "body": "px_multiedit_methods_struct.SetControlToItems",
    "description": "SetControlToItems from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.SetControlToRigidBodyList": {
    "prefix": "px_multiedit_methods_struct.SetControlToRigidBodyList",
    "body": "px_multiedit_methods_struct.SetControlToRigidBodyList",
    "description": "SetControlToRigidBodyList from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.SetParamToConstraintList": {
    "prefix": "px_multiedit_methods_struct.SetParamToConstraintList",
    "body": "px_multiedit_methods_struct.SetParamToConstraintList",
    "description": "SetParamToConstraintList from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.SetParamToControl": {
    "prefix": "px_multiedit_methods_struct.SetParamToControl",
    "body": "px_multiedit_methods_struct.SetParamToControl",
    "description": "SetParamToControl from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.SetParamToItems": {
    "prefix": "px_multiedit_methods_struct.SetParamToItems",
    "body": "px_multiedit_methods_struct.SetParamToItems",
    "description": "SetParamToItems from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.SetParamToRigidBodyList": {
    "prefix": "px_multiedit_methods_struct.SetParamToRigidBodyList",
    "body": "px_multiedit_methods_struct.SetParamToRigidBodyList",
    "description": "SetParamToRigidBodyList from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.showConstraintRollouts": {
    "prefix": "px_multiedit_methods_struct.showConstraintRollouts",
    "body": "px_multiedit_methods_struct.showConstraintRollouts",
    "description": "showConstraintRollouts from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.showRigidBodyRollouts": {
    "prefix": "px_multiedit_methods_struct.showRigidBodyRollouts",
    "body": "px_multiedit_methods_struct.showRigidBodyRollouts",
    "description": "showRigidBodyRollouts from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.SortedArrayToStringArray": {
    "prefix": "px_multiedit_methods_struct.SortedArrayToStringArray",
    "body": "px_multiedit_methods_struct.SortedArrayToStringArray",
    "description": "SortedArrayToStringArray from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.tabIndex": {
    "prefix": "px_multiedit_methods_struct.tabIndex",
    "body": "px_multiedit_methods_struct.tabIndex",
    "description": "tabIndex from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.tabIndexCur": {
    "prefix": "px_multiedit_methods_struct.tabIndexCur",
    "body": "px_multiedit_methods_struct.tabIndexCur",
    "description": "tabIndexCur from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.tabItem": {
    "prefix": "px_multiedit_methods_struct.tabItem",
    "body": "px_multiedit_methods_struct.tabItem",
    "description": "tabItem from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.tabRolloutContainer": {
    "prefix": "px_multiedit_methods_struct.tabRolloutContainer",
    "body": "px_multiedit_methods_struct.tabRolloutContainer",
    "description": "tabRolloutContainer from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.tabRollouts": {
    "prefix": "px_multiedit_methods_struct.tabRollouts",
    "body": "px_multiedit_methods_struct.tabRollouts",
    "description": "tabRollouts from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.updateUI": {
    "prefix": "px_multiedit_methods_struct.updateUI",
    "body": "px_multiedit_methods_struct.updateUI",
    "description": "updateUI from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.UpdateUI_ConstraintLimitRollouts": {
    "prefix": "px_multiedit_methods_struct.UpdateUI_ConstraintLimitRollouts",
    "body": "px_multiedit_methods_struct.UpdateUI_ConstraintLimitRollouts",
    "description": "UpdateUI_ConstraintLimitRollouts from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.UpdateUI_DefaultHandling_Constraint": {
    "prefix": "px_multiedit_methods_struct.UpdateUI_DefaultHandling_Constraint",
    "body": "px_multiedit_methods_struct.UpdateUI_DefaultHandling_Constraint",
    "description": "UpdateUI_DefaultHandling_Constraint from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.UpdateUI_DefaultHandling_Items": {
    "prefix": "px_multiedit_methods_struct.UpdateUI_DefaultHandling_Items",
    "body": "px_multiedit_methods_struct.UpdateUI_DefaultHandling_Items",
    "description": "UpdateUI_DefaultHandling_Items from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.UpdateUI_DefaultHandling_RigidBody": {
    "prefix": "px_multiedit_methods_struct.UpdateUI_DefaultHandling_RigidBody",
    "body": "px_multiedit_methods_struct.UpdateUI_DefaultHandling_RigidBody",
    "description": "UpdateUI_DefaultHandling_RigidBody from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.UpdateUI_MatListRollout": {
    "prefix": "px_multiedit_methods_struct.UpdateUI_MatListRollout",
    "body": "px_multiedit_methods_struct.UpdateUI_MatListRollout",
    "description": "UpdateUI_MatListRollout from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.UpdateUI_MatRollout": {
    "prefix": "px_multiedit_methods_struct.UpdateUI_MatRollout",
    "body": "px_multiedit_methods_struct.UpdateUI_MatRollout",
    "description": "UpdateUI_MatRollout from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.UpdateUI_TabRollouts": {
    "prefix": "px_multiedit_methods_struct.UpdateUI_TabRollouts",
    "body": "px_multiedit_methods_struct.UpdateUI_TabRollouts",
    "description": "UpdateUI_TabRollouts from px_multiedit_methods_struct"
  },
  "px_multiedit_methods_struct.Zero": {
    "prefix": "px_multiedit_methods_struct.Zero",
    "body": "px_multiedit_methods_struct.Zero",
    "description": "Zero from px_multiedit_methods_struct"
  },
  "pxNodeKeys.HaveKeys": {
    "prefix": "pxNodeKeys.HaveKeys",
    "body": "pxNodeKeys.HaveKeys",
    "description": "HaveKeys from pxNodeKeys"
  },
  "pxNodeKeys.init": {
    "prefix": "pxNodeKeys.init",
    "body": "pxNodeKeys.init",
    "description": "init from pxNodeKeys"
  },
  "pxNodeKeys.posTimes": {
    "prefix": "pxNodeKeys.posTimes",
    "body": "pxNodeKeys.posTimes",
    "description": "posTimes from pxNodeKeys"
  },
  "pxNodeKeys.posx": {
    "prefix": "pxNodeKeys.posx",
    "body": "pxNodeKeys.posx",
    "description": "posx from pxNodeKeys"
  },
  "pxNodeKeys.posy": {
    "prefix": "pxNodeKeys.posy",
    "body": "pxNodeKeys.posy",
    "description": "posy from pxNodeKeys"
  },
  "pxNodeKeys.posz": {
    "prefix": "pxNodeKeys.posz",
    "body": "pxNodeKeys.posz",
    "description": "posz from pxNodeKeys"
  },
  "pxNodeKeys.ResetKeys": {
    "prefix": "pxNodeKeys.ResetKeys",
    "body": "pxNodeKeys.ResetKeys",
    "description": "ResetKeys from pxNodeKeys"
  },
  "pxNodeKeys.rotTimes": {
    "prefix": "pxNodeKeys.rotTimes",
    "body": "pxNodeKeys.rotTimes",
    "description": "rotTimes from pxNodeKeys"
  },
  "pxNodeKeys.rotx": {
    "prefix": "pxNodeKeys.rotx",
    "body": "pxNodeKeys.rotx",
    "description": "rotx from pxNodeKeys"
  },
  "pxNodeKeys.roty": {
    "prefix": "pxNodeKeys.roty",
    "body": "pxNodeKeys.roty",
    "description": "roty from pxNodeKeys"
  },
  "pxNodeKeys.rotz": {
    "prefix": "pxNodeKeys.rotz",
    "body": "pxNodeKeys.rotz",
    "description": "rotz from pxNodeKeys"
  },
  "pxNodeKeys.SaveKeys": {
    "prefix": "pxNodeKeys.SaveKeys",
    "body": "pxNodeKeys.SaveKeys",
    "description": "SaveKeys from pxNodeKeys"
  },
  "PxRolloutInfo_struct.rolloutRolledUp": {
    "prefix": "PxRolloutInfo_struct.rolloutRolledUp",
    "body": "PxRolloutInfo_struct.rolloutRolledUp",
    "description": "rolloutRolledUp from PxRolloutInfo_struct"
  },
  "RandomConnectSpinnerCallback.OnChanged": {
    "prefix": "RandomConnectSpinnerCallback.OnChanged",
    "body": "RandomConnectSpinnerCallback.OnChanged",
    "description": "OnChanged from RandomConnectSpinnerCallback"
  },
  "RandomNumberSpinnerCallback.OnChanged": {
    "prefix": "RandomNumberSpinnerCallback.OnChanged",
    "body": "RandomNumberSpinnerCallback.OnChanged",
    "description": "OnChanged from RandomNumberSpinnerCallback"
  },
  "RandomPercentSpinnerCallback.OnChanged": {
    "prefix": "RandomPercentSpinnerCallback.OnChanged",
    "body": "RandomPercentSpinnerCallback.OnChanged",
    "description": "OnChanged from RandomPercentSpinnerCallback"
  },
  "refs.DependencyLoopTest": {
    "prefix": "refs.DependencyLoopTest",
    "body": "refs.DependencyLoopTest",
    "description": "DependencyLoopTest from refs"
  },
  "refs.dependentNodes": {
    "prefix": "refs.dependentNodes",
    "body": "refs.dependentNodes",
    "description": "dependentNodes from refs"
  },
  "refs.dependents": {
    "prefix": "refs.dependents",
    "body": "refs.dependents",
    "description": "dependents from refs"
  },
  "refs.dependsOn": {
    "prefix": "refs.dependsOn",
    "body": "refs.dependsOn",
    "description": "dependsOn from refs"
  },
  "refs.getIndirectReference": {
    "prefix": "refs.getIndirectReference",
    "body": "refs.getIndirectReference",
    "description": "getIndirectReference from refs"
  },
  "refs.getNumIndirectRefs": {
    "prefix": "refs.getNumIndirectRefs",
    "body": "refs.getNumIndirectRefs",
    "description": "getNumIndirectRefs from refs"
  },
  "refs.getReference": {
    "prefix": "refs.getReference",
    "body": "refs.getReference",
    "description": "getReference from refs"
  },
  "refs.replaceReference": {
    "prefix": "refs.replaceReference",
    "body": "refs.replaceReference",
    "description": "replaceReference from refs"
  },
  "refs.setIndirectReference": {
    "prefix": "refs.setIndirectReference",
    "body": "refs.setIndirectReference",
    "description": "setIndirectReference from refs"
  },
  "registry.closeKey": {
    "prefix": "registry.closeKey",
    "body": "registry.closeKey",
    "description": "closeKey from registry"
  },
  "registry.createKey": {
    "prefix": "registry.createKey",
    "body": "registry.createKey",
    "description": "createKey from registry"
  },
  "registry.deleteKey": {
    "prefix": "registry.deleteKey",
    "body": "registry.deleteKey",
    "description": "deleteKey from registry"
  },
  "registry.deleteSubKey": {
    "prefix": "registry.deleteSubKey",
    "body": "registry.deleteSubKey",
    "description": "deleteSubKey from registry"
  },
  "registry.deleteValue": {
    "prefix": "registry.deleteValue",
    "body": "registry.deleteValue",
    "description": "deleteValue from registry"
  },
  "registry.flushKey": {
    "prefix": "registry.flushKey",
    "body": "registry.flushKey",
    "description": "flushKey from registry"
  },
  "registry.getLastError": {
    "prefix": "registry.getLastError",
    "body": "registry.getLastError",
    "description": "getLastError from registry"
  },
  "registry.getParentKey": {
    "prefix": "registry.getParentKey",
    "body": "registry.getParentKey",
    "description": "getParentKey from registry"
  },
  "registry.getSubKeyName": {
    "prefix": "registry.getSubKeyName",
    "body": "registry.getSubKeyName",
    "description": "getSubKeyName from registry"
  },
  "registry.getSubKeyNames": {
    "prefix": "registry.getSubKeyNames",
    "body": "registry.getSubKeyNames",
    "description": "getSubKeyNames from registry"
  },
  "registry.getValueName": {
    "prefix": "registry.getValueName",
    "body": "registry.getValueName",
    "description": "getValueName from registry"
  },
  "registry.getValueNames": {
    "prefix": "registry.getValueNames",
    "body": "registry.getValueNames",
    "description": "getValueNames from registry"
  },
  "registry.isKeyConstant": {
    "prefix": "registry.isKeyConstant",
    "body": "registry.isKeyConstant",
    "description": "isKeyConstant from registry"
  },
  "registry.isParentKeyOpen": {
    "prefix": "registry.isParentKeyOpen",
    "body": "registry.isParentKeyOpen",
    "description": "isParentKeyOpen from registry"
  },
  "registry.openKey": {
    "prefix": "registry.openKey",
    "body": "registry.openKey",
    "description": "openKey from registry"
  },
  "registry.queryInfoKey": {
    "prefix": "registry.queryInfoKey",
    "body": "registry.queryInfoKey",
    "description": "queryInfoKey from registry"
  },
  "registry.queryValue": {
    "prefix": "registry.queryValue",
    "body": "registry.queryValue",
    "description": "queryValue from registry"
  },
  "registry.setValue": {
    "prefix": "registry.setValue",
    "body": "registry.setValue",
    "description": "setValue from registry"
  },
  "RElement.file": {
    "prefix": "RElement.file",
    "body": "RElement.file",
    "description": "file from RElement"
  },
  "RElement.kind": {
    "prefix": "RElement.kind",
    "body": "RElement.kind",
    "description": "kind from RElement"
  },
  "RElement.name": {
    "prefix": "RElement.name",
    "body": "RElement.name",
    "description": "name from RElement"
  },
  "RElement.transferMode": {
    "prefix": "RElement.transferMode",
    "body": "RElement.transferMode",
    "description": "transferMode from RElement"
  },
  "renderers.activeShade": {
    "prefix": "renderers.activeShade",
    "body": "renderers.activeShade",
    "description": "activeShade from renderers"
  },
  "renderers.ClearDraftRenderer": {
    "prefix": "renderers.ClearDraftRenderer",
    "body": "renderers.ClearDraftRenderer",
    "description": "ClearDraftRenderer from renderers"
  },
  "renderers.current": {
    "prefix": "renderers.current",
    "body": "renderers.current",
    "description": "current from renderers"
  },
  "renderers.GetDraftRenderer": {
    "prefix": "renderers.GetDraftRenderer",
    "body": "renderers.GetDraftRenderer",
    "description": "GetDraftRenderer from renderers"
  },
  "renderers.medit": {
    "prefix": "renderers.medit",
    "body": "renderers.medit",
    "description": "medit from renderers"
  },
  "renderers.production": {
    "prefix": "renderers.production",
    "body": "renderers.production",
    "description": "production from renderers"
  },
  "renderers.renderButtonText": {
    "prefix": "renderers.renderButtonText",
    "body": "renderers.renderButtonText",
    "description": "renderButtonText from renderers"
  },
  "renderers.renderDialogMode": {
    "prefix": "renderers.renderDialogMode",
    "body": "renderers.renderDialogMode",
    "description": "renderDialogMode from renderers"
  },
  "renderSceneDialog.close": {
    "prefix": "renderSceneDialog.close",
    "body": "renderSceneDialog.close",
    "description": "close from renderSceneDialog"
  },
  "renderSceneDialog.commit": {
    "prefix": "renderSceneDialog.commit",
    "body": "renderSceneDialog.commit",
    "description": "commit from renderSceneDialog"
  },
  "renderSceneDialog.isOpen": {
    "prefix": "renderSceneDialog.isOpen",
    "body": "renderSceneDialog.isOpen",
    "description": "isOpen from renderSceneDialog"
  },
  "renderSceneDialog.open": {
    "prefix": "renderSceneDialog.open",
    "body": "renderSceneDialog.open",
    "description": "open from renderSceneDialog"
  },
  "renderSceneDialog.update": {
    "prefix": "renderSceneDialog.update",
    "body": "renderSceneDialog.update",
    "description": "update from renderSceneDialog"
  },
  "Ribbon_Modeling.ColorToPoint3": {
    "prefix": "Ribbon_Modeling.ColorToPoint3",
    "body": "Ribbon_Modeling.ColorToPoint3",
    "description": "ColorToPoint3 from Ribbon_Modeling"
  },
  "Ribbon_Modeling.CurrentConstraintsIndex": {
    "prefix": "Ribbon_Modeling.CurrentConstraintsIndex",
    "body": "Ribbon_Modeling.CurrentConstraintsIndex",
    "description": "CurrentConstraintsIndex from Ribbon_Modeling"
  },
  "Ribbon_Modeling.DisplacementToggle": {
    "prefix": "Ribbon_Modeling.DisplacementToggle",
    "body": "Ribbon_Modeling.DisplacementToggle",
    "description": "DisplacementToggle from Ribbon_Modeling"
  },
  "Ribbon_Modeling.EditSoftSelectionMode": {
    "prefix": "Ribbon_Modeling.EditSoftSelectionMode",
    "body": "Ribbon_Modeling.EditSoftSelectionMode",
    "description": "EditSoftSelectionMode from Ribbon_Modeling"
  },
  "Ribbon_Modeling.FindModifierIndex": {
    "prefix": "Ribbon_Modeling.FindModifierIndex",
    "body": "Ribbon_Modeling.FindModifierIndex",
    "description": "FindModifierIndex from Ribbon_Modeling"
  },
  "Ribbon_Modeling.GetModifyButtonText": {
    "prefix": "Ribbon_Modeling.GetModifyButtonText",
    "body": "Ribbon_Modeling.GetModifyButtonText",
    "description": "GetModifyButtonText from Ribbon_Modeling"
  },
  "Ribbon_Modeling.GetSOEnum": {
    "prefix": "Ribbon_Modeling.GetSOEnum",
    "body": "Ribbon_Modeling.GetSOEnum",
    "description": "GetSOEnum from Ribbon_Modeling"
  },
  "Ribbon_Modeling.GetVertexColor": {
    "prefix": "Ribbon_Modeling.GetVertexColor",
    "body": "Ribbon_Modeling.GetVertexColor",
    "description": "GetVertexColor from Ribbon_Modeling"
  },
  "Ribbon_Modeling.IsDisplacementOn": {
    "prefix": "Ribbon_Modeling.IsDisplacementOn",
    "body": "Ribbon_Modeling.IsDisplacementOn",
    "description": "IsDisplacementOn from Ribbon_Modeling"
  },
  "Ribbon_Modeling.IsEdgeMode": {
    "prefix": "Ribbon_Modeling.IsEdgeMode",
    "body": "Ribbon_Modeling.IsEdgeMode",
    "description": "IsEdgeMode from Ribbon_Modeling"
  },
  "Ribbon_Modeling.IsEditablePoly": {
    "prefix": "Ribbon_Modeling.IsEditablePoly",
    "body": "Ribbon_Modeling.IsEditablePoly",
    "description": "IsEditablePoly from Ribbon_Modeling"
  },
  "Ribbon_Modeling.IsEditPolyMode": {
    "prefix": "Ribbon_Modeling.IsEditPolyMode",
    "body": "Ribbon_Modeling.IsEditPolyMode",
    "description": "IsEditPolyMode from Ribbon_Modeling"
  },
  "Ribbon_Modeling.IsEditSoftSelectionMode": {
    "prefix": "Ribbon_Modeling.IsEditSoftSelectionMode",
    "body": "Ribbon_Modeling.IsEditSoftSelectionMode",
    "description": "IsEditSoftSelectionMode from Ribbon_Modeling"
  },
  "Ribbon_Modeling.IsFaceMode": {
    "prefix": "Ribbon_Modeling.IsFaceMode",
    "body": "Ribbon_Modeling.IsFaceMode",
    "description": "IsFaceMode from Ribbon_Modeling"
  },
  "Ribbon_Modeling.IsNURMSOn": {
    "prefix": "Ribbon_Modeling.IsNURMSOn",
    "body": "Ribbon_Modeling.IsNURMSOn",
    "description": "IsNURMSOn from Ribbon_Modeling"
  },
  "Ribbon_Modeling.IsPaintSSMode": {
    "prefix": "Ribbon_Modeling.IsPaintSSMode",
    "body": "Ribbon_Modeling.IsPaintSSMode",
    "description": "IsPaintSSMode from Ribbon_Modeling"
  },
  "Ribbon_Modeling.IsSoftSelection": {
    "prefix": "Ribbon_Modeling.IsSoftSelection",
    "body": "Ribbon_Modeling.IsSoftSelection",
    "description": "IsSoftSelection from Ribbon_Modeling"
  },
  "Ribbon_Modeling.NURMSSepByMats": {
    "prefix": "Ribbon_Modeling.NURMSSepByMats",
    "body": "Ribbon_Modeling.NURMSSepByMats",
    "description": "NURMSSepByMats from Ribbon_Modeling"
  },
  "Ribbon_Modeling.NURMSSepBySmoothingGroups": {
    "prefix": "Ribbon_Modeling.NURMSSepBySmoothingGroups",
    "body": "Ribbon_Modeling.NURMSSepBySmoothingGroups",
    "description": "NURMSSepBySmoothingGroups from Ribbon_Modeling"
  },
  "Ribbon_Modeling.NURMSToggle": {
    "prefix": "Ribbon_Modeling.NURMSToggle",
    "body": "Ribbon_Modeling.NURMSToggle",
    "description": "NURMSToggle from Ribbon_Modeling"
  },
  "Ribbon_Modeling.paintdeformmode": {
    "prefix": "Ribbon_Modeling.paintdeformmode",
    "body": "Ribbon_Modeling.paintdeformmode",
    "description": "paintdeformmode from Ribbon_Modeling"
  },
  "Ribbon_Modeling.PaintSSMode": {
    "prefix": "Ribbon_Modeling.PaintSSMode",
    "body": "Ribbon_Modeling.PaintSSMode",
    "description": "PaintSSMode from Ribbon_Modeling"
  },
  "Ribbon_Modeling.Point3ToColor": {
    "prefix": "Ribbon_Modeling.Point3ToColor",
    "body": "Ribbon_Modeling.Point3ToColor",
    "description": "Point3ToColor from Ribbon_Modeling"
  },
  "Ribbon_Modeling.SetVertexColor": {
    "prefix": "Ribbon_Modeling.SetVertexColor",
    "body": "Ribbon_Modeling.SetVertexColor",
    "description": "SetVertexColor from Ribbon_Modeling"
  },
  "Ribbon_Modeling.SSToggle": {
    "prefix": "Ribbon_Modeling.SSToggle",
    "body": "Ribbon_Modeling.SSToggle",
    "description": "SSToggle from Ribbon_Modeling"
  },
  "Ribbon_Modeling.SubObjectPanelTitle": {
    "prefix": "Ribbon_Modeling.SubObjectPanelTitle",
    "body": "Ribbon_Modeling.SubObjectPanelTitle",
    "description": "SubObjectPanelTitle from Ribbon_Modeling"
  },
  "Ribbon_Modeling.SubobjectSwitch": {
    "prefix": "Ribbon_Modeling.SubobjectSwitch",
    "body": "Ribbon_Modeling.SubobjectSwitch",
    "description": "SubobjectSwitch from Ribbon_Modeling"
  },
  "Ribbon_Modeling.updateUI": {
    "prefix": "Ribbon_Modeling.updateUI",
    "body": "Ribbon_Modeling.updateUI",
    "description": "updateUI from Ribbon_Modeling"
  },
  "Ribbon_Modeling.ValidSelection": {
    "prefix": "Ribbon_Modeling.ValidSelection",
    "body": "Ribbon_Modeling.ValidSelection",
    "description": "ValidSelection from Ribbon_Modeling"
  },
  "Ribbon_Modeling.ValidSOMode": {
    "prefix": "Ribbon_Modeling.ValidSOMode",
    "body": "Ribbon_Modeling.ValidSOMode",
    "description": "ValidSOMode from Ribbon_Modeling"
  },
  "RTT_methods_struct._cached_RadiosityPreferences_computeRadiosity": {
    "prefix": "RTT_methods_struct._cached_RadiosityPreferences_computeRadiosity",
    "body": "RTT_methods_struct._cached_RadiosityPreferences_computeRadiosity",
    "description": "_cached_RadiosityPreferences_computeRadiosity from RTT_methods_struct"
  },
  "RTT_methods_struct._debug": {
    "prefix": "RTT_methods_struct._debug",
    "body": "RTT_methods_struct._debug",
    "description": "_debug from RTT_methods_struct"
  },
  "RTT_methods_struct._inNetRender": {
    "prefix": "RTT_methods_struct._inNetRender",
    "body": "RTT_methods_struct._inNetRender",
    "description": "_inNetRender from RTT_methods_struct"
  },
  "RTT_methods_struct._networkRender_BM": {
    "prefix": "RTT_methods_struct._networkRender_BM",
    "body": "RTT_methods_struct._networkRender_BM",
    "description": "_networkRender_BM from RTT_methods_struct"
  },
  "RTT_methods_struct.CheckAllBakeElementOutputDirsExist": {
    "prefix": "RTT_methods_struct.CheckAllBakeElementOutputDirsExist",
    "body": "RTT_methods_struct.CheckAllBakeElementOutputDirsExist",
    "description": "CheckAllBakeElementOutputDirsExist from RTT_methods_struct"
  },
  "RTT_methods_struct.CheckAllBakeElementOutputFilesExist": {
    "prefix": "RTT_methods_struct.CheckAllBakeElementOutputFilesExist",
    "body": "RTT_methods_struct.CheckAllBakeElementOutputFilesExist",
    "description": "CheckAllBakeElementOutputFilesExist from RTT_methods_struct"
  },
  "RTT_methods_struct.ConvertFrameStringToFrames": {
    "prefix": "RTT_methods_struct.ConvertFrameStringToFrames",
    "body": "RTT_methods_struct.ConvertFrameStringToFrames",
    "description": "ConvertFrameStringToFrames from RTT_methods_struct"
  },
  "RTT_methods_struct.FormatNumber": {
    "prefix": "RTT_methods_struct.FormatNumber",
    "body": "RTT_methods_struct.FormatNumber",
    "description": "FormatNumber from RTT_methods_struct"
  },
  "RTT_methods_struct.GetRenderFrames": {
    "prefix": "RTT_methods_struct.GetRenderFrames",
    "body": "RTT_methods_struct.GetRenderFrames",
    "description": "GetRenderFrames from RTT_methods_struct"
  },
  "RTT_methods_struct.GetRenderRegion": {
    "prefix": "RTT_methods_struct.GetRenderRegion",
    "body": "RTT_methods_struct.GetRenderRegion",
    "description": "GetRenderRegion from RTT_methods_struct"
  },
  "RTT_methods_struct.MakeBakeElementFileName": {
    "prefix": "RTT_methods_struct.MakeBakeElementFileName",
    "body": "RTT_methods_struct.MakeBakeElementFileName",
    "description": "MakeBakeElementFileName from RTT_methods_struct"
  },
  "RTT_methods_struct.MakeBumpSlotInfoStruct": {
    "prefix": "RTT_methods_struct.MakeBumpSlotInfoStruct",
    "body": "RTT_methods_struct.MakeBumpSlotInfoStruct",
    "description": "MakeBumpSlotInfoStruct from RTT_methods_struct"
  },
  "RTT_methods_struct.MakeFileNameValid": {
    "prefix": "RTT_methods_struct.MakeFileNameValid",
    "body": "RTT_methods_struct.MakeFileNameValid",
    "description": "MakeFileNameValid from RTT_methods_struct"
  },
  "RTT_methods_struct.NetBakeNode": {
    "prefix": "RTT_methods_struct.NetBakeNode",
    "body": "RTT_methods_struct.NetBakeNode",
    "description": "NetBakeNode from RTT_methods_struct"
  },
  "RTT_methods_struct.NetBakeNode_Render": {
    "prefix": "RTT_methods_struct.NetBakeNode_Render",
    "body": "RTT_methods_struct.NetBakeNode_Render",
    "description": "NetBakeNode_Render from RTT_methods_struct"
  },
  "RTT_methods_struct.ValidateDirectory": {
    "prefix": "RTT_methods_struct.ValidateDirectory",
    "body": "RTT_methods_struct.ValidateDirectory",
    "description": "ValidateDirectory from RTT_methods_struct"
  },
  "s_rc2mxs.convertRC": {
    "prefix": "s_rc2mxs.convertRC",
    "body": "s_rc2mxs.convertRC",
    "description": "convertRC from s_rc2mxs"
  },
  "s_rc2mxs.dimStr": {
    "prefix": "s_rc2mxs.dimStr",
    "body": "s_rc2mxs.dimStr",
    "description": "dimStr from s_rc2mxs"
  },
  "s_rc2mxs.fac": {
    "prefix": "s_rc2mxs.fac",
    "body": "s_rc2mxs.fac",
    "description": "fac from s_rc2mxs"
  },
  "s_rc2mxs.fltStr": {
    "prefix": "s_rc2mxs.fltStr",
    "body": "s_rc2mxs.fltStr",
    "description": "fltStr from s_rc2mxs"
  },
  "s_rc2mxs.isContinuation": {
    "prefix": "s_rc2mxs.isContinuation",
    "body": "s_rc2mxs.isContinuation",
    "description": "isContinuation from s_rc2mxs"
  },
  "s_rc2mxs.rc": {
    "prefix": "s_rc2mxs.rc",
    "body": "s_rc2mxs.rc",
    "description": "rc from s_rc2mxs"
  },
  "s_rc2mxs.rH": {
    "prefix": "s_rc2mxs.rH",
    "body": "s_rc2mxs.rH",
    "description": "rH from s_rc2mxs"
  },
  "s_rc2mxs.rW": {
    "prefix": "s_rc2mxs.rW",
    "body": "s_rc2mxs.rW",
    "description": "rW from s_rc2mxs"
  },
  "scanlineRender.antiAliasFilter": {
    "prefix": "scanlineRender.antiAliasFilter",
    "body": "scanlineRender.antiAliasFilter",
    "description": "antiAliasFilter from scanlineRender"
  },
  "scanlineRender.antiAliasFilterSize": {
    "prefix": "scanlineRender.antiAliasFilterSize",
    "body": "scanlineRender.antiAliasFilterSize",
    "description": "antiAliasFilterSize from scanlineRender"
  },
  "scanlineRender.antiAliasing": {
    "prefix": "scanlineRender.antiAliasing",
    "body": "scanlineRender.antiAliasing",
    "description": "antiAliasing from scanlineRender"
  },
  "scanlineRender.autoReflect": {
    "prefix": "scanlineRender.autoReflect",
    "body": "scanlineRender.autoReflect",
    "description": "autoReflect from scanlineRender"
  },
  "scanlineRender.autoReflectLevels": {
    "prefix": "scanlineRender.autoReflectLevels",
    "body": "scanlineRender.autoReflectLevels",
    "description": "autoReflectLevels from scanlineRender"
  },
  "scanlineRender.colorClampType": {
    "prefix": "scanlineRender.colorClampType",
    "body": "scanlineRender.colorClampType",
    "description": "colorClampType from scanlineRender"
  },
  "scanlineRender.conserveMemory": {
    "prefix": "scanlineRender.conserveMemory",
    "body": "scanlineRender.conserveMemory",
    "description": "conserveMemory from scanlineRender"
  },
  "scanlineRender.enablePixelSampler": {
    "prefix": "scanlineRender.enablePixelSampler",
    "body": "scanlineRender.enablePixelSampler",
    "description": "enablePixelSampler from scanlineRender"
  },
  "scanlineRender.enableSSE": {
    "prefix": "scanlineRender.enableSSE",
    "body": "scanlineRender.enableSSE",
    "description": "enableSSE from scanlineRender"
  },
  "scanlineRender.filterMaps": {
    "prefix": "scanlineRender.filterMaps",
    "body": "scanlineRender.filterMaps",
    "description": "filterMaps from scanlineRender"
  },
  "scanlineRender.forceWireframe": {
    "prefix": "scanlineRender.forceWireframe",
    "body": "scanlineRender.forceWireframe",
    "description": "forceWireframe from scanlineRender"
  },
  "scanlineRender.imageBlurDuration": {
    "prefix": "scanlineRender.imageBlurDuration",
    "body": "scanlineRender.imageBlurDuration",
    "description": "imageBlurDuration from scanlineRender"
  },
  "scanlineRender.imageBlurEnv": {
    "prefix": "scanlineRender.imageBlurEnv",
    "body": "scanlineRender.imageBlurEnv",
    "description": "imageBlurEnv from scanlineRender"
  },
  "scanlineRender.imageBlurTrans": {
    "prefix": "scanlineRender.imageBlurTrans",
    "body": "scanlineRender.imageBlurTrans",
    "description": "imageBlurTrans from scanlineRender"
  },
  "scanlineRender.imageMotionBlur": {
    "prefix": "scanlineRender.imageMotionBlur",
    "body": "scanlineRender.imageMotionBlur",
    "description": "imageMotionBlur from scanlineRender"
  },
  "scanlineRender.mapping": {
    "prefix": "scanlineRender.mapping",
    "body": "scanlineRender.mapping",
    "description": "mapping from scanlineRender"
  },
  "scanlineRender.objectBlurDuration": {
    "prefix": "scanlineRender.objectBlurDuration",
    "body": "scanlineRender.objectBlurDuration",
    "description": "objectBlurDuration from scanlineRender"
  },
  "scanlineRender.objectBlurSamples": {
    "prefix": "scanlineRender.objectBlurSamples",
    "body": "scanlineRender.objectBlurSamples",
    "description": "objectBlurSamples from scanlineRender"
  },
  "scanlineRender.objectBlurSubdivisions": {
    "prefix": "scanlineRender.objectBlurSubdivisions",
    "body": "scanlineRender.objectBlurSubdivisions",
    "description": "objectBlurSubdivisions from scanlineRender"
  },
  "scanlineRender.objectMotionBlur": {
    "prefix": "scanlineRender.objectMotionBlur",
    "body": "scanlineRender.objectMotionBlur",
    "description": "objectMotionBlur from scanlineRender"
  },
  "scanlineRender.shadows": {
    "prefix": "scanlineRender.shadows",
    "body": "scanlineRender.shadows",
    "description": "shadows from scanlineRender"
  },
  "SceneBRDF.baseName": {
    "prefix": "SceneBRDF.baseName",
    "body": "SceneBRDF.baseName",
    "description": "baseName from SceneBRDF"
  },
  "SceneBRDF.brdf_info": {
    "prefix": "SceneBRDF.brdf_info",
    "body": "SceneBRDF.brdf_info",
    "description": "brdf_info from SceneBRDF"
  },
  "SceneBRDF.mtl": {
    "prefix": "SceneBRDF.mtl",
    "body": "SceneBRDF.mtl",
    "description": "mtl from SceneBRDF"
  },
  "scenelight.baseName": {
    "prefix": "scenelight.baseName",
    "body": "scenelight.baseName",
    "description": "baseName from scenelight"
  },
  "scenelight.light_info": {
    "prefix": "scenelight.light_info",
    "body": "scenelight.light_info",
    "description": "light_info from scenelight"
  },
  "scenelight.maxLight": {
    "prefix": "scenelight.maxLight",
    "body": "scenelight.maxLight",
    "description": "maxLight from scenelight"
  },
  "SceneMtl.baseName": {
    "prefix": "SceneMtl.baseName",
    "body": "SceneMtl.baseName",
    "description": "baseName from SceneMtl"
  },
  "SceneMtl.mtl": {
    "prefix": "SceneMtl.mtl",
    "body": "SceneMtl.mtl",
    "description": "mtl from SceneMtl"
  },
  "SceneMtl.mtl_info": {
    "prefix": "SceneMtl.mtl_info",
    "body": "SceneMtl.mtl_info",
    "description": "mtl_info from SceneMtl"
  },
  "SceneMtl.needsBBox": {
    "prefix": "SceneMtl.needsBBox",
    "body": "SceneMtl.needsBBox",
    "description": "needsBBox from SceneMtl"
  },
  "SceneTexmap.baseName": {
    "prefix": "SceneTexmap.baseName",
    "body": "SceneTexmap.baseName",
    "description": "baseName from SceneTexmap"
  },
  "SceneTexmap.texmap": {
    "prefix": "SceneTexmap.texmap",
    "body": "SceneTexmap.texmap",
    "description": "texmap from SceneTexmap"
  },
  "SceneTexmap.texmap_info": {
    "prefix": "SceneTexmap.texmap_info",
    "body": "SceneTexmap.texmap_info",
    "description": "texmap_info from SceneTexmap"
  },
  "schematicView.close": {
    "prefix": "schematicView.close",
    "body": "schematicView.close",
    "description": "close from schematicView"
  },
  "schematicView.numSchematicViews": {
    "prefix": "schematicView.numSchematicViews",
    "body": "schematicView.numSchematicViews",
    "description": "numSchematicViews from schematicView"
  },
  "schematicView.open": {
    "prefix": "schematicView.open",
    "body": "schematicView.open",
    "description": "open from schematicView"
  },
  "schematicView.zoomSelected": {
    "prefix": "schematicView.zoomSelected",
    "body": "schematicView.zoomSelected",
    "description": "zoomSelected from schematicView"
  },
  "SculptNoiseIterationsSpinnerCallback.OnChanged": {
    "prefix": "SculptNoiseIterationsSpinnerCallback.OnChanged",
    "body": "SculptNoiseIterationsSpinnerCallback.OnChanged",
    "description": "OnChanged from SculptNoiseIterationsSpinnerCallback"
  },
  "SculptNoiseScaleSpinnerCallback.OnChanged": {
    "prefix": "SculptNoiseScaleSpinnerCallback.OnChanged",
    "body": "SculptNoiseScaleSpinnerCallback.OnChanged",
    "description": "OnChanged from SculptNoiseScaleSpinnerCallback"
  },
  "SculptNoiseSeedSpinnerCallback.OnChanged": {
    "prefix": "SculptNoiseSeedSpinnerCallback.OnChanged",
    "body": "SculptNoiseSeedSpinnerCallback.OnChanged",
    "description": "OnChanged from SculptNoiseSeedSpinnerCallback"
  },
  "SculptOffsetSpinnerCallback.OnChanged": {
    "prefix": "SculptOffsetSpinnerCallback.OnChanged",
    "body": "SculptOffsetSpinnerCallback.OnChanged",
    "description": "OnChanged from SculptOffsetSpinnerCallback"
  },
  "SculptSizeSpinnerCallback.OnChanged": {
    "prefix": "SculptSizeSpinnerCallback.OnChanged",
    "body": "SculptSizeSpinnerCallback.OnChanged",
    "description": "OnChanged from SculptSizeSpinnerCallback"
  },
  "SculptStrengthSpinnerCallback.OnChanged": {
    "prefix": "SculptStrengthSpinnerCallback.OnChanged",
    "body": "SculptStrengthSpinnerCallback.OnChanged",
    "description": "OnChanged from SculptStrengthSpinnerCallback"
  },
  "SelectByAngleSpinnerCallback.isEnabled": {
    "prefix": "SelectByAngleSpinnerCallback.isEnabled",
    "body": "SelectByAngleSpinnerCallback.isEnabled",
    "description": "isEnabled from SelectByAngleSpinnerCallback"
  },
  "SelectByAngleSpinnerCallback.OnChanged": {
    "prefix": "SelectByAngleSpinnerCallback.OnChanged",
    "body": "SelectByAngleSpinnerCallback.OnChanged",
    "description": "OnChanged from SelectByAngleSpinnerCallback"
  },
  "sessionPaths.add": {
    "prefix": "sessionPaths.add",
    "body": "sessionPaths.add",
    "description": "add from sessionPaths"
  },
  "sessionPaths.count": {
    "prefix": "sessionPaths.count",
    "body": "sessionPaths.count",
    "description": "count from sessionPaths"
  },
  "sessionPaths.get": {
    "prefix": "sessionPaths.get",
    "body": "sessionPaths.get",
    "description": "get from sessionPaths"
  },
  "SetFlowSpeedSpinnerCallback.OnChanged": {
    "prefix": "SetFlowSpeedSpinnerCallback.OnChanged",
    "body": "SetFlowSpeedSpinnerCallback.OnChanged",
    "description": "OnChanged from SetFlowSpeedSpinnerCallback"
  },
  "SetFlowSpinnerCallback.onButtonDown": {
    "prefix": "SetFlowSpinnerCallback.onButtonDown",
    "body": "SetFlowSpinnerCallback.onButtonDown",
    "description": "onButtonDown from SetFlowSpinnerCallback"
  },
  "SetFlowSpinnerCallback.onButtonUp": {
    "prefix": "SetFlowSpinnerCallback.onButtonUp",
    "body": "SetFlowSpinnerCallback.onButtonUp",
    "description": "onButtonUp from SetFlowSpinnerCallback"
  },
  "SetFlowSpinnerCallback.OnChanged": {
    "prefix": "SetFlowSpinnerCallback.OnChanged",
    "body": "SetFlowSpinnerCallback.OnChanged",
    "description": "OnChanged from SetFlowSpinnerCallback"
  },
  "setKey.bufferPresent": {
    "prefix": "setKey.bufferPresent",
    "body": "setKey.bufferPresent",
    "description": "bufferPresent from setKey"
  },
  "setKey.commitBuffer": {
    "prefix": "setKey.commitBuffer",
    "body": "setKey.commitBuffer",
    "description": "commitBuffer from setKey"
  },
  "setKey.revertBuffer": {
    "prefix": "setKey.revertBuffer",
    "body": "setKey.revertBuffer",
    "description": "revertBuffer from setKey"
  },
  "setKey.subAnimCommitBuffer": {
    "prefix": "setKey.subAnimCommitBuffer",
    "body": "setKey.subAnimCommitBuffer",
    "description": "subAnimCommitBuffer from setKey"
  },
  "setKey.subAnimRevertBuffer": {
    "prefix": "setKey.subAnimRevertBuffer",
    "body": "setKey.subAnimRevertBuffer",
    "description": "subAnimRevertBuffer from setKey"
  },
  "SetVertexAlpha_Spinner.isEnabled": {
    "prefix": "SetVertexAlpha_Spinner.isEnabled",
    "body": "SetVertexAlpha_Spinner.isEnabled",
    "description": "isEnabled from SetVertexAlpha_Spinner"
  },
  "SetVertexAlpha_Spinner.OnChanged": {
    "prefix": "SetVertexAlpha_Spinner.OnChanged",
    "body": "SetVertexAlpha_Spinner.OnChanged",
    "description": "OnChanged from SetVertexAlpha_Spinner"
  },
  "SetVertexColorColor_ColorSwatch.isEnabled": {
    "prefix": "SetVertexColorColor_ColorSwatch.isEnabled",
    "body": "SetVertexColorColor_ColorSwatch.isEnabled",
    "description": "isEnabled from SetVertexColorColor_ColorSwatch"
  },
  "SetVertexColorColor_ColorSwatch.OnChanged": {
    "prefix": "SetVertexColorColor_ColorSwatch.OnChanged",
    "body": "SetVertexColorColor_ColorSwatch.OnChanged",
    "description": "OnChanged from SetVertexColorColor_ColorSwatch"
  },
  "SetVertexColorIllum_ColorSwatch.isEnabled": {
    "prefix": "SetVertexColorIllum_ColorSwatch.isEnabled",
    "body": "SetVertexColorIllum_ColorSwatch.isEnabled",
    "description": "isEnabled from SetVertexColorIllum_ColorSwatch"
  },
  "SetVertexColorIllum_ColorSwatch.OnChanged": {
    "prefix": "SetVertexColorIllum_ColorSwatch.OnChanged",
    "body": "SetVertexColorIllum_ColorSwatch.OnChanged",
    "description": "OnChanged from SetVertexColorIllum_ColorSwatch"
  },
  "skinOps.AddBone": {
    "prefix": "skinOps.AddBone",
    "body": "skinOps.AddBone",
    "description": "AddBone from skinOps"
  },
  "skinOps.addBoneFromViewEnd": {
    "prefix": "skinOps.addBoneFromViewEnd",
    "body": "skinOps.addBoneFromViewEnd",
    "description": "addBoneFromViewEnd from skinOps"
  },
  "skinOps.addBoneFromViewStart": {
    "prefix": "skinOps.addBoneFromViewStart",
    "body": "skinOps.addBoneFromViewStart",
    "description": "addBoneFromViewStart from skinOps"
  },
  "skinOps.AddCrossSection": {
    "prefix": "skinOps.AddCrossSection",
    "body": "skinOps.AddCrossSection",
    "description": "AddCrossSection from skinOps"
  },
  "skinOps.addWeight": {
    "prefix": "skinOps.addWeight",
    "body": "skinOps.addWeight",
    "description": "addWeight from skinOps"
  },
  "skinOps.bakeSelectedVerts": {
    "prefix": "skinOps.bakeSelectedVerts",
    "body": "skinOps.bakeSelectedVerts",
    "description": "bakeSelectedVerts from skinOps"
  },
  "skinOps.blendSelected": {
    "prefix": "skinOps.blendSelected",
    "body": "skinOps.blendSelected",
    "description": "blendSelected from skinOps"
  },
  "skinOps.buttonAdd": {
    "prefix": "skinOps.buttonAdd",
    "body": "skinOps.buttonAdd",
    "description": "buttonAdd from skinOps"
  },
  "skinOps.buttonAddCrossSection": {
    "prefix": "skinOps.buttonAddCrossSection",
    "body": "skinOps.buttonAddCrossSection",
    "description": "buttonAddCrossSection from skinOps"
  },
  "skinOps.buttonAddGizmo": {
    "prefix": "skinOps.buttonAddGizmo",
    "body": "skinOps.buttonAddGizmo",
    "description": "buttonAddGizmo from skinOps"
  },
  "skinOps.buttonCopyGizmo": {
    "prefix": "skinOps.buttonCopyGizmo",
    "body": "skinOps.buttonCopyGizmo",
    "description": "buttonCopyGizmo from skinOps"
  },
  "skinOps.buttonExclude": {
    "prefix": "skinOps.buttonExclude",
    "body": "skinOps.buttonExclude",
    "description": "buttonExclude from skinOps"
  },
  "skinOps.buttonInclude": {
    "prefix": "skinOps.buttonInclude",
    "body": "skinOps.buttonInclude",
    "description": "buttonInclude from skinOps"
  },
  "skinOps.buttonPaint": {
    "prefix": "skinOps.buttonPaint",
    "body": "skinOps.buttonPaint",
    "description": "buttonPaint from skinOps"
  },
  "skinOps.buttonPasteGizmo": {
    "prefix": "skinOps.buttonPasteGizmo",
    "body": "skinOps.buttonPasteGizmo",
    "description": "buttonPasteGizmo from skinOps"
  },
  "skinOps.buttonRemove": {
    "prefix": "skinOps.buttonRemove",
    "body": "skinOps.buttonRemove",
    "description": "buttonRemove from skinOps"
  },
  "skinOps.buttonRemoveCrossSection": {
    "prefix": "skinOps.buttonRemoveCrossSection",
    "body": "skinOps.buttonRemoveCrossSection",
    "description": "buttonRemoveCrossSection from skinOps"
  },
  "skinOps.buttonRemoveGizmo": {
    "prefix": "skinOps.buttonRemoveGizmo",
    "body": "skinOps.buttonRemoveGizmo",
    "description": "buttonRemoveGizmo from skinOps"
  },
  "skinOps.buttonSelectExcluded": {
    "prefix": "skinOps.buttonSelectExcluded",
    "body": "skinOps.buttonSelectExcluded",
    "description": "buttonSelectExcluded from skinOps"
  },
  "skinOps.buttonWeightTable": {
    "prefix": "skinOps.buttonWeightTable",
    "body": "skinOps.buttonWeightTable",
    "description": "buttonWeightTable from skinOps"
  },
  "skinOps.closeWeightTable": {
    "prefix": "skinOps.closeWeightTable",
    "body": "skinOps.closeWeightTable",
    "description": "closeWeightTable from skinOps"
  },
  "skinOps.closeWeightTool": {
    "prefix": "skinOps.closeWeightTool",
    "body": "skinOps.closeWeightTool",
    "description": "closeWeightTool from skinOps"
  },
  "skinOps.copySelectedBone": {
    "prefix": "skinOps.copySelectedBone",
    "body": "skinOps.copySelectedBone",
    "description": "copySelectedBone from skinOps"
  },
  "skinOps.copyWeights": {
    "prefix": "skinOps.copyWeights",
    "body": "skinOps.copyWeights",
    "description": "copyWeights from skinOps"
  },
  "skinOps.enableGizmo": {
    "prefix": "skinOps.enableGizmo",
    "body": "skinOps.enableGizmo",
    "description": "enableGizmo from skinOps"
  },
  "skinOps.GetBoneName": {
    "prefix": "skinOps.GetBoneName",
    "body": "skinOps.GetBoneName",
    "description": "GetBoneName from skinOps"
  },
  "skinOps.getBonePropEnvelopeVisible": {
    "prefix": "skinOps.getBonePropEnvelopeVisible",
    "body": "skinOps.getBonePropEnvelopeVisible",
    "description": "getBonePropEnvelopeVisible from skinOps"
  },
  "skinOps.getBonePropFalloff": {
    "prefix": "skinOps.getBonePropFalloff",
    "body": "skinOps.getBonePropFalloff",
    "description": "getBonePropFalloff from skinOps"
  },
  "skinOps.getBonePropRelative": {
    "prefix": "skinOps.getBonePropRelative",
    "body": "skinOps.getBonePropRelative",
    "description": "getBonePropRelative from skinOps"
  },
  "skinOps.GetCrossSectionU": {
    "prefix": "skinOps.GetCrossSectionU",
    "body": "skinOps.GetCrossSectionU",
    "description": "GetCrossSectionU from skinOps"
  },
  "skinOps.GetEndPoint": {
    "prefix": "skinOps.GetEndPoint",
    "body": "skinOps.GetEndPoint",
    "description": "GetEndPoint from skinOps"
  },
  "skinOps.GetInnerRadius": {
    "prefix": "skinOps.GetInnerRadius",
    "body": "skinOps.GetInnerRadius",
    "description": "GetInnerRadius from skinOps"
  },
  "skinOps.GetNumberBones": {
    "prefix": "skinOps.GetNumberBones",
    "body": "skinOps.GetNumberBones",
    "description": "GetNumberBones from skinOps"
  },
  "skinOps.GetNumberCrossSections": {
    "prefix": "skinOps.GetNumberCrossSections",
    "body": "skinOps.GetNumberCrossSections",
    "description": "GetNumberCrossSections from skinOps"
  },
  "skinOps.getNumberOfGizmos": {
    "prefix": "skinOps.getNumberOfGizmos",
    "body": "skinOps.getNumberOfGizmos",
    "description": "getNumberOfGizmos from skinOps"
  },
  "skinOps.getNumberOfGizmoTypes": {
    "prefix": "skinOps.getNumberOfGizmoTypes",
    "body": "skinOps.getNumberOfGizmoTypes",
    "description": "getNumberOfGizmoTypes from skinOps"
  },
  "skinOps.GetNumberVertices": {
    "prefix": "skinOps.GetNumberVertices",
    "body": "skinOps.GetNumberVertices",
    "description": "GetNumberVertices from skinOps"
  },
  "skinOps.GetOuterRadius": {
    "prefix": "skinOps.GetOuterRadius",
    "body": "skinOps.GetOuterRadius",
    "description": "GetOuterRadius from skinOps"
  },
  "skinOps.GetSelectedBone": {
    "prefix": "skinOps.GetSelectedBone",
    "body": "skinOps.GetSelectedBone",
    "description": "GetSelectedBone from skinOps"
  },
  "skinOps.getSelectedBonePropEnvelopeVisible": {
    "prefix": "skinOps.getSelectedBonePropEnvelopeVisible",
    "body": "skinOps.getSelectedBonePropEnvelopeVisible",
    "description": "getSelectedBonePropEnvelopeVisible from skinOps"
  },
  "skinOps.getSelectedBonePropFalloff": {
    "prefix": "skinOps.getSelectedBonePropFalloff",
    "body": "skinOps.getSelectedBonePropFalloff",
    "description": "getSelectedBonePropFalloff from skinOps"
  },
  "skinOps.getSelectedBonePropRelative": {
    "prefix": "skinOps.getSelectedBonePropRelative",
    "body": "skinOps.getSelectedBonePropRelative",
    "description": "getSelectedBonePropRelative from skinOps"
  },
  "skinOps.GetSelectedCrossSectionIndex": {
    "prefix": "skinOps.GetSelectedCrossSectionIndex",
    "body": "skinOps.GetSelectedCrossSectionIndex",
    "description": "GetSelectedCrossSectionIndex from skinOps"
  },
  "skinOps.GetSelectedCrossSectionIsInner": {
    "prefix": "skinOps.GetSelectedCrossSectionIsInner",
    "body": "skinOps.GetSelectedCrossSectionIsInner",
    "description": "GetSelectedCrossSectionIsInner from skinOps"
  },
  "skinOps.getSelectedGizmo": {
    "prefix": "skinOps.getSelectedGizmo",
    "body": "skinOps.getSelectedGizmo",
    "description": "getSelectedGizmo from skinOps"
  },
  "skinOps.getSelectedGizmoType": {
    "prefix": "skinOps.getSelectedGizmoType",
    "body": "skinOps.getSelectedGizmoType",
    "description": "getSelectedGizmoType from skinOps"
  },
  "skinOps.GetStartPoint": {
    "prefix": "skinOps.GetStartPoint",
    "body": "skinOps.GetStartPoint",
    "description": "GetStartPoint from skinOps"
  },
  "skinOps.GetVertexWeight": {
    "prefix": "skinOps.GetVertexWeight",
    "body": "skinOps.GetVertexWeight",
    "description": "GetVertexWeight from skinOps"
  },
  "skinOps.GetVertexWeightBoneID": {
    "prefix": "skinOps.GetVertexWeightBoneID",
    "body": "skinOps.GetVertexWeightBoneID",
    "description": "GetVertexWeightBoneID from skinOps"
  },
  "skinOps.GetVertexWeightCount": {
    "prefix": "skinOps.GetVertexWeightCount",
    "body": "skinOps.GetVertexWeightCount",
    "description": "GetVertexWeightCount from skinOps"
  },
  "skinOps.gizmoResetRotationPlane": {
    "prefix": "skinOps.gizmoResetRotationPlane",
    "body": "skinOps.gizmoResetRotationPlane",
    "description": "gizmoResetRotationPlane from skinOps"
  },
  "skinOps.growSelection": {
    "prefix": "skinOps.growSelection",
    "body": "skinOps.growSelection",
    "description": "growSelection from skinOps"
  },
  "skinOps.invalidate": {
    "prefix": "skinOps.invalidate",
    "body": "skinOps.invalidate",
    "description": "invalidate from skinOps"
  },
  "skinOps.isBoneSelected": {
    "prefix": "skinOps.isBoneSelected",
    "body": "skinOps.isBoneSelected",
    "description": "isBoneSelected from skinOps"
  },
  "skinOps.isRigidHandle": {
    "prefix": "skinOps.isRigidHandle",
    "body": "skinOps.isRigidHandle",
    "description": "isRigidHandle from skinOps"
  },
  "skinOps.isUnNormalizeVertex": {
    "prefix": "skinOps.isUnNormalizeVertex",
    "body": "skinOps.isUnNormalizeVertex",
    "description": "isUnNormalizeVertex from skinOps"
  },
  "skinOps.IsVertexModified": {
    "prefix": "skinOps.IsVertexModified",
    "body": "skinOps.IsVertexModified",
    "description": "IsVertexModified from skinOps"
  },
  "skinOps.IsVertexSelected": {
    "prefix": "skinOps.IsVertexSelected",
    "body": "skinOps.IsVertexSelected",
    "description": "IsVertexSelected from skinOps"
  },
  "skinOps.isWeightTableOpen": {
    "prefix": "skinOps.isWeightTableOpen",
    "body": "skinOps.isWeightTableOpen",
    "description": "isWeightTableOpen from skinOps"
  },
  "skinOps.isWeightToolOpen": {
    "prefix": "skinOps.isWeightToolOpen",
    "body": "skinOps.isWeightToolOpen",
    "description": "isWeightToolOpen from skinOps"
  },
  "skinOps.loadEnvelope": {
    "prefix": "skinOps.loadEnvelope",
    "body": "skinOps.loadEnvelope",
    "description": "loadEnvelope from skinOps"
  },
  "skinOps.loadEnvelopeAsASCII": {
    "prefix": "skinOps.loadEnvelopeAsASCII",
    "body": "skinOps.loadEnvelopeAsASCII",
    "description": "loadEnvelopeAsASCII from skinOps"
  },
  "skinOps.loopSelection": {
    "prefix": "skinOps.loopSelection",
    "body": "skinOps.loopSelection",
    "description": "loopSelection from skinOps"
  },
  "skinOps.mirrorPaste": {
    "prefix": "skinOps.mirrorPaste",
    "body": "skinOps.mirrorPaste",
    "description": "mirrorPaste from skinOps"
  },
  "skinOps.mirrorPasteBone": {
    "prefix": "skinOps.mirrorPasteBone",
    "body": "skinOps.mirrorPasteBone",
    "description": "mirrorPasteBone from skinOps"
  },
  "skinOps.multiRemove": {
    "prefix": "skinOps.multiRemove",
    "body": "skinOps.multiRemove",
    "description": "multiRemove from skinOps"
  },
  "skinOps.paintOptionsButton": {
    "prefix": "skinOps.paintOptionsButton",
    "body": "skinOps.paintOptionsButton",
    "description": "paintOptionsButton from skinOps"
  },
  "skinOps.paintWeightsButton": {
    "prefix": "skinOps.paintWeightsButton",
    "body": "skinOps.paintWeightsButton",
    "description": "paintWeightsButton from skinOps"
  },
  "skinOps.pasteAllBones": {
    "prefix": "skinOps.pasteAllBones",
    "body": "skinOps.pasteAllBones",
    "description": "pasteAllBones from skinOps"
  },
  "skinOps.pasteAllVerts": {
    "prefix": "skinOps.pasteAllVerts",
    "body": "skinOps.pasteAllVerts",
    "description": "pasteAllVerts from skinOps"
  },
  "skinOps.pasteToAllBones": {
    "prefix": "skinOps.pasteToAllBones",
    "body": "skinOps.pasteToAllBones",
    "description": "pasteToAllBones from skinOps"
  },
  "skinOps.pasteToBone": {
    "prefix": "skinOps.pasteToBone",
    "body": "skinOps.pasteToBone",
    "description": "pasteToBone from skinOps"
  },
  "skinOps.pasteToSelectedBone": {
    "prefix": "skinOps.pasteToSelectedBone",
    "body": "skinOps.pasteToSelectedBone",
    "description": "pasteToSelectedBone from skinOps"
  },
  "skinOps.pasteWeights": {
    "prefix": "skinOps.pasteWeights",
    "body": "skinOps.pasteWeights",
    "description": "pasteWeights from skinOps"
  },
  "skinOps.pasteWeightsByPos": {
    "prefix": "skinOps.pasteWeightsByPos",
    "body": "skinOps.pasteWeightsByPos",
    "description": "pasteWeightsByPos from skinOps"
  },
  "skinOps.RemoveBone": {
    "prefix": "skinOps.RemoveBone",
    "body": "skinOps.RemoveBone",
    "description": "RemoveBone from skinOps"
  },
  "skinOps.RemoveCrossSection": {
    "prefix": "skinOps.RemoveCrossSection",
    "body": "skinOps.RemoveCrossSection",
    "description": "RemoveCrossSection from skinOps"
  },
  "skinOps.RemoveZeroWeights": {
    "prefix": "skinOps.RemoveZeroWeights",
    "body": "skinOps.RemoveZeroWeights",
    "description": "RemoveZeroWeights from skinOps"
  },
  "skinOps.ReplaceVertexWeights": {
    "prefix": "skinOps.ReplaceVertexWeights",
    "body": "skinOps.ReplaceVertexWeights",
    "description": "ReplaceVertexWeights from skinOps"
  },
  "skinOps.resetAllBones": {
    "prefix": "skinOps.resetAllBones",
    "body": "skinOps.resetAllBones",
    "description": "resetAllBones from skinOps"
  },
  "skinOps.resetSelectedBone": {
    "prefix": "skinOps.resetSelectedBone",
    "body": "skinOps.resetSelectedBone",
    "description": "resetSelectedBone from skinOps"
  },
  "skinOps.resetSelectedVerts": {
    "prefix": "skinOps.resetSelectedVerts",
    "body": "skinOps.resetSelectedVerts",
    "description": "resetSelectedVerts from skinOps"
  },
  "skinOps.rigidHandle": {
    "prefix": "skinOps.rigidHandle",
    "body": "skinOps.rigidHandle",
    "description": "rigidHandle from skinOps"
  },
  "skinOps.rigidVertex": {
    "prefix": "skinOps.rigidVertex",
    "body": "skinOps.rigidVertex",
    "description": "rigidVertex from skinOps"
  },
  "skinOps.ringSelection": {
    "prefix": "skinOps.ringSelection",
    "body": "skinOps.ringSelection",
    "description": "ringSelection from skinOps"
  },
  "skinOps.saveEnvelope": {
    "prefix": "skinOps.saveEnvelope",
    "body": "skinOps.saveEnvelope",
    "description": "saveEnvelope from skinOps"
  },
  "skinOps.SaveEnvelopeAsASCII": {
    "prefix": "skinOps.SaveEnvelopeAsASCII",
    "body": "skinOps.SaveEnvelopeAsASCII",
    "description": "SaveEnvelopeAsASCII from skinOps"
  },
  "skinOps.scaleWeight": {
    "prefix": "skinOps.scaleWeight",
    "body": "skinOps.scaleWeight",
    "description": "scaleWeight from skinOps"
  },
  "skinOps.SelectBone": {
    "prefix": "skinOps.SelectBone",
    "body": "skinOps.SelectBone",
    "description": "SelectBone from skinOps"
  },
  "skinOps.selectBoneByNode": {
    "prefix": "skinOps.selectBoneByNode",
    "body": "skinOps.selectBoneByNode",
    "description": "selectBoneByNode from skinOps"
  },
  "skinOps.selectChild": {
    "prefix": "skinOps.selectChild",
    "body": "skinOps.selectChild",
    "description": "selectChild from skinOps"
  },
  "skinOps.selectCrossSection": {
    "prefix": "skinOps.selectCrossSection",
    "body": "skinOps.selectCrossSection",
    "description": "selectCrossSection from skinOps"
  },
  "skinOps.selectEndPoint": {
    "prefix": "skinOps.selectEndPoint",
    "body": "skinOps.selectEndPoint",
    "description": "selectEndPoint from skinOps"
  },
  "skinOps.selectGizmo": {
    "prefix": "skinOps.selectGizmo",
    "body": "skinOps.selectGizmo",
    "description": "selectGizmo from skinOps"
  },
  "skinOps.selectGizmoType": {
    "prefix": "skinOps.selectGizmoType",
    "body": "skinOps.selectGizmoType",
    "description": "selectGizmoType from skinOps"
  },
  "skinOps.selectMirrorBones": {
    "prefix": "skinOps.selectMirrorBones",
    "body": "skinOps.selectMirrorBones",
    "description": "selectMirrorBones from skinOps"
  },
  "skinOps.selectNextBone": {
    "prefix": "skinOps.selectNextBone",
    "body": "skinOps.selectNextBone",
    "description": "selectNextBone from skinOps"
  },
  "skinOps.selectNextSibling": {
    "prefix": "skinOps.selectNextSibling",
    "body": "skinOps.selectNextSibling",
    "description": "selectNextSibling from skinOps"
  },
  "skinOps.selectParent": {
    "prefix": "skinOps.selectParent",
    "body": "skinOps.selectParent",
    "description": "selectParent from skinOps"
  },
  "skinOps.selectPreviousBone": {
    "prefix": "skinOps.selectPreviousBone",
    "body": "skinOps.selectPreviousBone",
    "description": "selectPreviousBone from skinOps"
  },
  "skinOps.selectPreviousSibling": {
    "prefix": "skinOps.selectPreviousSibling",
    "body": "skinOps.selectPreviousSibling",
    "description": "selectPreviousSibling from skinOps"
  },
  "skinOps.selectStartPoint": {
    "prefix": "skinOps.selectStartPoint",
    "body": "skinOps.selectStartPoint",
    "description": "selectStartPoint from skinOps"
  },
  "skinOps.SelectVertices": {
    "prefix": "skinOps.SelectVertices",
    "body": "skinOps.SelectVertices",
    "description": "SelectVertices from skinOps"
  },
  "skinOps.selectVerticesByBone": {
    "prefix": "skinOps.selectVerticesByBone",
    "body": "skinOps.selectVerticesByBone",
    "description": "selectVerticesByBone from skinOps"
  },
  "skinOps.setBonePropEnvelopeVisible": {
    "prefix": "skinOps.setBonePropEnvelopeVisible",
    "body": "skinOps.setBonePropEnvelopeVisible",
    "description": "setBonePropEnvelopeVisible from skinOps"
  },
  "skinOps.setBonePropFalloff": {
    "prefix": "skinOps.setBonePropFalloff",
    "body": "skinOps.setBonePropFalloff",
    "description": "setBonePropFalloff from skinOps"
  },
  "skinOps.setBonePropRelative": {
    "prefix": "skinOps.setBonePropRelative",
    "body": "skinOps.setBonePropRelative",
    "description": "setBonePropRelative from skinOps"
  },
  "skinOps.SetCrossSectionU": {
    "prefix": "skinOps.SetCrossSectionU",
    "body": "skinOps.SetCrossSectionU",
    "description": "SetCrossSectionU from skinOps"
  },
  "skinOps.SetEndPoint": {
    "prefix": "skinOps.SetEndPoint",
    "body": "skinOps.SetEndPoint",
    "description": "SetEndPoint from skinOps"
  },
  "skinOps.SetInnerRadius": {
    "prefix": "skinOps.SetInnerRadius",
    "body": "skinOps.SetInnerRadius",
    "description": "SetInnerRadius from skinOps"
  },
  "skinOps.setMirrorTM": {
    "prefix": "skinOps.setMirrorTM",
    "body": "skinOps.setMirrorTM",
    "description": "setMirrorTM from skinOps"
  },
  "skinOps.SetOuterRadius": {
    "prefix": "skinOps.SetOuterRadius",
    "body": "skinOps.SetOuterRadius",
    "description": "SetOuterRadius from skinOps"
  },
  "skinOps.setSelectedBonePropEnvelopeVisible": {
    "prefix": "skinOps.setSelectedBonePropEnvelopeVisible",
    "body": "skinOps.setSelectedBonePropEnvelopeVisible",
    "description": "setSelectedBonePropEnvelopeVisible from skinOps"
  },
  "skinOps.setSelectedBonePropFalloff": {
    "prefix": "skinOps.setSelectedBonePropFalloff",
    "body": "skinOps.setSelectedBonePropFalloff",
    "description": "setSelectedBonePropFalloff from skinOps"
  },
  "skinOps.setSelectedBonePropRelative": {
    "prefix": "skinOps.setSelectedBonePropRelative",
    "body": "skinOps.setSelectedBonePropRelative",
    "description": "setSelectedBonePropRelative from skinOps"
  },
  "skinOps.SetSelectedCrossSection": {
    "prefix": "skinOps.SetSelectedCrossSection",
    "body": "skinOps.SetSelectedCrossSection",
    "description": "SetSelectedCrossSection from skinOps"
  },
  "skinOps.SetStartPoint": {
    "prefix": "skinOps.SetStartPoint",
    "body": "skinOps.SetStartPoint",
    "description": "SetStartPoint from skinOps"
  },
  "skinOps.SetVertexWeights": {
    "prefix": "skinOps.SetVertexWeights",
    "body": "skinOps.SetVertexWeights",
    "description": "SetVertexWeights from skinOps"
  },
  "skinOps.SetWeight": {
    "prefix": "skinOps.SetWeight",
    "body": "skinOps.SetWeight",
    "description": "SetWeight from skinOps"
  },
  "skinOps.shrinkSelection": {
    "prefix": "skinOps.shrinkSelection",
    "body": "skinOps.shrinkSelection",
    "description": "shrinkSelection from skinOps"
  },
  "skinOps.unNormalizeVertex": {
    "prefix": "skinOps.unNormalizeVertex",
    "body": "skinOps.unNormalizeVertex",
    "description": "unNormalizeVertex from skinOps"
  },
  "skinOps.updateMirror": {
    "prefix": "skinOps.updateMirror",
    "body": "skinOps.updateMirror",
    "description": "updateMirror from skinOps"
  },
  "skinOps.WeightTable": {
    "prefix": "skinOps.WeightTable",
    "body": "skinOps.WeightTable",
    "description": "WeightTable from skinOps"
  },
  "skinOps.weightTool": {
    "prefix": "skinOps.weightTool",
    "body": "skinOps.weightTool",
    "description": "weightTool from skinOps"
  },
  "skinOps.ZoomToBone": {
    "prefix": "skinOps.ZoomToBone",
    "body": "skinOps.ZoomToBone",
    "description": "ZoomToBone from skinOps"
  },
  "skinOps.ZoomToGizmo": {
    "prefix": "skinOps.ZoomToGizmo",
    "body": "skinOps.ZoomToGizmo",
    "description": "ZoomToGizmo from skinOps"
  },
  "snapMode.active": {
    "prefix": "snapMode.active",
    "body": "snapMode.active",
    "description": "active from snapMode"
  },
  "snapMode.axisConstraint": {
    "prefix": "snapMode.axisConstraint",
    "body": "snapMode.axisConstraint",
    "description": "axisConstraint from snapMode"
  },
  "snapMode.display": {
    "prefix": "snapMode.display",
    "body": "snapMode.display",
    "description": "display from snapMode"
  },
  "snapMode.displayRubberBand": {
    "prefix": "snapMode.displayRubberBand",
    "body": "snapMode.displayRubberBand",
    "description": "displayRubberBand from snapMode"
  },
  "snapMode.flags": {
    "prefix": "snapMode.flags",
    "body": "snapMode.flags",
    "description": "flags from snapMode"
  },
  "snapMode.getOSnapItemActive": {
    "prefix": "snapMode.getOSnapItemActive",
    "body": "snapMode.getOSnapItemActive",
    "description": "getOSnapItemActive from snapMode"
  },
  "snapMode.getOSnapItemName": {
    "prefix": "snapMode.getOSnapItemName",
    "body": "snapMode.getOSnapItemName",
    "description": "getOSnapItemName from snapMode"
  },
  "snapMode.getOSnapName": {
    "prefix": "snapMode.getOSnapName",
    "body": "snapMode.getOSnapName",
    "description": "getOSnapName from snapMode"
  },
  "snapMode.getOSnapNumItems": {
    "prefix": "snapMode.getOSnapNumItems",
    "body": "snapMode.getOSnapNumItems",
    "description": "getOSnapNumItems from snapMode"
  },
  "snapMode.hilite": {
    "prefix": "snapMode.hilite",
    "body": "snapMode.hilite",
    "description": "hilite from snapMode"
  },
  "snapMode.hit": {
    "prefix": "snapMode.hit",
    "body": "snapMode.hit",
    "description": "hit from snapMode"
  },
  "snapMode.hitPoint": {
    "prefix": "snapMode.hitPoint",
    "body": "snapMode.hitPoint",
    "description": "hitPoint from snapMode"
  },
  "snapMode.markSize": {
    "prefix": "snapMode.markSize",
    "body": "snapMode.markSize",
    "description": "markSize from snapMode"
  },
  "snapMode.node": {
    "prefix": "snapMode.node",
    "body": "snapMode.node",
    "description": "node from snapMode"
  },
  "snapMode.numOSnaps": {
    "prefix": "snapMode.numOSnaps",
    "body": "snapMode.numOSnaps",
    "description": "numOSnaps from snapMode"
  },
  "snapMode.OKForRelativeSnap": {
    "prefix": "snapMode.OKForRelativeSnap",
    "body": "snapMode.OKForRelativeSnap",
    "description": "OKForRelativeSnap from snapMode"
  },
  "snapMode.refPoint": {
    "prefix": "snapMode.refPoint",
    "body": "snapMode.refPoint",
    "description": "refPoint from snapMode"
  },
  "snapMode.screenHitPoint": {
    "prefix": "snapMode.screenHitPoint",
    "body": "snapMode.screenHitPoint",
    "description": "screenHitPoint from snapMode"
  },
  "snapMode.setOSnapItemActive": {
    "prefix": "snapMode.setOSnapItemActive",
    "body": "snapMode.setOSnapItemActive",
    "description": "setOSnapItemActive from snapMode"
  },
  "snapMode.snapPreviewRadius": {
    "prefix": "snapMode.snapPreviewRadius",
    "body": "snapMode.snapPreviewRadius",
    "description": "snapPreviewRadius from snapMode"
  },
  "snapMode.snapRadius": {
    "prefix": "snapMode.snapRadius",
    "body": "snapMode.snapRadius",
    "description": "snapRadius from snapMode"
  },
  "snapMode.strength": {
    "prefix": "snapMode.strength",
    "body": "snapMode.strength",
    "description": "strength from snapMode"
  },
  "snapMode.toFrozen": {
    "prefix": "snapMode.toFrozen",
    "body": "snapMode.toFrozen",
    "description": "toFrozen from snapMode"
  },
  "snapMode.topRefPoint": {
    "prefix": "snapMode.topRefPoint",
    "body": "snapMode.topRefPoint",
    "description": "topRefPoint from snapMode"
  },
  "snapMode.type": {
    "prefix": "snapMode.type",
    "body": "snapMode.type",
    "description": "type from snapMode"
  },
  "snapMode.useAxisCenterAsStartSnapPoint": {
    "prefix": "snapMode.useAxisCenterAsStartSnapPoint",
    "body": "snapMode.useAxisCenterAsStartSnapPoint",
    "description": "useAxisCenterAsStartSnapPoint from snapMode"
  },
  "snapMode.worldHitpoint": {
    "prefix": "snapMode.worldHitpoint",
    "body": "snapMode.worldHitpoint",
    "description": "worldHitpoint from snapMode"
  },
  "Snaps.ToggleSnap": {
    "prefix": "Snaps.ToggleSnap",
    "body": "Snaps.ToggleSnap",
    "description": "ToggleSnap from Snaps"
  },
  "SortedArray_Struct.AddItem": {
    "prefix": "SortedArray_Struct.AddItem",
    "body": "SortedArray_Struct.AddItem",
    "description": "AddItem from SortedArray_Struct"
  },
  "SortedArray_Struct.comparator": {
    "prefix": "SortedArray_Struct.comparator",
    "body": "SortedArray_Struct.comparator",
    "description": "comparator from SortedArray_Struct"
  },
  "SortedArray_Struct.DefaultComparator": {
    "prefix": "SortedArray_Struct.DefaultComparator",
    "body": "SortedArray_Struct.DefaultComparator",
    "description": "DefaultComparator from SortedArray_Struct"
  },
  "SortedArray_Struct.init": {
    "prefix": "SortedArray_Struct.init",
    "body": "SortedArray_Struct.init",
    "description": "init from SortedArray_Struct"
  },
  "SortedArray_Struct.itemArray": {
    "prefix": "SortedArray_Struct.itemArray",
    "body": "SortedArray_Struct.itemArray",
    "description": "itemArray from SortedArray_Struct"
  },
  "SortedArray_Struct.SetIntersection": {
    "prefix": "SortedArray_Struct.SetIntersection",
    "body": "SortedArray_Struct.SetIntersection",
    "description": "SetIntersection from SortedArray_Struct"
  },
  "SortedArray_Struct.SetUnion": {
    "prefix": "SortedArray_Struct.SetUnion",
    "body": "SortedArray_Struct.SetUnion",
    "description": "SetUnion from SortedArray_Struct"
  },
  "splineOps.attachMultiple": {
    "prefix": "splineOps.attachMultiple",
    "body": "splineOps.attachMultiple",
    "description": "attachMultiple from splineOps"
  },
  "splineOps.close": {
    "prefix": "splineOps.close",
    "body": "splineOps.close",
    "description": "close from splineOps"
  },
  "splineOps.cycle": {
    "prefix": "splineOps.cycle",
    "body": "splineOps.cycle",
    "description": "cycle from splineOps"
  },
  "splineOps.delete": {
    "prefix": "splineOps.delete",
    "body": "splineOps.delete",
    "description": "delete from splineOps"
  },
  "splineOps.detach": {
    "prefix": "splineOps.detach",
    "body": "splineOps.detach",
    "description": "detach from splineOps"
  },
  "splineOps.divide": {
    "prefix": "splineOps.divide",
    "body": "splineOps.divide",
    "description": "divide from splineOps"
  },
  "splineOps.explode": {
    "prefix": "splineOps.explode",
    "body": "splineOps.explode",
    "description": "explode from splineOps"
  },
  "splineOps.fuse": {
    "prefix": "splineOps.fuse",
    "body": "splineOps.fuse",
    "description": "fuse from splineOps"
  },
  "splineOps.hide": {
    "prefix": "splineOps.hide",
    "body": "splineOps.hide",
    "description": "hide from splineOps"
  },
  "splineOps.intersect": {
    "prefix": "splineOps.intersect",
    "body": "splineOps.intersect",
    "description": "intersect from splineOps"
  },
  "splineOps.makeFirst": {
    "prefix": "splineOps.makeFirst",
    "body": "splineOps.makeFirst",
    "description": "makeFirst from splineOps"
  },
  "splineOps.mirrorBoth": {
    "prefix": "splineOps.mirrorBoth",
    "body": "splineOps.mirrorBoth",
    "description": "mirrorBoth from splineOps"
  },
  "splineOps.mirrorHoriz": {
    "prefix": "splineOps.mirrorHoriz",
    "body": "splineOps.mirrorHoriz",
    "description": "mirrorHoriz from splineOps"
  },
  "splineOps.mirrorVert": {
    "prefix": "splineOps.mirrorVert",
    "body": "splineOps.mirrorVert",
    "description": "mirrorVert from splineOps"
  },
  "splineOps.reverse": {
    "prefix": "splineOps.reverse",
    "body": "splineOps.reverse",
    "description": "reverse from splineOps"
  },
  "splineOps.selectByID": {
    "prefix": "splineOps.selectByID",
    "body": "splineOps.selectByID",
    "description": "selectByID from splineOps"
  },
  "splineOps.startAttach": {
    "prefix": "splineOps.startAttach",
    "body": "splineOps.startAttach",
    "description": "startAttach from splineOps"
  },
  "splineOps.startBind": {
    "prefix": "splineOps.startBind",
    "body": "splineOps.startBind",
    "description": "startBind from splineOps"
  },
  "splineOps.startBreak": {
    "prefix": "splineOps.startBreak",
    "body": "splineOps.startBreak",
    "description": "startBreak from splineOps"
  },
  "splineOps.startChamfer": {
    "prefix": "splineOps.startChamfer",
    "body": "splineOps.startChamfer",
    "description": "startChamfer from splineOps"
  },
  "splineOps.startConnect": {
    "prefix": "splineOps.startConnect",
    "body": "splineOps.startConnect",
    "description": "startConnect from splineOps"
  },
  "splineOps.startCopyTangent": {
    "prefix": "splineOps.startCopyTangent",
    "body": "splineOps.startCopyTangent",
    "description": "startCopyTangent from splineOps"
  },
  "splineOps.startCreateLine": {
    "prefix": "splineOps.startCreateLine",
    "body": "splineOps.startCreateLine",
    "description": "startCreateLine from splineOps"
  },
  "splineOps.startCrossInsert": {
    "prefix": "splineOps.startCrossInsert",
    "body": "splineOps.startCrossInsert",
    "description": "startCrossInsert from splineOps"
  },
  "splineOps.startCrossSection": {
    "prefix": "splineOps.startCrossSection",
    "body": "splineOps.startCrossSection",
    "description": "startCrossSection from splineOps"
  },
  "splineOps.startExtend": {
    "prefix": "splineOps.startExtend",
    "body": "splineOps.startExtend",
    "description": "startExtend from splineOps"
  },
  "splineOps.startFillet": {
    "prefix": "splineOps.startFillet",
    "body": "splineOps.startFillet",
    "description": "startFillet from splineOps"
  },
  "splineOps.startInsert": {
    "prefix": "splineOps.startInsert",
    "body": "splineOps.startInsert",
    "description": "startInsert from splineOps"
  },
  "splineOps.startIntersect": {
    "prefix": "splineOps.startIntersect",
    "body": "splineOps.startIntersect",
    "description": "startIntersect from splineOps"
  },
  "splineOps.startOutline": {
    "prefix": "splineOps.startOutline",
    "body": "splineOps.startOutline",
    "description": "startOutline from splineOps"
  },
  "splineOps.startPasteTangent": {
    "prefix": "splineOps.startPasteTangent",
    "body": "splineOps.startPasteTangent",
    "description": "startPasteTangent from splineOps"
  },
  "splineOps.startRefine": {
    "prefix": "splineOps.startRefine",
    "body": "splineOps.startRefine",
    "description": "startRefine from splineOps"
  },
  "splineOps.startRefineConnect": {
    "prefix": "splineOps.startRefineConnect",
    "body": "splineOps.startRefineConnect",
    "description": "startRefineConnect from splineOps"
  },
  "splineOps.startTrim": {
    "prefix": "splineOps.startTrim",
    "body": "splineOps.startTrim",
    "description": "startTrim from splineOps"
  },
  "splineOps.startUnion": {
    "prefix": "splineOps.startUnion",
    "body": "splineOps.startUnion",
    "description": "startUnion from splineOps"
  },
  "splineOps.unbind": {
    "prefix": "splineOps.unbind",
    "body": "splineOps.unbind",
    "description": "unbind from splineOps"
  },
  "splineOps.unhideAll": {
    "prefix": "splineOps.unhideAll",
    "body": "splineOps.unhideAll",
    "description": "unhideAll from splineOps"
  },
  "splineOps.weld": {
    "prefix": "splineOps.weld",
    "body": "splineOps.weld",
    "description": "weld from splineOps"
  },
  "SS_Bubble_Spinner.controller": {
    "prefix": "SS_Bubble_Spinner.controller",
    "body": "SS_Bubble_Spinner.controller",
    "description": "controller from SS_Bubble_Spinner"
  },
  "SS_Bubble_Spinner.isEnabled": {
    "prefix": "SS_Bubble_Spinner.isEnabled",
    "body": "SS_Bubble_Spinner.isEnabled",
    "description": "isEnabled from SS_Bubble_Spinner"
  },
  "SS_Bubble_Spinner.OnChanged": {
    "prefix": "SS_Bubble_Spinner.OnChanged",
    "body": "SS_Bubble_Spinner.OnChanged",
    "description": "OnChanged from SS_Bubble_Spinner"
  },
  "SS_EdgeDist_Spinner.controller": {
    "prefix": "SS_EdgeDist_Spinner.controller",
    "body": "SS_EdgeDist_Spinner.controller",
    "description": "controller from SS_EdgeDist_Spinner"
  },
  "SS_EdgeDist_Spinner.isEnabled": {
    "prefix": "SS_EdgeDist_Spinner.isEnabled",
    "body": "SS_EdgeDist_Spinner.isEnabled",
    "description": "isEnabled from SS_EdgeDist_Spinner"
  },
  "SS_EdgeDist_Spinner.OnChanged": {
    "prefix": "SS_EdgeDist_Spinner.OnChanged",
    "body": "SS_EdgeDist_Spinner.OnChanged",
    "description": "OnChanged from SS_EdgeDist_Spinner"
  },
  "SS_FallOff_Spinner.controller": {
    "prefix": "SS_FallOff_Spinner.controller",
    "body": "SS_FallOff_Spinner.controller",
    "description": "controller from SS_FallOff_Spinner"
  },
  "SS_FallOff_Spinner.isEnabled": {
    "prefix": "SS_FallOff_Spinner.isEnabled",
    "body": "SS_FallOff_Spinner.isEnabled",
    "description": "isEnabled from SS_FallOff_Spinner"
  },
  "SS_FallOff_Spinner.OnChanged": {
    "prefix": "SS_FallOff_Spinner.OnChanged",
    "body": "SS_FallOff_Spinner.OnChanged",
    "description": "OnChanged from SS_FallOff_Spinner"
  },
  "SS_PaintSize_Spinner.controller": {
    "prefix": "SS_PaintSize_Spinner.controller",
    "body": "SS_PaintSize_Spinner.controller",
    "description": "controller from SS_PaintSize_Spinner"
  },
  "SS_PaintSize_Spinner.isEnabled": {
    "prefix": "SS_PaintSize_Spinner.isEnabled",
    "body": "SS_PaintSize_Spinner.isEnabled",
    "description": "isEnabled from SS_PaintSize_Spinner"
  },
  "SS_PaintSize_Spinner.OnChanged": {
    "prefix": "SS_PaintSize_Spinner.OnChanged",
    "body": "SS_PaintSize_Spinner.OnChanged",
    "description": "OnChanged from SS_PaintSize_Spinner"
  },
  "SS_PaintStrength_Spinner.controller": {
    "prefix": "SS_PaintStrength_Spinner.controller",
    "body": "SS_PaintStrength_Spinner.controller",
    "description": "controller from SS_PaintStrength_Spinner"
  },
  "SS_PaintStrength_Spinner.isEnabled": {
    "prefix": "SS_PaintStrength_Spinner.isEnabled",
    "body": "SS_PaintStrength_Spinner.isEnabled",
    "description": "isEnabled from SS_PaintStrength_Spinner"
  },
  "SS_PaintStrength_Spinner.OnChanged": {
    "prefix": "SS_PaintStrength_Spinner.OnChanged",
    "body": "SS_PaintStrength_Spinner.OnChanged",
    "description": "OnChanged from SS_PaintStrength_Spinner"
  },
  "SS_PaintValue_Spinner.controller": {
    "prefix": "SS_PaintValue_Spinner.controller",
    "body": "SS_PaintValue_Spinner.controller",
    "description": "controller from SS_PaintValue_Spinner"
  },
  "SS_PaintValue_Spinner.isEnabled": {
    "prefix": "SS_PaintValue_Spinner.isEnabled",
    "body": "SS_PaintValue_Spinner.isEnabled",
    "description": "isEnabled from SS_PaintValue_Spinner"
  },
  "SS_PaintValue_Spinner.OnChanged": {
    "prefix": "SS_PaintValue_Spinner.OnChanged",
    "body": "SS_PaintValue_Spinner.OnChanged",
    "description": "OnChanged from SS_PaintValue_Spinner"
  },
  "SS_Pinch_Spinner.controller": {
    "prefix": "SS_Pinch_Spinner.controller",
    "body": "SS_Pinch_Spinner.controller",
    "description": "controller from SS_Pinch_Spinner"
  },
  "SS_Pinch_Spinner.isEnabled": {
    "prefix": "SS_Pinch_Spinner.isEnabled",
    "body": "SS_Pinch_Spinner.isEnabled",
    "description": "isEnabled from SS_Pinch_Spinner"
  },
  "SS_Pinch_Spinner.OnChanged": {
    "prefix": "SS_Pinch_Spinner.OnChanged",
    "body": "SS_Pinch_Spinner.OnChanged",
    "description": "OnChanged from SS_Pinch_Spinner"
  },
  "surfaceArriveBhvr.getPos": {
    "prefix": "surfaceArriveBhvr.getPos",
    "body": "surfaceArriveBhvr.getPos",
    "description": "getPos from surfaceArriveBhvr"
  },
  "SurfaceSelectSpinnerCallback.onButtonDown": {
    "prefix": "SurfaceSelectSpinnerCallback.onButtonDown",
    "body": "SurfaceSelectSpinnerCallback.onButtonDown",
    "description": "onButtonDown from SurfaceSelectSpinnerCallback"
  },
  "SurfaceSelectSpinnerCallback.onButtonUp": {
    "prefix": "SurfaceSelectSpinnerCallback.onButtonUp",
    "body": "SurfaceSelectSpinnerCallback.onButtonUp",
    "description": "onButtonUp from SurfaceSelectSpinnerCallback"
  },
  "SurfaceSelectSpinnerCallback.OnChanged": {
    "prefix": "SurfaceSelectSpinnerCallback.OnChanged",
    "body": "SurfaceSelectSpinnerCallback.OnChanged",
    "description": "OnChanged from SurfaceSelectSpinnerCallback"
  },
  "sxmlIO.animatedOnly": {
    "prefix": "sxmlIO.animatedOnly",
    "body": "sxmlIO.animatedOnly",
    "description": "animatedOnly from sxmlIO"
  },
  "sxmlIO.array2xml": {
    "prefix": "sxmlIO.array2xml",
    "body": "sxmlIO.array2xml",
    "description": "array2xml from sxmlIO"
  },
  "sxmlIO.cas2xml": {
    "prefix": "sxmlIO.cas2xml",
    "body": "sxmlIO.cas2xml",
    "description": "cas2xml from sxmlIO"
  },
  "sxmlIO.class_of": {
    "prefix": "sxmlIO.class_of",
    "body": "sxmlIO.class_of",
    "description": "class_of from sxmlIO"
  },
  "sxmlIO.CollectItemOfArray": {
    "prefix": "sxmlIO.CollectItemOfArray",
    "body": "sxmlIO.CollectItemOfArray",
    "description": "CollectItemOfArray from sxmlIO"
  },
  "sxmlIO.create": {
    "prefix": "sxmlIO.create",
    "body": "sxmlIO.create",
    "description": "create from sxmlIO"
  },
  "sxmlIO.create_time": {
    "prefix": "sxmlIO.create_time",
    "body": "sxmlIO.create_time",
    "description": "create_time from sxmlIO"
  },
  "sxmlIO.Ctrl2xml": {
    "prefix": "sxmlIO.Ctrl2xml",
    "body": "sxmlIO.Ctrl2xml",
    "description": "Ctrl2xml from sxmlIO"
  },
  "sxmlIO.exec": {
    "prefix": "sxmlIO.exec",
    "body": "sxmlIO.exec",
    "description": "exec from sxmlIO"
  },
  "sxmlIO.exec_time": {
    "prefix": "sxmlIO.exec_time",
    "body": "sxmlIO.exec_time",
    "description": "exec_time from sxmlIO"
  },
  "sxmlIO.getAddon": {
    "prefix": "sxmlIO.getAddon",
    "body": "sxmlIO.getAddon",
    "description": "getAddon from sxmlIO"
  },
  "sxmlIO.getAttribute": {
    "prefix": "sxmlIO.getAttribute",
    "body": "sxmlIO.getAttribute",
    "description": "getAttribute from sxmlIO"
  },
  "sxmlIO.init": {
    "prefix": "sxmlIO.init",
    "body": "sxmlIO.init",
    "description": "init from sxmlIO"
  },
  "sxmlIO.is_ik_ctrl": {
    "prefix": "sxmlIO.is_ik_ctrl",
    "body": "sxmlIO.is_ik_ctrl",
    "description": "is_ik_ctrl from sxmlIO"
  },
  "sxmlIO.isAnimated": {
    "prefix": "sxmlIO.isAnimated",
    "body": "sxmlIO.isAnimated",
    "description": "isAnimated from sxmlIO"
  },
  "sxmlIO.load": {
    "prefix": "sxmlIO.load",
    "body": "sxmlIO.load",
    "description": "load from sxmlIO"
  },
  "sxmlIO.m_xmlDoc": {
    "prefix": "sxmlIO.m_xmlDoc",
    "body": "sxmlIO.m_xmlDoc",
    "description": "m_xmlDoc from sxmlIO"
  },
  "sxmlIO.newAddOn": {
    "prefix": "sxmlIO.newAddOn",
    "body": "sxmlIO.newAddOn",
    "description": "newAddOn from sxmlIO"
  },
  "sxmlIO.no_key_frames": {
    "prefix": "sxmlIO.no_key_frames",
    "body": "sxmlIO.no_key_frames",
    "description": "no_key_frames from sxmlIO"
  },
  "sxmlIO.obj2xml": {
    "prefix": "sxmlIO.obj2xml",
    "body": "sxmlIO.obj2xml",
    "description": "obj2xml from sxmlIO"
  },
  "sxmlIO.save": {
    "prefix": "sxmlIO.save",
    "body": "sxmlIO.save",
    "description": "save from sxmlIO"
  },
  "sxmlIO.sclass_of": {
    "prefix": "sxmlIO.sclass_of",
    "body": "sxmlIO.sclass_of",
    "description": "sclass_of from sxmlIO"
  },
  "sxmlIO.string2value": {
    "prefix": "sxmlIO.string2value",
    "body": "sxmlIO.string2value",
    "description": "string2value from sxmlIO"
  },
  "sxmlIO.SubAnims2xml": {
    "prefix": "sxmlIO.SubAnims2xml",
    "body": "sxmlIO.SubAnims2xml",
    "description": "SubAnims2xml from sxmlIO"
  },
  "sxmlIO.tmc_class": {
    "prefix": "sxmlIO.tmc_class",
    "body": "sxmlIO.tmc_class",
    "description": "tmc_class from sxmlIO"
  },
  "sxmlIO.wire2xml": {
    "prefix": "sxmlIO.wire2xml",
    "body": "sxmlIO.wire2xml",
    "description": "wire2xml from sxmlIO"
  },
  "sxmlIO.wireParams": {
    "prefix": "sxmlIO.wireParams",
    "body": "sxmlIO.wireParams",
    "description": "wireParams from sxmlIO"
  },
  "sxmlIO.world": {
    "prefix": "sxmlIO.world",
    "body": "sxmlIO.world",
    "description": "world from sxmlIO"
  },
  "sxmlIO.xml2ctrl": {
    "prefix": "sxmlIO.xml2ctrl",
    "body": "sxmlIO.xml2ctrl",
    "description": "xml2ctrl from sxmlIO"
  },
  "sxmlIO.xml2obj": {
    "prefix": "sxmlIO.xml2obj",
    "body": "sxmlIO.xml2obj",
    "description": "xml2obj from sxmlIO"
  },
  "sxmlIO.xml2subAnims": {
    "prefix": "sxmlIO.xml2subAnims",
    "body": "sxmlIO.xml2subAnims",
    "description": "xml2subAnims from sxmlIO"
  },
  "sxmlIO.xmlCtrlDoc": {
    "prefix": "sxmlIO.xmlCtrlDoc",
    "body": "sxmlIO.xmlCtrlDoc",
    "description": "xmlCtrlDoc from sxmlIO"
  },
  "sxmlIO.xmlCtrlDocName": {
    "prefix": "sxmlIO.xmlCtrlDocName",
    "body": "sxmlIO.xmlCtrlDocName",
    "description": "xmlCtrlDocName from sxmlIO"
  },
  "symbolicPaths.addUserPath": {
    "prefix": "symbolicPaths.addUserPath",
    "body": "symbolicPaths.addUserPath",
    "description": "addUserPath from symbolicPaths"
  },
  "symbolicPaths.expandFileName": {
    "prefix": "symbolicPaths.expandFileName",
    "body": "symbolicPaths.expandFileName",
    "description": "expandFileName from symbolicPaths"
  },
  "symbolicPaths.getPathName": {
    "prefix": "symbolicPaths.getPathName",
    "body": "symbolicPaths.getPathName",
    "description": "getPathName from symbolicPaths"
  },
  "symbolicPaths.getPathValue": {
    "prefix": "symbolicPaths.getPathValue",
    "body": "symbolicPaths.getPathValue",
    "description": "getPathValue from symbolicPaths"
  },
  "symbolicPaths.getUserPathName": {
    "prefix": "symbolicPaths.getUserPathName",
    "body": "symbolicPaths.getUserPathName",
    "description": "getUserPathName from symbolicPaths"
  },
  "symbolicPaths.getUserPathValue": {
    "prefix": "symbolicPaths.getUserPathValue",
    "body": "symbolicPaths.getUserPathValue",
    "description": "getUserPathValue from symbolicPaths"
  },
  "symbolicPaths.isPathName": {
    "prefix": "symbolicPaths.isPathName",
    "body": "symbolicPaths.isPathName",
    "description": "isPathName from symbolicPaths"
  },
  "symbolicPaths.numPaths": {
    "prefix": "symbolicPaths.numPaths",
    "body": "symbolicPaths.numPaths",
    "description": "numPaths from symbolicPaths"
  },
  "symbolicPaths.numUserPaths": {
    "prefix": "symbolicPaths.numUserPaths",
    "body": "symbolicPaths.numUserPaths",
    "description": "numUserPaths from symbolicPaths"
  },
  "symbolicPaths.removeUserPath": {
    "prefix": "symbolicPaths.removeUserPath",
    "body": "symbolicPaths.removeUserPath",
    "description": "removeUserPath from symbolicPaths"
  },
  "symbolicPaths.setUserPathValue": {
    "prefix": "symbolicPaths.setUserPathValue",
    "body": "symbolicPaths.setUserPathValue",
    "description": "setUserPathValue from symbolicPaths"
  },
  "sysInfo.computername": {
    "prefix": "sysInfo.computername",
    "body": "sysInfo.computername",
    "description": "computername from sysInfo"
  },
  "sysInfo.currentdir": {
    "prefix": "sysInfo.currentdir",
    "body": "sysInfo.currentdir",
    "description": "currentdir from sysInfo"
  },
  "sysInfo.DesktopBPP": {
    "prefix": "sysInfo.DesktopBPP",
    "body": "sysInfo.DesktopBPP",
    "description": "DesktopBPP from sysInfo"
  },
  "sysInfo.DesktopSize": {
    "prefix": "sysInfo.DesktopSize",
    "body": "sysInfo.DesktopSize",
    "description": "DesktopSize from sysInfo"
  },
  "sysInfo.getLanguage": {
    "prefix": "sysInfo.getLanguage",
    "body": "sysInfo.getLanguage",
    "description": "getLanguage from sysInfo"
  },
  "sysInfo.getMaxLanguage": {
    "prefix": "sysInfo.getMaxLanguage",
    "body": "sysInfo.getMaxLanguage",
    "description": "getMaxLanguage from sysInfo"
  },
  "sysInfo.getMAXMemoryInfo": {
    "prefix": "sysInfo.getMAXMemoryInfo",
    "body": "sysInfo.getMAXMemoryInfo",
    "description": "getMAXMemoryInfo from sysInfo"
  },
  "sysInfo.getSystemMemoryInfo": {
    "prefix": "sysInfo.getSystemMemoryInfo",
    "body": "sysInfo.getSystemMemoryInfo",
    "description": "getSystemMemoryInfo from sysInfo"
  },
  "sysInfo.MAXPriority": {
    "prefix": "sysInfo.MAXPriority",
    "body": "sysInfo.MAXPriority",
    "description": "MAXPriority from sysInfo"
  },
  "sysInfo.processAffinity": {
    "prefix": "sysInfo.processAffinity",
    "body": "sysInfo.processAffinity",
    "description": "processAffinity from sysInfo"
  },
  "sysInfo.systemAffinity": {
    "prefix": "sysInfo.systemAffinity",
    "body": "sysInfo.systemAffinity",
    "description": "systemAffinity from sysInfo"
  },
  "sysInfo.systemdir": {
    "prefix": "sysInfo.systemdir",
    "body": "sysInfo.systemdir",
    "description": "systemdir from sysInfo"
  },
  "sysInfo.tempdir": {
    "prefix": "sysInfo.tempdir",
    "body": "sysInfo.tempdir",
    "description": "tempdir from sysInfo"
  },
  "sysInfo.username": {
    "prefix": "sysInfo.username",
    "body": "sysInfo.username",
    "description": "username from sysInfo"
  },
  "sysInfo.windowsdir": {
    "prefix": "sysInfo.windowsdir",
    "body": "sysInfo.windowsdir",
    "description": "windowsdir from sysInfo"
  },
  "systemTools.AllocateMemory": {
    "prefix": "systemTools.AllocateMemory",
    "body": "systemTools.AllocateMemory",
    "description": "AllocateMemory from systemTools"
  },
  "systemTools.getEnvVariable": {
    "prefix": "systemTools.getEnvVariable",
    "body": "systemTools.getEnvVariable",
    "description": "getEnvVariable from systemTools"
  },
  "systemTools.GetScreenHeight": {
    "prefix": "systemTools.GetScreenHeight",
    "body": "systemTools.GetScreenHeight",
    "description": "GetScreenHeight from systemTools"
  },
  "systemTools.GetScreenWidth": {
    "prefix": "systemTools.GetScreenWidth",
    "body": "systemTools.GetScreenWidth",
    "description": "GetScreenWidth from systemTools"
  },
  "systemTools.IsDebugging": {
    "prefix": "systemTools.IsDebugging",
    "body": "systemTools.IsDebugging",
    "description": "IsDebugging from systemTools"
  },
  "systemTools.IsWindows98or2000": {
    "prefix": "systemTools.IsWindows98or2000",
    "body": "systemTools.IsWindows98or2000",
    "description": "IsWindows98or2000 from systemTools"
  },
  "systemTools.IsWindows9x": {
    "prefix": "systemTools.IsWindows9x",
    "body": "systemTools.IsWindows9x",
    "description": "IsWindows9x from systemTools"
  },
  "systemTools.NumberOfProcessors": {
    "prefix": "systemTools.NumberOfProcessors",
    "body": "systemTools.NumberOfProcessors",
    "description": "NumberOfProcessors from systemTools"
  },
  "systemTools.ReleaseMemory": {
    "prefix": "systemTools.ReleaseMemory",
    "body": "systemTools.ReleaseMemory",
    "description": "ReleaseMemory from systemTools"
  },
  "systemTools.setEnvVariable": {
    "prefix": "systemTools.setEnvVariable",
    "body": "systemTools.setEnvVariable",
    "description": "setEnvVariable from systemTools"
  },
  "tabbedDialogs.CancelDialog": {
    "prefix": "tabbedDialogs.CancelDialog",
    "body": "tabbedDialogs.CancelDialog",
    "description": "CancelDialog from tabbedDialogs"
  },
  "tabbedDialogs.CloseDialog": {
    "prefix": "tabbedDialogs.CloseDialog",
    "body": "tabbedDialogs.CloseDialog",
    "description": "CloseDialog from tabbedDialogs"
  },
  "tabbedDialogs.CommitPages": {
    "prefix": "tabbedDialogs.CommitPages",
    "body": "tabbedDialogs.CommitPages",
    "description": "CommitPages from tabbedDialogs"
  },
  "tabbedDialogs.getCurrentPage": {
    "prefix": "tabbedDialogs.getCurrentPage",
    "body": "tabbedDialogs.getCurrentPage",
    "description": "getCurrentPage from tabbedDialogs"
  },
  "tabbedDialogs.getDialogID": {
    "prefix": "tabbedDialogs.getDialogID",
    "body": "tabbedDialogs.getDialogID",
    "description": "getDialogID from tabbedDialogs"
  },
  "tabbedDialogs.getNumPages": {
    "prefix": "tabbedDialogs.getNumPages",
    "body": "tabbedDialogs.getNumPages",
    "description": "getNumPages from tabbedDialogs"
  },
  "tabbedDialogs.getPageID": {
    "prefix": "tabbedDialogs.getPageID",
    "body": "tabbedDialogs.getPageID",
    "description": "getPageID from tabbedDialogs"
  },
  "tabbedDialogs.invalidate": {
    "prefix": "tabbedDialogs.invalidate",
    "body": "tabbedDialogs.invalidate",
    "description": "invalidate from tabbedDialogs"
  },
  "tabbedDialogs.invalidatePage": {
    "prefix": "tabbedDialogs.invalidatePage",
    "body": "tabbedDialogs.invalidatePage",
    "description": "invalidatePage from tabbedDialogs"
  },
  "tabbedDialogs.isOpen": {
    "prefix": "tabbedDialogs.isOpen",
    "body": "tabbedDialogs.isOpen",
    "description": "isOpen from tabbedDialogs"
  },
  "tabbedDialogs.isPage": {
    "prefix": "tabbedDialogs.isPage",
    "body": "tabbedDialogs.isPage",
    "description": "isPage from tabbedDialogs"
  },
  "tabbedDialogs.OkToCommit": {
    "prefix": "tabbedDialogs.OkToCommit",
    "body": "tabbedDialogs.OkToCommit",
    "description": "OkToCommit from tabbedDialogs"
  },
  "tabbedDialogs.setCurrentPage": {
    "prefix": "tabbedDialogs.setCurrentPage",
    "body": "tabbedDialogs.setCurrentPage",
    "description": "setCurrentPage from tabbedDialogs"
  },
  "TCBDefaultParams.bias": {
    "prefix": "TCBDefaultParams.bias",
    "body": "TCBDefaultParams.bias",
    "description": "bias from TCBDefaultParams"
  },
  "TCBDefaultParams.continuity": {
    "prefix": "TCBDefaultParams.continuity",
    "body": "TCBDefaultParams.continuity",
    "description": "continuity from TCBDefaultParams"
  },
  "TCBDefaultParams.easeFrom": {
    "prefix": "TCBDefaultParams.easeFrom",
    "body": "TCBDefaultParams.easeFrom",
    "description": "easeFrom from TCBDefaultParams"
  },
  "TCBDefaultParams.easeTo": {
    "prefix": "TCBDefaultParams.easeTo",
    "body": "TCBDefaultParams.easeTo",
    "description": "easeTo from TCBDefaultParams"
  },
  "terrainOps.addOperand": {
    "prefix": "terrainOps.addOperand",
    "body": "terrainOps.addOperand",
    "description": "addOperand from terrainOps"
  },
  "terrainOps.getOperand": {
    "prefix": "terrainOps.getOperand",
    "body": "terrainOps.getOperand",
    "description": "getOperand from terrainOps"
  },
  "terrainOps.getOperandTM": {
    "prefix": "terrainOps.getOperandTM",
    "body": "terrainOps.getOperandTM",
    "description": "getOperandTM from terrainOps"
  },
  "terrainOps.setOperandTM": {
    "prefix": "terrainOps.setOperandTM",
    "body": "terrainOps.setOperandTM",
    "description": "setOperandTM from terrainOps"
  },
  "terrainOps.update": {
    "prefix": "terrainOps.update",
    "body": "terrainOps.update",
    "description": "update from terrainOps"
  },
  "TexmapInfo.texmapName": {
    "prefix": "TexmapInfo.texmapName",
    "body": "TexmapInfo.texmapName",
    "description": "texmapName from TexmapInfo"
  },
  "theHold.Accept": {
    "prefix": "theHold.Accept",
    "body": "theHold.Accept",
    "description": "Accept from theHold"
  },
  "theHold.Begin": {
    "prefix": "theHold.Begin",
    "body": "theHold.Begin",
    "description": "Begin from theHold"
  },
  "theHold.cancel": {
    "prefix": "theHold.cancel",
    "body": "theHold.cancel",
    "description": "cancel from theHold"
  },
  "theHold.DisableUndo": {
    "prefix": "theHold.DisableUndo",
    "body": "theHold.DisableUndo",
    "description": "DisableUndo from theHold"
  },
  "theHold.enableUndo": {
    "prefix": "theHold.enableUndo",
    "body": "theHold.enableUndo",
    "description": "enableUndo from theHold"
  },
  "theHold.End": {
    "prefix": "theHold.End",
    "body": "theHold.End",
    "description": "End from theHold"
  },
  "theHold.GetBeginDepth": {
    "prefix": "theHold.GetBeginDepth",
    "body": "theHold.GetBeginDepth",
    "description": "GetBeginDepth from theHold"
  },
  "theHold.getCurrentUndoLevels": {
    "prefix": "theHold.getCurrentUndoLevels",
    "body": "theHold.getCurrentUndoLevels",
    "description": "getCurrentUndoLevels from theHold"
  },
  "theHold.GetGlobalPutCount": {
    "prefix": "theHold.GetGlobalPutCount",
    "body": "theHold.GetGlobalPutCount",
    "description": "GetGlobalPutCount from theHold"
  },
  "theHold.getMaxUndoLevels": {
    "prefix": "theHold.getMaxUndoLevels",
    "body": "theHold.getMaxUndoLevels",
    "description": "getMaxUndoLevels from theHold"
  },
  "theHold.Holding": {
    "prefix": "theHold.Holding",
    "body": "theHold.Holding",
    "description": "Holding from theHold"
  },
  "theHold.IsSuspended": {
    "prefix": "theHold.IsSuspended",
    "body": "theHold.IsSuspended",
    "description": "IsSuspended from theHold"
  },
  "theHold.IsUndoDisabled": {
    "prefix": "theHold.IsUndoDisabled",
    "body": "theHold.IsUndoDisabled",
    "description": "IsUndoDisabled from theHold"
  },
  "theHold.Redoing": {
    "prefix": "theHold.Redoing",
    "body": "theHold.Redoing",
    "description": "Redoing from theHold"
  },
  "theHold.Release": {
    "prefix": "theHold.Release",
    "body": "theHold.Release",
    "description": "Release from theHold"
  },
  "theHold.Restore": {
    "prefix": "theHold.Restore",
    "body": "theHold.Restore",
    "description": "Restore from theHold"
  },
  "theHold.RestoreOrRedoing": {
    "prefix": "theHold.RestoreOrRedoing",
    "body": "theHold.RestoreOrRedoing",
    "description": "RestoreOrRedoing from theHold"
  },
  "theHold.Resume": {
    "prefix": "theHold.Resume",
    "body": "theHold.Resume",
    "description": "Resume from theHold"
  },
  "theHold.setMaxUndoLevels": {
    "prefix": "theHold.setMaxUndoLevels",
    "body": "theHold.setMaxUndoLevels",
    "description": "setMaxUndoLevels from theHold"
  },
  "theHold.SuperAccept": {
    "prefix": "theHold.SuperAccept",
    "body": "theHold.SuperAccept",
    "description": "SuperAccept from theHold"
  },
  "theHold.SuperBegin": {
    "prefix": "theHold.SuperBegin",
    "body": "theHold.SuperBegin",
    "description": "SuperBegin from theHold"
  },
  "theHold.SuperCancel": {
    "prefix": "theHold.SuperCancel",
    "body": "theHold.SuperCancel",
    "description": "SuperCancel from theHold"
  },
  "theHold.SuperLevel": {
    "prefix": "theHold.SuperLevel",
    "body": "theHold.SuperLevel",
    "description": "SuperLevel from theHold"
  },
  "theHold.Suspend": {
    "prefix": "theHold.Suspend",
    "body": "theHold.Suspend",
    "description": "Suspend from theHold"
  },
  "themixer.addMaxMixer": {
    "prefix": "themixer.addMaxMixer",
    "body": "themixer.addMaxMixer",
    "description": "addMaxMixer from themixer"
  },
  "themixer.addMixerToDisplay": {
    "prefix": "themixer.addMixerToDisplay",
    "body": "themixer.addMixerToDisplay",
    "description": "addMixerToDisplay from themixer"
  },
  "themixer.getMaxMixer": {
    "prefix": "themixer.getMaxMixer",
    "body": "themixer.getMaxMixer",
    "description": "getMaxMixer from themixer"
  },
  "themixer.hideMixer": {
    "prefix": "themixer.hideMixer",
    "body": "themixer.hideMixer",
    "description": "hideMixer from themixer"
  },
  "themixer.lockTransitions": {
    "prefix": "themixer.lockTransitions",
    "body": "themixer.lockTransitions",
    "description": "lockTransitions from themixer"
  },
  "themixer.numMaxMixers": {
    "prefix": "themixer.numMaxMixers",
    "body": "themixer.numMaxMixers",
    "description": "numMaxMixers from themixer"
  },
  "themixer.removeMaxMixer": {
    "prefix": "themixer.removeMaxMixer",
    "body": "themixer.removeMaxMixer",
    "description": "removeMaxMixer from themixer"
  },
  "themixer.removeMixerFromDisplay": {
    "prefix": "themixer.removeMixerFromDisplay",
    "body": "themixer.removeMixerFromDisplay",
    "description": "removeMixerFromDisplay from themixer"
  },
  "themixer.setAnimationRange": {
    "prefix": "themixer.setAnimationRange",
    "body": "themixer.setAnimationRange",
    "description": "setAnimationRange from themixer"
  },
  "themixer.showBalanceCurves": {
    "prefix": "themixer.showBalanceCurves",
    "body": "themixer.showBalanceCurves",
    "description": "showBalanceCurves from themixer"
  },
  "themixer.showClipBounds": {
    "prefix": "themixer.showClipBounds",
    "body": "themixer.showClipBounds",
    "description": "showClipBounds from themixer"
  },
  "themixer.showClipNames": {
    "prefix": "themixer.showClipNames",
    "body": "themixer.showClipNames",
    "description": "showClipNames from themixer"
  },
  "themixer.showClipScale": {
    "prefix": "themixer.showClipScale",
    "body": "themixer.showClipScale",
    "description": "showClipScale from themixer"
  },
  "themixer.showGlobalFrames": {
    "prefix": "themixer.showGlobalFrames",
    "body": "themixer.showGlobalFrames",
    "description": "showGlobalFrames from themixer"
  },
  "themixer.showInpoints": {
    "prefix": "themixer.showInpoints",
    "body": "themixer.showInpoints",
    "description": "showInpoints from themixer"
  },
  "themixer.showOutpoints": {
    "prefix": "themixer.showOutpoints",
    "body": "themixer.showOutpoints",
    "description": "showOutpoints from themixer"
  },
  "themixer.showTgRangebars": {
    "prefix": "themixer.showTgRangebars",
    "body": "themixer.showTgRangebars",
    "description": "showTgRangebars from themixer"
  },
  "themixer.showTimeWarps": {
    "prefix": "themixer.showTimeWarps",
    "body": "themixer.showTimeWarps",
    "description": "showTimeWarps from themixer"
  },
  "themixer.showWgtCurves": {
    "prefix": "themixer.showWgtCurves",
    "body": "themixer.showWgtCurves",
    "description": "showWgtCurves from themixer"
  },
  "themixer.snapFrames": {
    "prefix": "themixer.snapFrames",
    "body": "themixer.snapFrames",
    "description": "snapFrames from themixer"
  },
  "themixer.snapToClips": {
    "prefix": "themixer.snapToClips",
    "body": "themixer.snapToClips",
    "description": "snapToClips from themixer"
  },
  "themixer.toggleMixer": {
    "prefix": "themixer.toggleMixer",
    "body": "themixer.toggleMixer",
    "description": "toggleMixer from themixer"
  },
  "themixer.updateDisplay": {
    "prefix": "themixer.updateDisplay",
    "body": "themixer.updateDisplay",
    "description": "updateDisplay from themixer"
  },
  "themixer.zoomExtents": {
    "prefix": "themixer.zoomExtents",
    "body": "themixer.zoomExtents",
    "description": "zoomExtents from themixer"
  },
  "timeConfiguration.playActiveOnly": {
    "prefix": "timeConfiguration.playActiveOnly",
    "body": "timeConfiguration.playActiveOnly",
    "description": "playActiveOnly from timeConfiguration"
  },
  "timeConfiguration.playbackLoop": {
    "prefix": "timeConfiguration.playbackLoop",
    "body": "timeConfiguration.playbackLoop",
    "description": "playbackLoop from timeConfiguration"
  },
  "timeConfiguration.playbackSpeed": {
    "prefix": "timeConfiguration.playbackSpeed",
    "body": "timeConfiguration.playbackSpeed",
    "description": "playbackSpeed from timeConfiguration"
  },
  "timeConfiguration.realTimePlayback": {
    "prefix": "timeConfiguration.realTimePlayback",
    "body": "timeConfiguration.realTimePlayback",
    "description": "realTimePlayback from timeConfiguration"
  },
  "toolMode.AxisConstraints": {
    "prefix": "toolMode.AxisConstraints",
    "body": "toolMode.AxisConstraints",
    "description": "AxisConstraints from toolMode"
  },
  "toolMode.CommandMode": {
    "prefix": "toolMode.CommandMode",
    "body": "toolMode.CommandMode",
    "description": "CommandMode from toolMode"
  },
  "toolMode.CommandModeID": {
    "prefix": "toolMode.CommandModeID",
    "body": "toolMode.CommandModeID",
    "description": "CommandModeID from toolMode"
  },
  "toolMode.coordsys": {
    "prefix": "toolMode.coordsys",
    "body": "toolMode.coordsys",
    "description": "coordsys from toolMode"
  },
  "toolMode.nonUniformScale": {
    "prefix": "toolMode.nonUniformScale",
    "body": "toolMode.nonUniformScale",
    "description": "nonUniformScale from toolMode"
  },
  "toolMode.pivotCenter": {
    "prefix": "toolMode.pivotCenter",
    "body": "toolMode.pivotCenter",
    "description": "pivotCenter from toolMode"
  },
  "toolMode.selectionCenter": {
    "prefix": "toolMode.selectionCenter",
    "body": "toolMode.selectionCenter",
    "description": "selectionCenter from toolMode"
  },
  "toolMode.squashScale": {
    "prefix": "toolMode.squashScale",
    "body": "toolMode.squashScale",
    "description": "squashScale from toolMode"
  },
  "toolMode.transformCenter": {
    "prefix": "toolMode.transformCenter",
    "body": "toolMode.transformCenter",
    "description": "transformCenter from toolMode"
  },
  "toolMode.uniformScale": {
    "prefix": "toolMode.uniformScale",
    "body": "toolMode.uniformScale",
    "description": "uniformScale from toolMode"
  },
  "trackbar.filter": {
    "prefix": "trackbar.filter",
    "body": "trackbar.filter",
    "description": "filter from trackbar"
  },
  "trackbar.GetNextKeyTime": {
    "prefix": "trackbar.GetNextKeyTime",
    "body": "trackbar.GetNextKeyTime",
    "description": "GetNextKeyTime from trackbar"
  },
  "trackbar.GetPreviousKeyTime": {
    "prefix": "trackbar.GetPreviousKeyTime",
    "body": "trackbar.GetPreviousKeyTime",
    "description": "GetPreviousKeyTime from trackbar"
  },
  "trackView.clearFilter": {
    "prefix": "trackView.clearFilter",
    "body": "trackView.clearFilter",
    "description": "clearFilter from trackView"
  },
  "trackView.close": {
    "prefix": "trackView.close",
    "body": "trackView.close",
    "description": "close from trackView"
  },
  "trackView.numTrackViews": {
    "prefix": "trackView.numTrackViews",
    "body": "trackView.numTrackViews",
    "description": "numTrackViews from trackView"
  },
  "trackView.open": {
    "prefix": "trackView.open",
    "body": "trackView.open",
    "description": "open from trackView"
  },
  "trackView.pickTrackDlg": {
    "prefix": "trackView.pickTrackDlg",
    "body": "trackView.pickTrackDlg",
    "description": "pickTrackDlg from trackView"
  },
  "trackView.setFilter": {
    "prefix": "trackView.setFilter",
    "body": "trackView.setFilter",
    "description": "setFilter from trackView"
  },
  "trackView.zoomSelected": {
    "prefix": "trackView.zoomSelected",
    "body": "trackView.zoomSelected",
    "description": "zoomSelected from trackView"
  },
  "TreeViewWraps.ClearTvNodes": {
    "prefix": "TreeViewWraps.ClearTvNodes",
    "body": "TreeViewWraps.ClearTvNodes",
    "description": "ClearTvNodes from TreeViewWraps"
  },
  "TreeViewWraps.CollapseAll": {
    "prefix": "TreeViewWraps.CollapseAll",
    "body": "TreeViewWraps.CollapseAll",
    "description": "CollapseAll from TreeViewWraps"
  },
  "TreeViewWraps.ExpandAll": {
    "prefix": "TreeViewWraps.ExpandAll",
    "body": "TreeViewWraps.ExpandAll",
    "description": "ExpandAll from TreeViewWraps"
  },
  "TreeViewWraps.getHitNode": {
    "prefix": "TreeViewWraps.getHitNode",
    "body": "TreeViewWraps.getHitNode",
    "description": "getHitNode from TreeViewWraps"
  },
  "TreeViewWraps.InitImageList": {
    "prefix": "TreeViewWraps.InitImageList",
    "body": "TreeViewWraps.InitImageList",
    "description": "InitImageList from TreeViewWraps"
  },
  "TreeViewWraps.InitTreeView": {
    "prefix": "TreeViewWraps.InitTreeView",
    "body": "TreeViewWraps.InitTreeView",
    "description": "InitTreeView from TreeViewWraps"
  },
  "TreeViewWraps.IsIconFile": {
    "prefix": "TreeViewWraps.IsIconFile",
    "body": "TreeViewWraps.IsIconFile",
    "description": "IsIconFile from TreeViewWraps"
  },
  "TreeViewWraps.m_dnColor": {
    "prefix": "TreeViewWraps.m_dnColor",
    "body": "TreeViewWraps.m_dnColor",
    "description": "m_dnColor from TreeViewWraps"
  },
  "TreeViewWraps.MXSColor_to_dotNetColor": {
    "prefix": "TreeViewWraps.MXSColor_to_dotNetColor",
    "body": "TreeViewWraps.MXSColor_to_dotNetColor",
    "description": "MXSColor_to_dotNetColor from TreeViewWraps"
  },
  "units.CustomName": {
    "prefix": "units.CustomName",
    "body": "units.CustomName",
    "description": "CustomName from units"
  },
  "units.CustomUnit": {
    "prefix": "units.CustomUnit",
    "body": "units.CustomUnit",
    "description": "CustomUnit from units"
  },
  "units.CustomValue": {
    "prefix": "units.CustomValue",
    "body": "units.CustomValue",
    "description": "CustomValue from units"
  },
  "units.DisplayType": {
    "prefix": "units.DisplayType",
    "body": "units.DisplayType",
    "description": "DisplayType from units"
  },
  "units.formatValue": {
    "prefix": "units.formatValue",
    "body": "units.formatValue",
    "description": "formatValue from units"
  },
  "units.MetricType": {
    "prefix": "units.MetricType",
    "body": "units.MetricType",
    "description": "MetricType from units"
  },
  "units.SystemScale": {
    "prefix": "units.SystemScale",
    "body": "units.SystemScale",
    "description": "SystemScale from units"
  },
  "units.SystemType": {
    "prefix": "units.SystemType",
    "body": "units.SystemType",
    "description": "SystemType from units"
  },
  "units.USFrac": {
    "prefix": "units.USFrac",
    "body": "units.USFrac",
    "description": "USFrac from units"
  },
  "units.USType": {
    "prefix": "units.USType",
    "body": "units.USType",
    "description": "USType from units"
  },
  "uvwManipUtils.GetUVGen": {
    "prefix": "uvwManipUtils.GetUVGen",
    "body": "uvwManipUtils.GetUVGen",
    "description": "GetUVGen from uvwManipUtils"
  },
  "uvwManipUtils.GetUVGenFromMat": {
    "prefix": "uvwManipUtils.GetUVGenFromMat",
    "body": "uvwManipUtils.GetUVGenFromMat",
    "description": "GetUVGenFromMat from uvwManipUtils"
  },
  "uvwManipUtils.GetUVTransform": {
    "prefix": "uvwManipUtils.GetUVTransform",
    "body": "uvwManipUtils.GetUVTransform",
    "description": "GetUVTransform from uvwManipUtils"
  },
  "uvwManipUtils.gizmoAxis": {
    "prefix": "uvwManipUtils.gizmoAxis",
    "body": "uvwManipUtils.gizmoAxis",
    "description": "gizmoAxis from uvwManipUtils"
  },
  "uvwManipUtils.gizmoAxisTM": {
    "prefix": "uvwManipUtils.gizmoAxisTM",
    "body": "uvwManipUtils.gizmoAxisTM",
    "description": "gizmoAxisTM from uvwManipUtils"
  },
  "uvwManipUtils.isPhysicalScaleMapper": {
    "prefix": "uvwManipUtils.isPhysicalScaleMapper",
    "body": "uvwManipUtils.isPhysicalScaleMapper",
    "description": "isPhysicalScaleMapper from uvwManipUtils"
  },
  "uvwManipUtils.makeCubeGizmo": {
    "prefix": "uvwManipUtils.makeCubeGizmo",
    "body": "uvwManipUtils.makeCubeGizmo",
    "description": "makeCubeGizmo from uvwManipUtils"
  },
  "uvwManipUtils.makeXYGizmoAxis": {
    "prefix": "uvwManipUtils.makeXYGizmoAxis",
    "body": "uvwManipUtils.makeXYGizmoAxis",
    "description": "makeXYGizmoAxis from uvwManipUtils"
  },
  "uvwManipUtils.projectPointToGizmo": {
    "prefix": "uvwManipUtils.projectPointToGizmo",
    "body": "uvwManipUtils.projectPointToGizmo",
    "description": "projectPointToGizmo from uvwManipUtils"
  },
  "uvwManipUtils.projectPointToPlane": {
    "prefix": "uvwManipUtils.projectPointToPlane",
    "body": "uvwManipUtils.projectPointToPlane",
    "description": "projectPointToPlane from uvwManipUtils"
  },
  "uvwManipUtils.usesGizmo": {
    "prefix": "uvwManipUtils.usesGizmo",
    "body": "uvwManipUtils.usesGizmo",
    "description": "usesGizmo from uvwManipUtils"
  },
  "UVWTweakFalloffSpinnerCallback.OnChanged": {
    "prefix": "UVWTweakFalloffSpinnerCallback.OnChanged",
    "body": "UVWTweakFalloffSpinnerCallback.OnChanged",
    "description": "OnChanged from UVWTweakFalloffSpinnerCallback"
  },
  "UVWTweakFullStrengthSpinnerCallback.OnChanged": {
    "prefix": "UVWTweakFullStrengthSpinnerCallback.OnChanged",
    "body": "UVWTweakFullStrengthSpinnerCallback.OnChanged",
    "description": "OnChanged from UVWTweakFullStrengthSpinnerCallback"
  },
  "UVWTweakSpinnerCallback.OnChanged": {
    "prefix": "UVWTweakSpinnerCallback.OnChanged",
    "body": "UVWTweakSpinnerCallback.OnChanged",
    "description": "OnChanged from UVWTweakSpinnerCallback"
  },
  "UVWTweakStrengthSpinnerCallback.OnChanged": {
    "prefix": "UVWTweakStrengthSpinnerCallback.OnChanged",
    "body": "UVWTweakStrengthSpinnerCallback.OnChanged",
    "description": "OnChanged from UVWTweakStrengthSpinnerCallback"
  },
  "Vertex_Weight_Spinner.isEnabled": {
    "prefix": "Vertex_Weight_Spinner.isEnabled",
    "body": "Vertex_Weight_Spinner.isEnabled",
    "description": "isEnabled from Vertex_Weight_Spinner"
  },
  "Vertex_Weight_Spinner.OnChanged": {
    "prefix": "Vertex_Weight_Spinner.OnChanged",
    "body": "Vertex_Weight_Spinner.OnChanged",
    "description": "OnChanged from Vertex_Weight_Spinner"
  },
  "VertexSelect_B_Spinner.controller": {
    "prefix": "VertexSelect_B_Spinner.controller",
    "body": "VertexSelect_B_Spinner.controller",
    "description": "controller from VertexSelect_B_Spinner"
  },
  "VertexSelect_B_Spinner.isEnabled": {
    "prefix": "VertexSelect_B_Spinner.isEnabled",
    "body": "VertexSelect_B_Spinner.isEnabled",
    "description": "isEnabled from VertexSelect_B_Spinner"
  },
  "VertexSelect_B_Spinner.OnChanged": {
    "prefix": "VertexSelect_B_Spinner.OnChanged",
    "body": "VertexSelect_B_Spinner.OnChanged",
    "description": "OnChanged from VertexSelect_B_Spinner"
  },
  "VertexSelect_ColorSwatch.controller": {
    "prefix": "VertexSelect_ColorSwatch.controller",
    "body": "VertexSelect_ColorSwatch.controller",
    "description": "controller from VertexSelect_ColorSwatch"
  },
  "VertexSelect_ColorSwatch.isEnabled": {
    "prefix": "VertexSelect_ColorSwatch.isEnabled",
    "body": "VertexSelect_ColorSwatch.isEnabled",
    "description": "isEnabled from VertexSelect_ColorSwatch"
  },
  "VertexSelect_ColorSwatch.OnChanged": {
    "prefix": "VertexSelect_ColorSwatch.OnChanged",
    "body": "VertexSelect_ColorSwatch.OnChanged",
    "description": "OnChanged from VertexSelect_ColorSwatch"
  },
  "VertexSelect_G_Spinner.controller": {
    "prefix": "VertexSelect_G_Spinner.controller",
    "body": "VertexSelect_G_Spinner.controller",
    "description": "controller from VertexSelect_G_Spinner"
  },
  "VertexSelect_G_Spinner.isEnabled": {
    "prefix": "VertexSelect_G_Spinner.isEnabled",
    "body": "VertexSelect_G_Spinner.isEnabled",
    "description": "isEnabled from VertexSelect_G_Spinner"
  },
  "VertexSelect_G_Spinner.OnChanged": {
    "prefix": "VertexSelect_G_Spinner.OnChanged",
    "body": "VertexSelect_G_Spinner.OnChanged",
    "description": "OnChanged from VertexSelect_G_Spinner"
  },
  "VertexSelect_R_Spinner.controller": {
    "prefix": "VertexSelect_R_Spinner.controller",
    "body": "VertexSelect_R_Spinner.controller",
    "description": "controller from VertexSelect_R_Spinner"
  },
  "VertexSelect_R_Spinner.isEnabled": {
    "prefix": "VertexSelect_R_Spinner.isEnabled",
    "body": "VertexSelect_R_Spinner.isEnabled",
    "description": "isEnabled from VertexSelect_R_Spinner"
  },
  "VertexSelect_R_Spinner.OnChanged": {
    "prefix": "VertexSelect_R_Spinner.OnChanged",
    "body": "VertexSelect_R_Spinner.OnChanged",
    "description": "OnChanged from VertexSelect_R_Spinner"
  },
  "VFB_methods_struct.CommitMentalRayChanges": {
    "prefix": "VFB_methods_struct.CommitMentalRayChanges",
    "body": "VFB_methods_struct.CommitMentalRayChanges",
    "description": "CommitMentalRayChanges from VFB_methods_struct"
  },
  "VFB_methods_struct.CompareViewportInfo": {
    "prefix": "VFB_methods_struct.CompareViewportInfo",
    "body": "VFB_methods_struct.CompareViewportInfo",
    "description": "CompareViewportInfo from VFB_methods_struct"
  },
  "VFB_methods_struct.DeepCompare": {
    "prefix": "VFB_methods_struct.DeepCompare",
    "body": "VFB_methods_struct.DeepCompare",
    "description": "DeepCompare from VFB_methods_struct"
  },
  "VFB_methods_struct.finalGatherPresetData": {
    "prefix": "VFB_methods_struct.finalGatherPresetData",
    "body": "VFB_methods_struct.finalGatherPresetData",
    "description": "finalGatherPresetData from VFB_methods_struct"
  },
  "VFB_methods_struct.GetRolloutSize": {
    "prefix": "VFB_methods_struct.GetRolloutSize",
    "body": "VFB_methods_struct.GetRolloutSize",
    "description": "GetRolloutSize from VFB_methods_struct"
  },
  "VFB_methods_struct.GetViewportInfo": {
    "prefix": "VFB_methods_struct.GetViewportInfo",
    "body": "VFB_methods_struct.GetViewportInfo",
    "description": "GetViewportInfo from VFB_methods_struct"
  },
  "VFB_methods_struct.GetViewportName": {
    "prefix": "VFB_methods_struct.GetViewportName",
    "body": "VFB_methods_struct.GetViewportName",
    "description": "GetViewportName from VFB_methods_struct"
  },
  "VFB_methods_struct.glossyReflectionPrecisionPresetData": {
    "prefix": "VFB_methods_struct.glossyReflectionPrecisionPresetData",
    "body": "VFB_methods_struct.glossyReflectionPrecisionPresetData",
    "description": "glossyReflectionPrecisionPresetData from VFB_methods_struct"
  },
  "VFB_methods_struct.glossyRefractionPrecisionPresetData": {
    "prefix": "VFB_methods_struct.glossyRefractionPrecisionPresetData",
    "body": "VFB_methods_struct.glossyRefractionPrecisionPresetData",
    "description": "glossyRefractionPrecisionPresetData from VFB_methods_struct"
  },
  "VFB_methods_struct.HandleRenderModeDropdown": {
    "prefix": "VFB_methods_struct.HandleRenderModeDropdown",
    "body": "VFB_methods_struct.HandleRenderModeDropdown",
    "description": "HandleRenderModeDropdown from VFB_methods_struct"
  },
  "VFB_methods_struct.imagePrecisionPresetData": {
    "prefix": "VFB_methods_struct.imagePrecisionPresetData",
    "body": "VFB_methods_struct.imagePrecisionPresetData",
    "description": "imagePrecisionPresetData from VFB_methods_struct"
  },
  "VFB_methods_struct.init": {
    "prefix": "VFB_methods_struct.init",
    "body": "VFB_methods_struct.init",
    "description": "init from VFB_methods_struct"
  },
  "VFB_methods_struct.LookupTableComparator": {
    "prefix": "VFB_methods_struct.LookupTableComparator",
    "body": "VFB_methods_struct.LookupTableComparator",
    "description": "LookupTableComparator from VFB_methods_struct"
  },
  "VFB_methods_struct.LookupTableLookup": {
    "prefix": "VFB_methods_struct.LookupTableLookup",
    "body": "VFB_methods_struct.LookupTableLookup",
    "description": "LookupTableLookup from VFB_methods_struct"
  },
  "VFB_methods_struct.reset": {
    "prefix": "VFB_methods_struct.reset",
    "body": "VFB_methods_struct.reset",
    "description": "reset from VFB_methods_struct"
  },
  "VFB_methods_struct.showOverlays": {
    "prefix": "VFB_methods_struct.showOverlays",
    "body": "VFB_methods_struct.showOverlays",
    "description": "showOverlays from VFB_methods_struct"
  },
  "VFB_methods_struct.showRollups": {
    "prefix": "VFB_methods_struct.showRollups",
    "body": "VFB_methods_struct.showRollups",
    "description": "showRollups from VFB_methods_struct"
  },
  "VFB_methods_struct.softShadowPrecisionPresetData": {
    "prefix": "VFB_methods_struct.softShadowPrecisionPresetData",
    "body": "VFB_methods_struct.softShadowPrecisionPresetData",
    "description": "softShadowPrecisionPresetData from VFB_methods_struct"
  },
  "VFB_methods_struct.StringTableLookup": {
    "prefix": "VFB_methods_struct.StringTableLookup",
    "body": "VFB_methods_struct.StringTableLookup",
    "description": "StringTableLookup from VFB_methods_struct"
  },
  "VFB_methods_struct.VFB_AddRollouts": {
    "prefix": "VFB_methods_struct.VFB_AddRollouts",
    "body": "VFB_methods_struct.VFB_AddRollouts",
    "description": "VFB_AddRollouts from VFB_methods_struct"
  },
  "VFB_methods_struct.VFB_Interface": {
    "prefix": "VFB_methods_struct.VFB_Interface",
    "body": "VFB_methods_struct.VFB_Interface",
    "description": "VFB_Interface from VFB_methods_struct"
  },
  "VFB_methods_struct.VFB_IsInitialized": {
    "prefix": "VFB_methods_struct.VFB_IsInitialized",
    "body": "VFB_methods_struct.VFB_IsInitialized",
    "description": "VFB_IsInitialized from VFB_methods_struct"
  },
  "VFB_methods_struct.VFB_RemoveRollouts": {
    "prefix": "VFB_methods_struct.VFB_RemoveRollouts",
    "body": "VFB_methods_struct.VFB_RemoveRollouts",
    "description": "VFB_RemoveRollouts from VFB_methods_struct"
  },
  "VFB_methods_struct.VFB_ResetRollouts": {
    "prefix": "VFB_methods_struct.VFB_ResetRollouts",
    "body": "VFB_methods_struct.VFB_ResetRollouts",
    "description": "VFB_ResetRollouts from VFB_methods_struct"
  },
  "VFB_methods_struct.VFB_RolloutInfo_Array": {
    "prefix": "VFB_methods_struct.VFB_RolloutInfo_Array",
    "body": "VFB_methods_struct.VFB_RolloutInfo_Array",
    "description": "VFB_RolloutInfo_Array from VFB_methods_struct"
  },
  "VFB_methods_struct.viewportInfo": {
    "prefix": "VFB_methods_struct.viewportInfo",
    "body": "VFB_methods_struct.viewportInfo",
    "description": "viewportInfo from VFB_methods_struct"
  },
  "VFB_methods_struct.viewportTypeTable": {
    "prefix": "VFB_methods_struct.viewportTypeTable",
    "body": "VFB_methods_struct.viewportTypeTable",
    "description": "viewportTypeTable from VFB_methods_struct"
  },
  "VFB_methods_struct.viewportTypeTableSorted": {
    "prefix": "VFB_methods_struct.viewportTypeTableSorted",
    "body": "VFB_methods_struct.viewportTypeTableSorted",
    "description": "viewportTypeTableSorted from VFB_methods_struct"
  },
  "VFB_ViewportInfo.totalVptNum_": {
    "prefix": "VFB_ViewportInfo.totalVptNum_",
    "body": "VFB_ViewportInfo.totalVptNum_",
    "description": "totalVptNum_ from VFB_ViewportInfo"
  },
  "VFB_ViewportInfoEntry.index_": {
    "prefix": "VFB_ViewportInfoEntry.index_",
    "body": "VFB_ViewportInfoEntry.index_",
    "description": "index_ from VFB_ViewportInfoEntry"
  },
  "VFB_ViewportInfoEntry.type_": {
    "prefix": "VFB_ViewportInfoEntry.type_",
    "body": "VFB_ViewportInfoEntry.type_",
    "description": "type_ from VFB_ViewportInfoEntry"
  },
  "VFB_ViewportInfoEntry.viewId_": {
    "prefix": "VFB_ViewportInfoEntry.viewId_",
    "body": "VFB_ViewportInfoEntry.viewId_",
    "description": "viewId_ from VFB_ViewportInfoEntry"
  },
  "vfields.computeVectors": {
    "prefix": "vfields.computeVectors",
    "body": "vfields.computeVectors",
    "description": "computeVectors from vfields"
  },
  "viewport.activeViewport": {
    "prefix": "viewport.activeViewport",
    "body": "viewport.activeViewport",
    "description": "activeViewport from viewport"
  },
  "viewport.ActiveViewportEx": {
    "prefix": "viewport.ActiveViewportEx",
    "body": "viewport.ActiveViewportEx",
    "description": "ActiveViewportEx from viewport"
  },
  "viewport.activeViewportId": {
    "prefix": "viewport.activeViewportId",
    "body": "viewport.activeViewportId",
    "description": "activeViewportId from viewport"
  },
  "viewport.CanSetToViewport": {
    "prefix": "viewport.CanSetToViewport",
    "body": "viewport.CanSetToViewport",
    "description": "CanSetToViewport from viewport"
  },
  "viewport.DispBkgImage": {
    "prefix": "viewport.DispBkgImage",
    "body": "viewport.DispBkgImage",
    "description": "DispBkgImage from viewport"
  },
  "viewport.EnableSolidBackgroundColorMode": {
    "prefix": "viewport.EnableSolidBackgroundColorMode",
    "body": "viewport.EnableSolidBackgroundColorMode",
    "description": "EnableSolidBackgroundColorMode from viewport"
  },
  "viewport.GetAdaptiveDegCameraDistancePriority": {
    "prefix": "viewport.GetAdaptiveDegCameraDistancePriority",
    "body": "viewport.GetAdaptiveDegCameraDistancePriority",
    "description": "GetAdaptiveDegCameraDistancePriority from viewport"
  },
  "viewport.GetAdaptiveDegDegradeLight": {
    "prefix": "viewport.GetAdaptiveDegDegradeLight",
    "body": "viewport.GetAdaptiveDegDegradeLight",
    "description": "GetAdaptiveDegDegradeLight from viewport"
  },
  "viewport.GetAdaptiveDegDisplayModeBox": {
    "prefix": "viewport.GetAdaptiveDegDisplayModeBox",
    "body": "viewport.GetAdaptiveDegDisplayModeBox",
    "description": "GetAdaptiveDegDisplayModeBox from viewport"
  },
  "viewport.GetAdaptiveDegDisplayModeCurrent": {
    "prefix": "viewport.GetAdaptiveDegDisplayModeCurrent",
    "body": "viewport.GetAdaptiveDegDisplayModeCurrent",
    "description": "GetAdaptiveDegDisplayModeCurrent from viewport"
  },
  "viewport.GetAdaptiveDegDisplayModeFastShaded": {
    "prefix": "viewport.GetAdaptiveDegDisplayModeFastShaded",
    "body": "viewport.GetAdaptiveDegDisplayModeFastShaded",
    "description": "GetAdaptiveDegDisplayModeFastShaded from viewport"
  },
  "viewport.GetAdaptiveDegDisplayModeHide": {
    "prefix": "viewport.GetAdaptiveDegDisplayModeHide",
    "body": "viewport.GetAdaptiveDegDisplayModeHide",
    "description": "GetAdaptiveDegDisplayModeHide from viewport"
  },
  "viewport.GetAdaptiveDegDisplayModePoint": {
    "prefix": "viewport.GetAdaptiveDegDisplayModePoint",
    "body": "viewport.GetAdaptiveDegDisplayModePoint",
    "description": "GetAdaptiveDegDisplayModePoint from viewport"
  },
  "viewport.GetAdaptiveDegDisplayModeWire": {
    "prefix": "viewport.GetAdaptiveDegDisplayModeWire",
    "body": "viewport.GetAdaptiveDegDisplayModeWire",
    "description": "GetAdaptiveDegDisplayModeWire from viewport"
  },
  "viewport.GetAdaptiveDegDrawBackfaces": {
    "prefix": "viewport.GetAdaptiveDegDrawBackfaces",
    "body": "viewport.GetAdaptiveDegDrawBackfaces",
    "description": "GetAdaptiveDegDrawBackfaces from viewport"
  },
  "viewport.GetAdaptiveDegGoalFPS": {
    "prefix": "viewport.GetAdaptiveDegGoalFPS",
    "body": "viewport.GetAdaptiveDegGoalFPS",
    "description": "GetAdaptiveDegGoalFPS from viewport"
  },
  "viewport.GetAdaptiveDegMinSize": {
    "prefix": "viewport.GetAdaptiveDegMinSize",
    "body": "viewport.GetAdaptiveDegMinSize",
    "description": "GetAdaptiveDegMinSize from viewport"
  },
  "viewport.GetAdaptiveDegNeverDegradeSelected": {
    "prefix": "viewport.GetAdaptiveDegNeverDegradeSelected",
    "body": "viewport.GetAdaptiveDegNeverDegradeSelected",
    "description": "GetAdaptiveDegNeverDegradeSelected from viewport"
  },
  "viewport.GetAdaptiveDegNeverRedrawAfterDegrade": {
    "prefix": "viewport.GetAdaptiveDegNeverRedrawAfterDegrade",
    "body": "viewport.GetAdaptiveDegNeverRedrawAfterDegrade",
    "description": "GetAdaptiveDegNeverRedrawAfterDegrade from viewport"
  },
  "viewport.GetAdaptiveDegScreenSizePriority": {
    "prefix": "viewport.GetAdaptiveDegScreenSizePriority",
    "body": "viewport.GetAdaptiveDegScreenSizePriority",
    "description": "GetAdaptiveDegScreenSizePriority from viewport"
  },
  "viewport.GetBlowupRect": {
    "prefix": "viewport.GetBlowupRect",
    "body": "viewport.GetBlowupRect",
    "description": "GetBlowupRect from viewport"
  },
  "viewport.GetCamera": {
    "prefix": "viewport.GetCamera",
    "body": "viewport.GetCamera",
    "description": "GetCamera from viewport"
  },
  "viewport.GetClipScale": {
    "prefix": "viewport.GetClipScale",
    "body": "viewport.GetClipScale",
    "description": "GetClipScale from viewport"
  },
  "viewport.GetFocalDistance": {
    "prefix": "viewport.GetFocalDistance",
    "body": "viewport.GetFocalDistance",
    "description": "GetFocalDistance from viewport"
  },
  "viewport.GetFOV": {
    "prefix": "viewport.GetFOV",
    "body": "viewport.GetFOV",
    "description": "GetFOV from viewport"
  },
  "viewport.GetFPS": {
    "prefix": "viewport.GetFPS",
    "body": "viewport.GetFPS",
    "description": "GetFPS from viewport"
  },
  "viewport.GetGridVisibility": {
    "prefix": "viewport.GetGridVisibility",
    "body": "viewport.GetGridVisibility",
    "description": "GetGridVisibility from viewport"
  },
  "viewport.GetID": {
    "prefix": "viewport.GetID",
    "body": "viewport.GetID",
    "description": "GetID from viewport"
  },
  "viewport.GetLayout": {
    "prefix": "viewport.GetLayout",
    "body": "viewport.GetLayout",
    "description": "GetLayout from viewport"
  },
  "viewport.GetRegionRect": {
    "prefix": "viewport.GetRegionRect",
    "body": "viewport.GetRegionRect",
    "description": "GetRegionRect from viewport"
  },
  "viewport.GetScreenScaleFactor": {
    "prefix": "viewport.GetScreenScaleFactor",
    "body": "viewport.GetScreenScaleFactor",
    "description": "GetScreenScaleFactor from viewport"
  },
  "viewport.GetShowEdgeFaces": {
    "prefix": "viewport.GetShowEdgeFaces",
    "body": "viewport.GetShowEdgeFaces",
    "description": "GetShowEdgeFaces from viewport"
  },
  "viewport.GetTM": {
    "prefix": "viewport.GetTM",
    "body": "viewport.GetTM",
    "description": "GetTM from viewport"
  },
  "viewport.GetTransparencyLevel": {
    "prefix": "viewport.GetTransparencyLevel",
    "body": "viewport.GetTransparencyLevel",
    "description": "GetTransparencyLevel from viewport"
  },
  "viewport.getType": {
    "prefix": "viewport.getType",
    "body": "viewport.getType",
    "description": "getType from viewport"
  },
  "viewport.getViewportDib": {
    "prefix": "viewport.getViewportDib",
    "body": "viewport.getViewportDib",
    "description": "getViewportDib from viewport"
  },
  "viewport.isEnabled": {
    "prefix": "viewport.isEnabled",
    "body": "viewport.isEnabled",
    "description": "isEnabled from viewport"
  },
  "viewport.IsPerspView": {
    "prefix": "viewport.IsPerspView",
    "body": "viewport.IsPerspView",
    "description": "IsPerspView from viewport"
  },
  "viewport.IsSolidBackgroundColorMode": {
    "prefix": "viewport.IsSolidBackgroundColorMode",
    "body": "viewport.IsSolidBackgroundColorMode",
    "description": "IsSolidBackgroundColorMode from viewport"
  },
  "viewport.IsWire": {
    "prefix": "viewport.IsWire",
    "body": "viewport.IsWire",
    "description": "IsWire from viewport"
  },
  "viewport.NumViewEx": {
    "prefix": "viewport.NumViewEx",
    "body": "viewport.NumViewEx",
    "description": "NumViewEx from viewport"
  },
  "viewport.numViews": {
    "prefix": "viewport.numViews",
    "body": "viewport.numViews",
    "description": "numViews from viewport"
  },
  "viewport.Pan": {
    "prefix": "viewport.Pan",
    "body": "viewport.Pan",
    "description": "Pan from viewport"
  },
  "viewport.resetAllViews": {
    "prefix": "viewport.resetAllViews",
    "body": "viewport.resetAllViews",
    "description": "resetAllViews from viewport"
  },
  "viewport.Rotate": {
    "prefix": "viewport.Rotate",
    "body": "viewport.Rotate",
    "description": "Rotate from viewport"
  },
  "viewport.SetAdaptiveDegCameraDistancePriority": {
    "prefix": "viewport.SetAdaptiveDegCameraDistancePriority",
    "body": "viewport.SetAdaptiveDegCameraDistancePriority",
    "description": "SetAdaptiveDegCameraDistancePriority from viewport"
  },
  "viewport.SetAdaptiveDegDegradeLight": {
    "prefix": "viewport.SetAdaptiveDegDegradeLight",
    "body": "viewport.SetAdaptiveDegDegradeLight",
    "description": "SetAdaptiveDegDegradeLight from viewport"
  },
  "viewport.SetAdaptiveDegDisplayModeBox": {
    "prefix": "viewport.SetAdaptiveDegDisplayModeBox",
    "body": "viewport.SetAdaptiveDegDisplayModeBox",
    "description": "SetAdaptiveDegDisplayModeBox from viewport"
  },
  "viewport.SetAdaptiveDegDisplayModeCurrent": {
    "prefix": "viewport.SetAdaptiveDegDisplayModeCurrent",
    "body": "viewport.SetAdaptiveDegDisplayModeCurrent",
    "description": "SetAdaptiveDegDisplayModeCurrent from viewport"
  },
  "viewport.SetAdaptiveDegDisplayModeFastShaded": {
    "prefix": "viewport.SetAdaptiveDegDisplayModeFastShaded",
    "body": "viewport.SetAdaptiveDegDisplayModeFastShaded",
    "description": "SetAdaptiveDegDisplayModeFastShaded from viewport"
  },
  "viewport.SetAdaptiveDegDisplayModeHide": {
    "prefix": "viewport.SetAdaptiveDegDisplayModeHide",
    "body": "viewport.SetAdaptiveDegDisplayModeHide",
    "description": "SetAdaptiveDegDisplayModeHide from viewport"
  },
  "viewport.SetAdaptiveDegDisplayModePoint": {
    "prefix": "viewport.SetAdaptiveDegDisplayModePoint",
    "body": "viewport.SetAdaptiveDegDisplayModePoint",
    "description": "SetAdaptiveDegDisplayModePoint from viewport"
  },
  "viewport.SetAdaptiveDegDisplayModeWire": {
    "prefix": "viewport.SetAdaptiveDegDisplayModeWire",
    "body": "viewport.SetAdaptiveDegDisplayModeWire",
    "description": "SetAdaptiveDegDisplayModeWire from viewport"
  },
  "viewport.SetAdaptiveDegDrawBackfaces": {
    "prefix": "viewport.SetAdaptiveDegDrawBackfaces",
    "body": "viewport.SetAdaptiveDegDrawBackfaces",
    "description": "SetAdaptiveDegDrawBackfaces from viewport"
  },
  "viewport.SetAdaptiveDegGoalFPS": {
    "prefix": "viewport.SetAdaptiveDegGoalFPS",
    "body": "viewport.SetAdaptiveDegGoalFPS",
    "description": "SetAdaptiveDegGoalFPS from viewport"
  },
  "viewport.SetAdaptiveDegMinSize": {
    "prefix": "viewport.SetAdaptiveDegMinSize",
    "body": "viewport.SetAdaptiveDegMinSize",
    "description": "SetAdaptiveDegMinSize from viewport"
  },
  "viewport.SetAdaptiveDegNeverDegradeSelected": {
    "prefix": "viewport.SetAdaptiveDegNeverDegradeSelected",
    "body": "viewport.SetAdaptiveDegNeverDegradeSelected",
    "description": "SetAdaptiveDegNeverDegradeSelected from viewport"
  },
  "viewport.SetAdaptiveDegNeverRedrawAfterDegrade": {
    "prefix": "viewport.SetAdaptiveDegNeverRedrawAfterDegrade",
    "body": "viewport.SetAdaptiveDegNeverRedrawAfterDegrade",
    "description": "SetAdaptiveDegNeverRedrawAfterDegrade from viewport"
  },
  "viewport.SetAdaptiveDegScreenSizePriority": {
    "prefix": "viewport.SetAdaptiveDegScreenSizePriority",
    "body": "viewport.SetAdaptiveDegScreenSizePriority",
    "description": "SetAdaptiveDegScreenSizePriority from viewport"
  },
  "viewport.SetBlowupRect": {
    "prefix": "viewport.SetBlowupRect",
    "body": "viewport.SetBlowupRect",
    "description": "SetBlowupRect from viewport"
  },
  "viewport.SetCamera": {
    "prefix": "viewport.SetCamera",
    "body": "viewport.SetCamera",
    "description": "SetCamera from viewport"
  },
  "viewport.SetClipScale": {
    "prefix": "viewport.SetClipScale",
    "body": "viewport.SetClipScale",
    "description": "SetClipScale from viewport"
  },
  "viewport.SetFocalDistance": {
    "prefix": "viewport.SetFocalDistance",
    "body": "viewport.SetFocalDistance",
    "description": "SetFocalDistance from viewport"
  },
  "viewport.SetFOV": {
    "prefix": "viewport.SetFOV",
    "body": "viewport.SetFOV",
    "description": "SetFOV from viewport"
  },
  "viewport.SetGridVisibility": {
    "prefix": "viewport.SetGridVisibility",
    "body": "viewport.SetGridVisibility",
    "description": "SetGridVisibility from viewport"
  },
  "viewport.SetLayout": {
    "prefix": "viewport.SetLayout",
    "body": "viewport.SetLayout",
    "description": "SetLayout from viewport"
  },
  "viewport.SetRegionRect": {
    "prefix": "viewport.SetRegionRect",
    "body": "viewport.SetRegionRect",
    "description": "SetRegionRect from viewport"
  },
  "viewport.SetRenderLevel": {
    "prefix": "viewport.SetRenderLevel",
    "body": "viewport.SetRenderLevel",
    "description": "SetRenderLevel from viewport"
  },
  "viewport.SetShowEdgeFaces": {
    "prefix": "viewport.SetShowEdgeFaces",
    "body": "viewport.SetShowEdgeFaces",
    "description": "SetShowEdgeFaces from viewport"
  },
  "viewport.SetTM": {
    "prefix": "viewport.SetTM",
    "body": "viewport.SetTM",
    "description": "SetTM from viewport"
  },
  "viewport.SetTransparencyLevel": {
    "prefix": "viewport.SetTransparencyLevel",
    "body": "viewport.SetTransparencyLevel",
    "description": "SetTransparencyLevel from viewport"
  },
  "viewport.SetType": {
    "prefix": "viewport.SetType",
    "body": "viewport.SetType",
    "description": "SetType from viewport"
  },
  "viewport.Zoom": {
    "prefix": "viewport.Zoom",
    "body": "viewport.Zoom",
    "description": "Zoom from viewport"
  },
  "viewport.ZoomPerspective": {
    "prefix": "viewport.ZoomPerspective",
    "body": "viewport.ZoomPerspective",
    "description": "ZoomPerspective from viewport"
  },
  "viewport.ZoomToBounds": {
    "prefix": "viewport.ZoomToBounds",
    "body": "viewport.ZoomToBounds",
    "description": "ZoomToBounds from viewport"
  },
  "VLD.Disable": {
    "prefix": "VLD.Disable",
    "body": "VLD.Disable",
    "description": "Disable from VLD"
  },
  "VLD.DisableModule": {
    "prefix": "VLD.DisableModule",
    "body": "VLD.DisableModule",
    "description": "DisableModule from VLD"
  },
  "VLD.Enable": {
    "prefix": "VLD.Enable",
    "body": "VLD.Enable",
    "description": "Enable from VLD"
  },
  "VLD.RefreshModules": {
    "prefix": "VLD.RefreshModules",
    "body": "VLD.RefreshModules",
    "description": "RefreshModules from VLD"
  },
  "VLD.ReportLeaks": {
    "prefix": "VLD.ReportLeaks",
    "body": "VLD.ReportLeaks",
    "description": "ReportLeaks from VLD"
  },
  "VLD.ResolveCallstacks": {
    "prefix": "VLD.ResolveCallstacks",
    "body": "VLD.ResolveCallstacks",
    "description": "ResolveCallstacks from VLD"
  },
  "VLD.Restore": {
    "prefix": "VLD.Restore",
    "body": "VLD.Restore",
    "description": "Restore from VLD"
  },
  "VLD.TestLeakMemory": {
    "prefix": "VLD.TestLeakMemory",
    "body": "VLD.TestLeakMemory",
    "description": "TestLeakMemory from VLD"
  },
  "WAVsound.filename": {
    "prefix": "WAVsound.filename",
    "body": "WAVsound.filename",
    "description": "filename from WAVsound"
  },
  "WAVsound.isPlaying": {
    "prefix": "WAVsound.isPlaying",
    "body": "WAVsound.isPlaying",
    "description": "isPlaying from WAVsound"
  },
  "WAVsound.mute": {
    "prefix": "WAVsound.mute",
    "body": "WAVsound.mute",
    "description": "mute from WAVsound"
  },
  "WAVsound.scrub": {
    "prefix": "WAVsound.scrub",
    "body": "WAVsound.scrub",
    "description": "scrub from WAVsound"
  },
  "WAVsound.start": {
    "prefix": "WAVsound.start",
    "body": "WAVsound.start",
    "description": "start from WAVsound"
  },
  "windows.getChildHWND": {
    "prefix": "windows.getChildHWND",
    "body": "windows.getChildHWND",
    "description": "getChildHWND from windows"
  },
  "windows.getChildrenHWND": {
    "prefix": "windows.getChildrenHWND",
    "body": "windows.getChildrenHWND",
    "description": "getChildrenHWND from windows"
  },
  "windows.getDesktopHWND": {
    "prefix": "windows.getDesktopHWND",
    "body": "windows.getDesktopHWND",
    "description": "getDesktopHWND from windows"
  },
  "windows.getHWNDData": {
    "prefix": "windows.getHWNDData",
    "body": "windows.getHWNDData",
    "description": "getHWNDData from windows"
  },
  "windows.getMAXHWND": {
    "prefix": "windows.getMAXHWND",
    "body": "windows.getMAXHWND",
    "description": "getMAXHWND from windows"
  },
  "windows.postMessage": {
    "prefix": "windows.postMessage",
    "body": "windows.postMessage",
    "description": "postMessage from windows"
  },
  "windows.processPostedMessages": {
    "prefix": "windows.processPostedMessages",
    "body": "windows.processPostedMessages",
    "description": "processPostedMessages from windows"
  },
  "windows.sendMessage": {
    "prefix": "windows.sendMessage",
    "body": "windows.sendMessage",
    "description": "sendMessage from windows"
  },
  "xrefPaths.add": {
    "prefix": "xrefPaths.add",
    "body": "xrefPaths.add",
    "description": "add from xrefPaths"
  },
  "xrefPaths.count": {
    "prefix": "xrefPaths.count",
    "body": "xrefPaths.count",
    "description": "count from xrefPaths"
  },
  "xrefPaths.get": {
    "prefix": "xrefPaths.get",
    "body": "xrefPaths.get",
    "description": "get from xrefPaths"
  },
  "xrefPaths.getFullFilePath": {
    "prefix": "xrefPaths.getFullFilePath",
    "body": "xrefPaths.getFullFilePath",
    "description": "getFullFilePath from xrefPaths"
  },
  "xrefs.addNewXRefFile": {
    "prefix": "xrefs.addNewXRefFile",
    "body": "xrefs.addNewXRefFile",
    "description": "addNewXRefFile from xrefs"
  },
  "xrefs.addNewXRefObject": {
    "prefix": "xrefs.addNewXRefObject",
    "body": "xrefs.addNewXRefObject",
    "description": "addNewXRefObject from xrefs"
  },
  "xrefs.attemptUnresolvedXRefs": {
    "prefix": "xrefs.attemptUnresolvedXRefs",
    "body": "xrefs.attemptUnresolvedXRefs",
    "description": "attemptUnresolvedXRefs from xrefs"
  },
  "xrefs.deleteAllXRefs": {
    "prefix": "xrefs.deleteAllXRefs",
    "body": "xrefs.deleteAllXRefs",
    "description": "deleteAllXRefs from xrefs"
  },
  "xrefs.getXRefFile": {
    "prefix": "xrefs.getXRefFile",
    "body": "xrefs.getXRefFile",
    "description": "getXRefFile from xrefs"
  },
  "xrefs.getXRefFileCount": {
    "prefix": "xrefs.getXRefFileCount",
    "body": "xrefs.getXRefFileCount",
    "description": "getXRefFileCount from xrefs"
  },
  "xrefs.updateChangedXRefs": {
    "prefix": "xrefs.updateChangedXRefs",
    "body": "xrefs.updateChangedXRefs",
    "description": "updateChangedXRefs from xrefs"
  },
  "ZBrushObject.clear": {
    "prefix": "ZBrushObject.clear",
    "body": "ZBrushObject.clear",
    "description": "clear from ZBrushObject"
  },
  "ZBrushObject.GetShortName": {
    "prefix": "ZBrushObject.GetShortName",
    "body": "ZBrushObject.GetShortName",
    "description": "GetShortName from ZBrushObject"
  },
  "ZBrushObject.isValid": {
    "prefix": "ZBrushObject.isValid",
    "body": "ZBrushObject.isValid",
    "description": "isValid from ZBrushObject"
  },
  "ZBrushObject.m_subToolName": {
    "prefix": "ZBrushObject.m_subToolName",
    "body": "ZBrushObject.m_subToolName",
    "description": "m_subToolName from ZBrushObject"
  }
}
